{
  "openapi": "3.0.0",
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "OpL": {
        "properties": {
          "name": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TransportType": {
        "type": "string",
        "enum": [
          "HIGH_SPEED_TRAIN",
          "INTERCITY_TRAIN",
          "INTER_REGIONAL_TRAIN",
          "REGIONAL_TRAIN",
          "CITY_TRAIN",
          "SUBWAY",
          "TRAM",
          "BUS",
          "FERRY",
          "FLIGHT",
          "CAR",
          "TAXI",
          "SHUTTLE",
          "BIKE",
          "SCOOTER",
          "WALK",
          "UNKNOWN"
        ],
        "description": "Type of transport. - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - FLIGHT (Flight [Flugzeug]) - CAR (Car [Auto]) - TAXI (Taxi) - SHUTTLE (Shuttle [Ruftaxi]) - BIKE ((E-)Bike [Fahrrad]) - SCOOTER ((E-)Scooter [Roller]) - WALK (Walk ([Laufen]) - UNKNOWN (Unknown)"
      },
      "CommonProductInfo": {
        "properties": {
          "name": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "This is actually category"
          },
          "operator": {
            "$ref": "#/components/schemas/OpL"
          },
          "admin": {
            "type": "string"
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "name",
          "transportType"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedProduct": {
        "$ref": "#/components/schemas/CommonProductInfo"
      },
      "RemL": {
        "properties": {
          "type": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "txtN": {
            "type": "string"
          },
          "txtS": {
            "type": "string"
          },
          "prio": {
            "type": "number",
            "format": "double"
          },
          "sIdx": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "type",
          "code",
          "icoX",
          "txtN"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonStopInfo": {
        "properties": {
          "isPlan": {
            "type": "boolean",
            "description": "Quelle dieser info ist die Planwagenreihung"
          },
          "scheduledPlatform": {
            "type": "string",
            "description": "Scheduled Platform"
          },
          "platform": {
            "type": "string",
            "description": "Best known platform, might be identical to scheduledPlatform"
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled time for this stop"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "best known time for this stop, might be identical to scheduledTime"
          },
          "delay": {
            "type": "integer",
            "format": "int32"
          },
          "reihung": {
            "type": "boolean"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "cancelled": {
            "type": "boolean"
          },
          "isRealTime": {
            "type": "boolean"
          }
        },
        "required": [
          "scheduledTime",
          "time"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "MinimalStopPlace": {
        "properties": {
          "name": {
            "type": "string"
          },
          "evaNumber": {
            "type": "string"
          },
          "ril100": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "evaNumber"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "AuslastungsValue": {
        "description": "1: Gering\n2: Hoch\n3: Sehr Hoch\n4: Ausgebucht",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "number"
      },
      "RouteAuslastung": {
        "properties": {
          "first": {
            "$ref": "#/components/schemas/AuslastungsValue"
          },
          "second": {
            "$ref": "#/components/schemas/AuslastungsValue"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "MessagePrio": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4"
        ],
        "description": "1: High; 2: Medium; 3: Low; 4: Done"
      },
      "IrisMessage": {
        "properties": {
          "text": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "superseded": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/MessagePrio"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "text"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HimIrisMessage": {
        "properties": {
          "text": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "superseded": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/MessagePrio"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "head": {
            "type": "string"
          },
          "short": {
            "type": "string"
          },
          "stopPlaceInfo": {
            "type": "string"
          },
          "source": {
            "type": "string"
          }
        },
        "required": [
          "text",
          "head"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Message": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/IrisMessage"
          },
          {
            "$ref": "#/components/schemas/HimIrisMessage"
          }
        ]
      },
      "StopAtStopPlace": {
        "description": "Stop at a particular stop-place [Haltestelle] for arrival / departure boards.",
        "properties": {
          "canceled": {
            "type": "boolean",
            "description": "Indicates whether the stop ie departure / arrival has been canceled [Haltausfall]."
          },
          "evaNumber": {
            "type": "string",
            "description": "Eva number of stop-place [Haltestelle]."
          },
          "name": {
            "type": "string",
            "description": "Name for stop-place [Haltestelle] in fixed language \\'DE\\'."
          }
        },
        "required": [
          "canceled",
          "evaNumber",
          "name"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "StopPlaceEmbedded": {
        "description": "Comprehensive stop-place [Haltestelle] information.",
        "properties": {
          "evaNumber": {
            "type": "string",
            "description": "Eva number of stop-place [Haltestelle]."
          },
          "name": {
            "type": "string",
            "description": "Name for stop-place [Haltestelle] in fixed language \\'DE\\'."
          }
        },
        "required": [
          "evaNumber",
          "name"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DirectionInfo": {
        "description": "Optional direction information [Richtungstext] for a particular transport that may differ from the destination [Zielhalt] on some parts of the journey. Take care that a text and / or a particular stop-place [Haltestelle] may be provided.",
        "properties": {
          "stopPlaces": {
            "items": {
              "$ref": "#/components/schemas/StopPlaceEmbedded"
            },
            "type": "array",
            "description": "Optional list of stop-places [Haltestellen] the direction text refers to. May be more than one stop-place for cases like for instance \\'Richtung Messe & Hauptbahnhof\\'."
          },
          "text": {
            "type": "string",
            "description": "Direction text [Richtungstext]. Must not necessarly be the name of a real stop-place [Haltestelle] (for instance \\'Richtung Automobilmesse\\'). For instance before the stop \\'fare\\' the transport has direction \\'fare\\', after \\'fare\\' has been reached maybe \\'central station\\' or \\'airport\\'."
          }
        },
        "required": [
          "stopPlaces",
          "text"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ReplacementTransport": {
        "description": "Replacement transport [Ersatzverkehr] information, in case transport is a rail replacement transport [Schienenersatzverkehr (SEV)] or emergency bus service [Busnotverkehr]. Indicates that this transport is a replacement transport.",
        "properties": {
          "realType": {
            "type": "string",
            "description": "Real type of replacement transport that may differ from sales perspective (for instance a \\'REGIONAL_TRAIN\\' is usuallay replaced by a \\'BUS\\'). Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - FLIGHT (Flight [Flugzeug]) - CAR (Car [Auto]) - TAXI (Taxi) - SHUTTLE (Shuttle [Ruftaxi]) - BIKE ((E-)Bike [Fahrrad]) - SCOOTER ((E-)Scooter [Roller]) - WALK (Walk ([Laufen]) - UNKNOWN (Unknown)"
          }
        },
        "required": [
          "realType"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TransportPublicDestinationPortionWorking": {
        "description": "Public transport [Oeffentlicher Transport] with (scheduled) destination [Ziel] and differing destination [abweichender Zielhalt] for coupled transports [vereinigte Züge].",
        "properties": {
          "category": {
            "type": "string",
            "description": "Code of the transport [Fahrtgattung]."
          },
          "destination": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "differingDestination": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionInfo"
          },
          "journeyID": {
            "type": "string",
            "description": "ID of journey [FahrtID]."
          },
          "label": {
            "type": "string",
            "description": "Marketing - or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
          },
          "line": {
            "type": "string",
            "description": "Line of the transport [Linie]."
          },
          "number": {
            "type": "number",
            "format": "double",
            "description": "Number of the transport [Fahrtnummer]."
          },
          "replacementTransport": {
            "$ref": "#/components/schemas/ReplacementTransport"
          },
          "separationAt": {
            "$ref": "#/components/schemas/StopPlaceEmbedded"
          },
          "type": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "category",
          "destination",
          "journeyID",
          "number",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RouteStop": {
        "properties": {
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "station": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "auslastung": {
            "$ref": "#/components/schemas/RouteAuslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "additional": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          },
          "irisMessages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          },
          "joinsWith": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationPortionWorking"
            },
            "type": "array"
          },
          "splitsWith": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationPortionWorking"
            },
            "type": "array"
          }
        },
        "required": [
          "station"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedJourneyMatchResponse": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/RouteStop"
            },
            "type": "array"
          },
          "jid": {
            "type": "string"
          },
          "firstStop": {
            "$ref": "#/components/schemas/RouteStop"
          },
          "lastStop": {
            "$ref": "#/components/schemas/RouteStop"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          }
        },
        "required": [
          "train",
          "stops",
          "jid",
          "firstStop",
          "lastStop"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TransportPublicDestination": {
        "description": "Public transport [Oeffentlicher Transport] with (scheduled) destination [Ziel] and differing destination in case the final stop of the journey changed [Haltausfall, Laufwegverlängerung, ...].",
        "properties": {
          "category": {
            "type": "string",
            "description": "Code of the transport [Fahrtgattung]."
          },
          "destination": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "differingDestination": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionInfo"
          },
          "journeyID": {
            "type": "string",
            "description": "ID of journey [FahrtID]."
          },
          "label": {
            "type": "string",
            "description": "Marketing - or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
          },
          "line": {
            "type": "string",
            "description": "Line of the transport [Linie]."
          },
          "number": {
            "type": "number",
            "format": "double",
            "description": "Number of the transport [Fahrtnummer]."
          },
          "replacementTransport": {
            "$ref": "#/components/schemas/ReplacementTransport"
          },
          "type": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "category",
          "destination",
          "journeyID",
          "number",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TransportPublicOrigin": {
        "description": "Public transport [Oeffentlicher Transport] with origin [Herkunft].",
        "properties": {
          "category": {
            "type": "string",
            "description": "Code of the transport [Fahrtgattung]."
          },
          "differingOrigin": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionInfo"
          },
          "journeyID": {
            "type": "string",
            "description": "ID of journey [FahrtID]."
          },
          "label": {
            "type": "string",
            "description": "Marketing - or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
          },
          "line": {
            "type": "string",
            "description": "Line of the transport [Linie]."
          },
          "number": {
            "type": "number",
            "format": "double",
            "description": "Number of the transport [Fahrtnummer]."
          },
          "origin": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "replacementTransport": {
            "$ref": "#/components/schemas/ReplacementTransport"
          },
          "type": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "category",
          "journeyID",
          "number",
          "origin",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DisruptionCommunicationDescription": {
        "description": "Disruption communication information [Stoerungskommunikation] descriptions.",
        "properties": {
          "text": {
            "type": "string",
            "description": "Long text of disruption communication."
          },
          "textShort": {
            "type": "string",
            "description": "Optional short text of disruption communication."
          }
        },
        "required": [
          "text"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DisruptionCommunicationEmbeddedLegacy": {
        "description": "Embedded disruption communication information [Stoerungskommunikation].",
        "properties": {
          "descriptions": {
            "properties": {},
            "additionalProperties": {
              "$ref": "#/components/schemas/DisruptionCommunicationDescription"
            },
            "type": "object",
            "description": "Textual short description of disruption by language identifier."
          },
          "displayPriority": {
            "type": "number",
            "format": "double",
            "description": "Display priority [Anzeigereihenfolge] for disruption. Order is by display priority asc. May be empty."
          },
          "disruptionCommunicationID": {
            "type": "string",
            "description": "ID of disruption communication [StoerungskommunikationsID]."
          },
          "disruptionID": {
            "type": "string",
            "description": "ID of disruption [StoerungsID]."
          }
        },
        "required": [
          "descriptions",
          "disruptionID"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Administration": {
        "description": "Information on the operator [Betreiber] and the administration [Verwaltung] of the journey.",
        "properties": {
          "administrationID": {
            "type": "string",
            "description": "Unique id of the administration [Verwaltung]."
          },
          "operatorCode": {
            "type": "string",
            "description": "Unique code of the operator [Betreiber]."
          },
          "operatorName": {
            "type": "string",
            "description": "Name of the operator [Betreiber]."
          }
        },
        "required": [
          "administrationID",
          "operatorCode",
          "operatorName"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "MessageAttribute": {
        "description": "Journey-attribute [Fahrtmerkmale / Sollmerkmale] message.",
        "properties": {
          "code": {
            "type": "string",
            "description": "Journey-attribute [Fahrtmerkmale / Sollmerkmale]. - ~~ (Tel. 09141-99351, Anmeldung mind. 60 Min. vor Abfahrt (Mo-Fr 8-17 Uhr)) - ~| (Tel. 08122-1800383, Anmeldung bis 30 Min. vor Abfahrt) - ~{ (Tel. 08122-1800383, Anmeldung bis 45 min. vor Abfahrt) - ~} (Tel. 09141-99350, Anmeldung mind. 60 Min. vor Abfahrt (Mo-Fr 8-17 Uhr)) - |~ (Anschluss kann nicht gewährleistet werden) - || (Rufbus bitte bis 18 Uhr am Vortag unter Tel. 0621 1077077 anmelden) - |{ (Tel.: 08282-9902100, Anmeldung mind. 90 Min. vor Abfahrt (7-18 Uhr)) - |} (Vorbestellung bis 60 Min. vor Fahrtantritt unter Tel.: 0176 27467288) - _ (nur nach Voranmeldung, Tel.: 0365 7390 777 bis 22:00 Uhr am Vortag) - __ (Bedarfshalt Tel.0661-95270400 Anmeld. bis 40Min vor Abf. Mo-Fr 6-18Uhr) - , (Bus mit Fahrradanhänger, Gruppen bitte anmelden unter 05254-6408499) - !< (Alt: verk.nur bei Anm. bis 30 Min vor Abf. u. Tel. 0421 650005) - != (Anm. 60 Min. vor Abf. Tel. 07044 944034) - !_ (AST; Tel. 06172-101310 Anm. bis 60Min vor Abf. So-Do6-22, Fr-Sa6-24Uhr) - !- (Tel.: 02681 951795, bis 22h am Vortag, Gruppen 2 Tage vorher anmelden) - !, (Zustieg am Vortag bis 19 Uhr anmelden unter Tel. (08282) 828700) - !; (Rufbus; Tel. 04161-644670 Anmeldung bis 60 Min. vor Abfahrt) - !: (Anm. 20 Min. vor Abf. Tel. 07025-912663-9) - !. (Tel.: 02681 951795, bis 60 Min, Gruppen 2 Werktage vorher anmelden) - !* (Anm. 1 Stunde vor Abfahrt, Tel. (07331) 7242, Mo-Fr: 7-19 Uhr) - !+ (Anmeldung spätestens 1 Stunde vor Abfahrt, Tel. (07340) 96300) - {~ (Rufbus: Voranmeldung bis 19:30 Uhr unter 06181-6681357) - {} (VBB-Tarif zzgl. des Komfortzuschlages 1,00 EUR je Fahrgast und Strecke) - }~ (Taxi-Anschluss, Voranmeldung 30 Min. vor Abfahrt , Tel. 0731 166-2850) - }| (TaxiBus; Tel. 0291-6111 Anmeldung mind. 30 Min. vor Abfahrt) - }{ (Anmeldung bis 2 Std. vor Abfahrt unter Tel. 06391 1824) - }} (Anmeldung bis 30 Min. vor Abfahrt, Tel. 0731 166-2850) - += (Verstärkungsfahrt; wird nicht im Kursbuch oder Aushang veröffentlicht) - +- (Fahrteneditierattribut) - 0^ (Kleinbus, Gruppenf. anmelden unter 05351-3071) - 0* (HAFAS-Steuerung [Text wird nicht ausgegeben]) - ,0 (AnrufLinienTaxi; Tel. (0241)4013999 ; Anm. bis 30 Min. vor der Abfahrt) - *0 (Verkehrt in den Pfingst- und Sommerferien als Fahrradbus) - 00 (vsl. stark ausgelastet!) - 01 (voraussichtlich starke Nachfrage) - 03 (Rufbus! Anmeldung bis Freitag, 17 Uhr, unter 034295 7420) - 08 (Bedarfshalt Tel.03435-906061 Zustieg nach Anmeldung bis 1h vor Abfahrt) - 09 (Bedarfshalt Tel.03435-906083 Zustieg nach Anmeldung bis 1h vor Abfahrt) - 0b (Bitte dem Fahrer bei Einstieg die Zielhaltestelle mitteilen.) - 0d (Rufbus, Anmeldung mind. 1 Std. vor Abfahrt unter 09161/2935) - 0e (Bedarfshalt, Anmeldung mind. 1 Std. vor Abfahrt unter 09161/2935) - 0g (AST; Tel. 0800-0584584 Fahrt mind. 60 Min. vor Fahrtantritt anmelden) - 0h (Anmeldung mind.30 Min. unter Tel. 07720 / 99780) - 0j (Anm. für Gruppen ab 4 Pers. bis Fr. 14:00; Tel. 06531/9680-0) - 0k (Anmeldung bis 20 Min. vor Abfahrt unter Tel. 07021 2656) - 0l (Bedarfshalt: Tel. (03391)400618 Anmeldung 90 Min vor Fahrtbeginn) - 0m (Bedarfshalt, Anmeldung unter 03531-650010 bis 90 Min vor Fahrtbeginn) - 0n (Gruppenanm. ab 5 Pers. am Vortag, 09381 803656, keine Fahrradmitnahme) - 0o (Bedarfshalt, Anmeldung bis 60 Min. vor Abfahrt, Tel. 0800-6065600) - 0p (Kleinfahrzeug - Gruppen sind anzumelden Tel. 03733 151245) - 0q (Ruftaxi, Tel.: 06332 16363, Anmeldung mind. 30 Min vor Abfahrt) - 0r (TaxiBus; Tel. (0251)6945000 Anmeldung mind. 30 Min. vor Abfahrt) - 0s (AST mind. 30 Min. vor Fahrtbeginn anmelden unter Tel. 07351-30250250) - 0S (Kleinbus, Gruppen ab 4 Personen am Vortag anmelden, Tel.: 0261 9846140) - 0t ((*20 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 0T ((*20 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 0v (Bedarfshalt Anmeldung bis 12 Uhr einen Tag vorher: Tel 09171/9676-0) - 0w (AST, mind. 1 Stunde vorher anmelden unter Tel. 0981/48228880) - 0x (Bedarfshalt; Tel. 035365-2102 Anmeldung 1Tag vor Abfahrt Mo-Fr 9-13:30) - 0y (ALT: tel. Anm.04121-906666 erf. Büro Mo-Do8-16,Fr 8-14 Uhr bes. Preis) - 0z (Anmeldung 60 Min. vor Abfahrt: Tel. 0176-80449280) - 1 (nur 1. Kl.) - 1- (AnrufSammelTaxi; Tel. 01801-334433* Anmeldung mind. 45 Min vor Abfahrt) - 1: (TaxiBus; Tel. 0201-8264949 bitte mind. 30 Min. vor Abfahrt anmelden) - =1 (Sammeltaxi: Anmeldung 30 Min. vorher; Tel: 05121/66666) - *1 (Fahrradbus-Verkehrt von Karfreitag bis einschl. 03.10. als Radlbus) - 10 (vsl. stark ausgelastet! (Regio)) - 11 (vsl. starke Nachfrage!) - 12 (Verkehrt nur bei Anmeldung bis 2 Tage vor Fahrt unter Tel. 04841 1888) - 14 (Anrufhst., b. Fahrer od. 30 Min. vor Abfahrt unter 09672-2231 anmelden) - 15 (Rufbus, bis 1 Stunde vor Fahrtbeginn unter 09674-921210 anmelden) - 16 (Anmeldung bis 60 Min. vor Fahrtbeginn, Tel. 09221-66222  oder -75570) - 17 (Bedarfshalt: Zustieg nur nach Anmeldung 1h vor Fahrt Tel: 03941/566166) - 19 (Voranmeldung bis spätestens 60 Min. vor Fahrtbeginn, Tel.: 09273-6857) - 1a (Anmeldung 30 Minuten vor Abfahrt: Tel. (07125) 40 72 40, Sondertarif) - 1A (Expressbus) - 1b (Ruftaxi, Tel.: 06251/5095, Anmeldung mind. 60 Min vor Abfahrt) - 1B (Linie B) - 1c (Anmeldung mind. 30 Min. vor Abfahrt: Tel. 07472/988 966, Sondertarif) - 1C (Linie C) - 1d (Anmeldung bis 2 Stunden vor Abfahrt: Tel. 0160-93981867) - 1D (Linie D) - 1E (Linie E) - 1f (Bedarfshalt: Tel. 0906-706050 Anmelung spätestens 1 Std. vor Abfahrt) - 1F (Linie F) - 1g (Anm. bis 30 Min vor Abfahrt Tel.(0711)356666; besonderer Tarif) - 1h (Ruftaxi; Tel.(07153)22293 Anm. bis 30Min vor Abfahrt; besonderer Tarif) - 1k (Anm. bis 10:00 Uhr unter Tel. 07644 91500) - 1K (Fährzeiten sind Richtzeiten, www.rheinfaehre-linz-remagen.de) - 1l (Anm. 60 Min. vor Abf.; Tel. 07721/9927948, Gruppe 5 Werktage vorher) - 1m (Anm. 18:30 - 22:00; Tel. 07721/9927948, Gruppe 5 Werktage vorher) - 1n (AST; Tel.06192-2002626 Anmeldung bis 30Min vor Abfahrt von 6 bis 1 Uhr) - 1o (AST, (06691)9272929-01/-02/-03 Anm.bis 30Min vor Abf. Zuschlag, 1,-EUR) - 1p (AST, Tel. 0800-0584584 Anmeld. mind. 60Min vor Abfahrt, Mo-So 9-20 Uhr) - 1r (AnrufLinienTaxi;Tel.0160-3116683 Anmeld. 60Min vor Abf. Mo-Fr 5-20 Uhr) - 1s (Kleinbus, Gruppen >8 Pers. Anmeldung am Vortag: Tel. 05544-95030) - 1S (Rufbus, Zuschlag, Anmeldung 7.30 - 17.30 Uhr, 0591-8042050) - 1t ((*20 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 60 ct/Anruf)) - 1T ((*20 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 60 ct/Anruf)) - 1u (Rufbus: Tel. 0180-1726934 Anmeldung 1 Tag vorher (Mo-Fr 7- 19 Uhr)) - 1v (Voranmeldung am Vortag bis 15:30, Tel. 0800-6065600) - 1x (Anmeldung bis 15:50 Uhr: Tel. 07571/74747474) - 1y (Voranmeldung bitte bis 1 Stunde vor Abfahrt, Tel. 09103-462) - 1z (Voranmeldung bitte bis 1 Stunde vor Abfahrt, Tel. 09171-979090) - 1Z (Linie A) - 2^ (Tel. Voranmeldung 30 Min. vor Abfahrt 07524/97380) - 2 (nur 2. Kl.) - 2+ (SECOND PLUS) - _2 (RufBus mit Voranmeldung Mo-Fr bis 16.00 Uhr Tel.:03605-515253) - ,2 (Rufbus; Tel. (02421) 2000 ; Anmeldung bis 30 Min. vor der Abfahrt) - 20 (Tel. 0541-3382214, Fahrradmitnahme nur bei Anmeldung) - 22 (Bis 22Uhr am Vortag anmelden: 02747-91276101 Gruppen 2 Werktage vorher) - 23 (TaxiBus) - 24 (Rfb: verk nur bei Anm bis 10 Min vor Abfahrt unter Tel. 0152 04535502.) - 26 (Tel. 0171-7998484, Anmeldung bis 15 Uhr des vorigen Werktages (Mo-Fr)) - 27 (AST: Anmeldung bis 30 Minuten vor Abfahrt unter Tel. 07732 8008777) - 29 (nur bei Anmeldung bis 30 Minuten vor Abfahrt unter Tel. 04932 927910) - 2a (Rufbus: Tel. 08282-828700 Anmeldung vor 16 Uhr) - 2A (RVV-Nachtschwärmer N28) - 2b (Rufbus: Tel. 08282-828700 Anmeldung vor 19 Uhr) - 2d (Bedarfshalt: Tel. 08282-828700 Anmeldung bis 15 Uhr am Vortag) - 2e (Anmeldung bis 60 Min. vor Abfahrt Tel. 08282-828700) - 2f (Rufbus: Tel. 08282-828700 Anmeldung bis 19 Uhr am Vortag) - 2H (Bedarfsfahrt; Tel. 0176-43643754 Anmeldung bis spätestens 11:45 Uhr) - 2i (Rufbus Tel.07333/5228 oder 0170/9269403, bitte 1 Stunde vorher anrufen) - 2k (Anm. bis 1Std. vor Abfahrt unter Tel. 07335/96270) - 2l (Bedarfshalt: Tel. 08282-828700 Anmeldung mind. 15 Min. vor Abfahrt) - 2m (Rufbus: Anm. mindestens 60 Min vor Abf. Tel. (03521) 741663) - 2n (Rufbus, bitte unter Tel. 08463/605079 am Vortag bis 16 Uhr anmelden.) - 2o (Bedarfshalt am Vortag bis 16 Uhr unter Tel. 08463-605079 anmelden) - 2q (AST: Tel.: (0661) 73919 Anmeldung bis 15 Min vor Abfahrt) - 2r (Rufbus; Tel. (07382) 93740 Anmeldung spätestens Freitag 19 Uhr) - 2t ((*14 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 2T ((*14 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 2v (Rufbus: Anmeld. bis 1 Std. vor Abfahrt, Tel. (07391) 707060) - 2w (ALT, mind. 30 Min. vor Abfahrt unter Tel. 0921/20208 anmelden) - 2x (Rufbus: Anmeldung am Vortag, Tel. (07353) 984840) - 2y (AnrufSammelTaxi (05651)3565 Anmeld.bis 30Min vor Abfahrt,1EUR Zuschlag) - 2z (Rufbus; Tel. 05032-809300 Anmeld bis 95Min vor Ankunft am ZOB Neustadt) - 3 (1. und 2. Kl.) - 3; (Anruf-Linientaxi, 1 Std. v. Abfahrt. Tel: 05331-77777 od. 0171/1700801) - 31 (Reservierungspflicht für Reisegruppen) - 34 (Leinetal Taxi: verkehrt nur bei Anruf unter 07131 904040) - 35 (Anmeldung bis 1 Std. vor der Fahrt unter Tel. (07262) 912020) - 36 (Rufbus, Tel. 05121-76420 Anmeldung bis spät. 60 Min. vor Abfahrt) - 37 (Fahrradbeförderung bitte voranmelden 07945 91010) - 39 (ALF, Tel.:0261 9846140, Anm. bis 22Uhr am Vortag, Gruppen 2Tage vorher) - 3b (Tel. 08341-809529 Anmeldung mind. 60 Min. vorher (Anm. 10 bis 19 Uhr)) - 3B (Ruftaxi, Tel.: 06762 4019344, Anm. 90Min vorher, Gruppen 2 Tage vorher) - 3c (TaxiBus; Tel. 05231-977681 Anmeldung am Vortag bis 18 Uhr) - 3D (Schlafwagen 2.Klasse T3 mit Dusche und WC) - 3e (Anmeldung bis 30 Minuten vor Abfahrt, Tel. 09733-9447 oder 09721-16060) - 3g (Rufbus: Tel. 01802-908070* Anmeldung bis 16 Uhr am Vortag) - 3G (Im Zug gilt bundesweit 3G-Regel: ein gültiger Nachweis ist mitzuführen) - 3h (Kleinbus: Gruppen bitte anmelden, Tel. 04671-3003) - 3i (AnrufLinienTaxi; Tel. 04342-4646 Anmeldung bis 60 Min. vor Abfahrt) - 3I (bis 22Uhr am Vortag anmelden: 02633 2009600 Gruppen 2 Werktage vorher) - 3j (Bitte mindestens 45 Min. vor Abfahrt anmelden. Tel. (05341-31311)) - 3k (Anm. mind. 2 Std. vor Fahrtantritt unter Tel. 07524/9738-0) - 3n (Ruftaxi: Tel. 08136-4343999 Anmeldung spätestens 30 Min. vor Abfahrt) - 3N (bis 60Min. vorher anm. 02633 2009600(6-22Uhr), Gruppen 2 Werktg vorher) - 3o (Ruftaxi: Tel. 08131-33749991 Anmeldung spätestens 30 Min. vor Abfahrt) - 3p (Ruftaxi: Tel. 08131-33749992 Anmeldung spätestens 30 Min. vor Abfahrt) - 3P (ALF, Tel.:067624019344, Anm. bis 22Uhr am Vortag, Gruppen 2Tage vorher) - 3q (Ruftaxi: Anmeld. mind. 30 Min. vor Abfahrt, Tel. 07231/392163) - 3r (Anmeld. mind. 30 Min.vor Fahrt Tel.07232/372148, spez. Tarif) - 3s (Ruftaxi: Tel. 08258-928440 Anmeldung spätestens 30 Min. vor Abfahrt) - 3t ((*14 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 3T ((*14 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 3u (Bedarfshalt: Tel. 0906-99989491 Anmeldung mind. 2 Std. vor Abfahrt) - 3v (Rufbus, Tel.: 06282 6014, Anmeldung mind. 60 Min vor Abfahrt) - 3w (Rufbus: Tel. +436474-2213, Fahrtanmeldung mind. 60 Min. vor Abfahrt) - 4= (Anruf-Linientaxi; Tel. (09221)66222 Anmeldung bis 2 Std. vor Abfahrt) - 4- (TaxiBus Anmeldung nur beim Fahrer im S10 zw. Westerk. u. Mettingen) - 4. (RFB verk nur bei Anm b30 Min. vor Abf u Tel: 0800/7007887 + bes.Tarif!) - _4 (Bitte 30 Min. vor Fahrt anmelden unter Tel.: 04551-898989) - $4 (mit Fahrradtransportanhänger) - 41 (Rufbus, nur nach tel. Voranmeldung: 03677 888 952 (1h vor Fahrtbeginn)) - 43 (Rufbus für max. 6 Pers; Tel. 03371-628182 Anmeldezeit Mo - Fr 5-17 Uhr) - 45 (Anmeldung 30 Min vor Abfahrt  unter 07651/9899602) - 46 (Fahrradmitn. f. 9 Räder, Anm. unter 03671-5251999, am Vort. bis 15:00) - 47 (Museums-Dampfzug) - 48 (Achtung: Fahrt kann von Streik-Aktionen betroffen sein) - 4a (Ohne Bedarfsbedienung verkehrt der Bus an dieser Haltestelle 8Min eher) - 4b (Bedarfshalt: mind. 1 Std. vorher anmelden unter Tel. 0731 97744233) - 4c (Ruf mich-Bus, bitte am Vortag bis 17h bestellen: 04463/1046) - 4d (Bedarfshalt: Zustieg am Vortag bis 17 Uhr anmelden, Tel. 07346 96200) - 4e (Vorbestellung bitte bis zum Vortag zwischen 9-19 Uhr) - 4f (Nur nach Vorbestellung Mo.-Fr. 14h, Tel. 08652-94480) - 4i (Ruftaxi, Tel.: 06331/228899, Anmeldung mind. 60 Min vor Abfahrt) - 4j (bis 4:00 Uhr morgens Nachtlinienzuschlag erforderlich) - 4k (Ruftaxi, Tel.: 06337/6637, Anmeldung mind. 60 Min vor Abfahrt) - 4l (Rufbus: Tel. 09181-48800 Anmeldung mind. 60 Min. vor Abfahrt) - 4m (Voranmeldung bitte bis 60 Min. vor Abfahrt, Tel. 0151-54419545) - 4n (AST, Anmeldung mindestens 30 min vor Fahrtbeginn unter Tel. 06806 3434) - 4p (Taxibus; Tel. (02567) 778 Anmeldung mind. 30 Min. vor Abfahrt) - 4q (Gruppen ab 10 Pers. und Fahrradmitnahme anmelden: Tel. 04421-84360) - 4r (Bedarfshalt; Anmeldung bis 1h vor Abfahrt, Tel. 034901-82599 (5-20Uhr)) - 4s (Fahrradzuladung in Lahr West am Betriebshof) - 4t ((*bis 12,6ct/Min. aus d.Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 4T ((*bis 12,6ct/Min. aus d.Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 4u (Anmeldung bis 16.30 Uhr unter Tel. 02631/ 352532) - 4y (TaxiBus; Tel.: 0800-3504031* Anmeldung bis spätestens 18:30 Uhr) - 4z (Rufbus! Tel. 03933-823431 Anmeldung bis 22.11.2019, 12:00 Uhr) - 5, (bitte 1 Stunde vorher anmelden, 01803-229292* (bis 20 Uhr)) - 5+ (TaxiBus-Bestellung beim Einstieg in den NachtBus N1) - _5 (Bitte 60 Min. vor Fahrt anmelden unter Tel.: 04823-920866) - 54 (Anmeldung bis spätestens einen Tag vor Abf. unter Tel. 07522/912222) - 55 (Nichtraucherzug) - 56 (Dampfzug) - 57 (Dampfschiff) - 59 (Tel. 04634 8888, Anmeldung bis 60 Min vor Abfahrt, www.dorfschuttle.de) - 5a (Gruppenbeförderung bitte mit Voranmeldung 03531-650010) - 5b (Verkehrt nur bei Anm. bis 15 Min. vor Abfahrt unter Tel. 0152-2603642) - 5c (Nur nach Voranmeldung bis 22:00 des Vortages, 0173-3951473) - 5d (Bürgerbus, verk. nur nach Anm. b.45Min. vor Abf. u. Tel.: 0162 6192290) - 5D (Tel. 0971-730310, Anm. bis 60 Min. vor Abfahrt Mo-Do 9-15, Fr 9-13 Uhr) - 5e (Bedarfsfahrt: Tel: 09461-941850) - 5f (Rufbus,Tel.0261-29670388 Anmeld. 90Min vorher Mo-Fr6-21,Sa7-20,So7-22*) - 5g (nur an Schultagen) - 5h (Anm. bis 30 Min vor Abfahrt unter 06341-86506) - 5H (Nur nach Voranmeldung bis 90 vor Abfahrt, Tel. 0911-65005) - 5i (Bedarfshalt; Tel: (0800) 2992299 Anmeldung mind. 90 Min vor Abfarhrt.) - 5j (Rufbus; Tel. (0800) 2992299 Anmeldung mind. 90 Min vor Abfahrt.) - 5k (Kleinbus, Gruppen 24 Std. vor Abfahrt anmelden, Tel. (030)396011344*) - 5l (Voranmeldung am Vortag (Mo-Fr bis 20Uhr), Tel. 09221-66222) - 5L (Bedarfshalt; Tel. 09771-9178094 Anmeld. bis 15Uhr am Vortag Mo-So 7-21) - 5m (TaxiBus; Tel. (02052)9258505 Anmeldung mind. 30 Min. vor Abfahrt) - 5p (Gruppen bitte 30 Min. vor Abfahrt unter Tel.: 0511 8484 anmelden.) - 5q (Anmeldung bitte 30 Min. vor der Abfahrt unter Tel.: 0511/8484) - 5Q (Anruf-Fahrt 06543-501924 Anmeld.bis 22Uhr am Vortag(Gruppen 2Werktage)) - 5R (Einstieg nur mit Reservierung: siehe www.postauto.ch) - 5S (Anruf-Linien-Fahrt, 60Min vor Abfahrt anmelden 06543-501924 (6-22 Uhr)) - 5t ((*3,9 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 5T ((*3,9 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 5w (Rufbus Tel.03372-424848 Anmeldung Mo-Fr von 5-14Uhr bis 60Min.vor Abf.) - 5x (AST; Tel. (06455) 7558133 - Anmeldung bis 30 Min. vor Abfahrt*) - 5y (Rufbus: Tel. 09661-812910 Anmeldung bis spätestens Freitag) - 5z (Anmeldung unter Tel.08000-366910, 1 Std vor Abfahrt (Mo-Sa 7-20Uhr)) - 6: (Anmeldung 2 Std. vor Abfahrt. Tel.: 07122 / 82477; Sondertarif) - 6$ (Bedienung nur zum Ausstieg) - ,6 (AnrufLinienTaxi; Tel. (0241) 182000; Anm. bis 30 Min vor der Abfahrt) - 60 (Rufbus: Fahrtanmeldung nach Bedarf unter Tel. 0711 93383798) - 62 (Anmeldung bitte bis spät. 60 Min. vor Fahrt unter Tel.: 04441-93110) - 63 (AnrufLinienFahrt, Tel.02686-1799 Anmeld. 60Min vor Abfahrt von 6-22Uhr) - 65 (Anm. Mo-Fr 8-16 Uhr unter Tel. 04122-909844 (mind. 60 Min. vor Fahrt)) - 66 (AST: Anm. bis 60 Min. vor Fahrtantritt unter Tel. 04231 922766) - 67 (Komfortzuschlag erforderlich) - 68 (Rufbus, bitte anm. Mo-Fr, 07-16Uhr, bis 60 Min. vor Abf.: 05461 93390) - 6d (Anmeldung bis 11:00 Uhr unter Tel. 02603/ 2727) - 6t ((*6 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 6T ((*6 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 7 (Midi-Bus (22 Personen)) - 73 (Anruflinienfahrt, Tel. 06765-9493725 bitte bis spät.16 Uhr anmelden) - 75 (Anmeldung 60 Min vor Abfahrt, Tel. (07162) 6367.) - 78 (Nur nach Voranmeldung bis 60 Minuten vor Abfahrt, Tel:  08751-709888) - 7a (Anmeldung 20 Minuten vor Abfahrt Tel. 0711 5510000) - 7b (Voranmeldung bis spätestens 60 Minuten vor Abfahrt, Tel. 09241-2697) - 7B (Nur nach Voranmeldung bis 14 Uhr, Tel. 02603-8022) - 7c (Anmeld. bis spätestens 60 Min. vor Fahrtbeginn Tel. 09270/91222) - 7C (ALF, Tel.: 06765 9493767, Anmeldung mind. 30 Min vor Abfahrt) - 7d (Anm. am Vortag bis 15 Uhr unter 07520/ 9203-0) - 7f (AnrufLinienTaxi; Tel. 06035-6575 Anmeld. 60Min vor Abf. Mo-Fr 8-17 Uhr) - 7h (Anm. bis 18.00 Uhr des Vortages: Tel. (07381) 93 45 30, Sondertarif) - 7H (für Gruppen u. Bayernticket besteht Anmeldepflicht, Tel. 09771-9178094) - 7i (Rufbus bis spätestens 21 Uhr anmelden: 07333/5228 oder 0170/9269403) - 7j (Anm. bis 30 Min. vor Abfahrt unter Tel. 07633 92620) - 7k (Anm. mind. 30 Min. vor Abfahrt, Tel.: 07431 / 5 51 15; Sondertarif) - 7l (Ruftaxi; Tel. 089-84005811, Anmeldung mind. 45 Min. vor Abfahrt) - 7o (Kleinbus. Gruppen bitte 2 Werktage vorher unter 0581-976280 anmelden) - 7p (Kleinbus. Gruppen bitte 2 Werktage vorher unter 03901-304030 anmelden) - 7q (Rufbus; Tel. (033931)34940 Anmeldung mind. 120 Min vor Fahrtbeginn) - 7s (Anruf-Linien-Taxi, bitte bis 1h vorher anmelden: 04231/69001) - 7t ((*9 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 7T ((*9 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 7u (Rufbus; Anmeldung spätestens 2h vor Fahrtbeginn; Tel. 0361-19449) - 7x (Ast: verk. nur bei Anm. bis 30 Min. vor Abf. u. Tel. 04231 922760) - 7y (Ruftaxi, Tel.: 06381 324, Anmeldug bis 60 Minuten vor Abfahrt) - 8: (Anruf-Linientaxi Bitte 60 Min. vor Abfahrt anmelden. (05531) 930711) - 8$ (nur nach Anmeldung 60 Min. vorher 06826/6666) - 8+ (AST; Tel. 06409-2922; Anm. bis 60Min vor Abfahrt*; 1,50 Euro Zuschlag) - 80 (Ausfall bei ungünstigen Wintersportbedingungen) - 81 (ÖBB-Verkehr) - 82 (Anm. 2 Std zuvor (0791/9501012) oder durch Mitteilung an den Fahrer) - 83 (Kleinbus; Gruppenfahrten bitte anmelden! Tel.: 05151 788988) - 87 (AST; Tel. 04542-3340 Anm. 30Min. vor Abfahrt Gruppen ab 5 Pers. 1Tag) - 8a (AST: verk. nur bei Anm. bis 60 Min vor Abf. u. Tel. 0581 828384) - 8b (TaxiBus; Tel.0800-3504031 Anm. 60Min vor Abf. Mo-Fr6-19,Sa7-15,So10-18) - 8d (Ruftaxi, tel. vorbestellen unter 06381-924660) - 8e (Ruftaxi, tel. vorbestellen unter 06381-924666) - 8f (TaxiBus; Tel. (01803)504031* Anmeldung bis spätestens 20 Uhr) - 8g (Ruftaxi, Tel.: 06383-1460, Anmeldung mind. 60 Min vor Abfahrt) - 8h (TaxiBus; Tel. (01803) 504031* Anmeldung bis 19 Uhr am Vortag.) - 8i (Ruftaxi, Tel.: 06382-1551, Anmeldung mind. 60 Min vor Abfahrt) - 8j (Ast: verk. nur bei Anm. bis 60 Min vor Abf. u Tel. 05531 930711) - 8k (Anmeldung mind. 60 Min vor Abfahrt unter Tel.: 06382-993050) - 8l (Anmeldung mind. 60 Min vor Abfahrt unter Tel.: 06382-993600) - 8m (Ruftaxi, Tel.: 06381-2518, Anmeldung mind. 60 Min vor Abfahrt) - 8M (Anmeldung am Vortag bis 16.00; Tel.  06392/995717) - 8n (Anmeldung am Vortag unter Tel. 07567/ 234) - 8p (AST; Tel. (02961) 970297 Anmeldung mind. 30 Min. vor der Abfahrt.) - 8q (Ruftaxi, Tel.: 06331/228080) - 8r (Ruftaxi, Tel.: 06381/2324, Anmeldung mind. 60 Min vor Abfahrt) - 8s (Rufbus; Tel. (01802)783287* Anmeldung bis Freitag 18 Uhr erforderlich) - 8t ((*20 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 60 ct/Min.)) - 8T ((*20 ct/Anruf aus dem Festnetz, Tarif bei Mobilfunk max. 60 ct/Anruf)) - 8u (Anmeld. am Vortag 9:00-12:00 (Mo-Fr) Tel. 09733/81060) - 8w (Voranmeldung bis spätestens 60 Minuten vor Abfahrt, Tel. 09241-1448) - 8x (Anmeldung bis 17:00 Uhr am Vortag unter Tel. 07661/ 9019200) - 8y (Rufbus, Tel. (06131) 4948455, Anmeldung mind. 2 Std. vor Abfahrt) - 8z (Keine unentgeltliche Beförderung Schwerbehinderter) - 90 (ALF- Bestellung am Vortag u. Tel.: 05722 1515 - Anw des VLS Tarifes) - 91 (Anmeldung bis spät. 30 Minuten vor Abfahrt unter Tel. 0531 28639588) - 93 (Rufbus (Kleinbus, max 8 Pers.), bis 19Uhr am Vortag anm.: 06421 205811) - 97 (Schwerbehindertenabteil) - 9a (Rufbus, Tel. (06131)4948455, Anmeldung bis 22 Uhr des Vortages) - 9b (Anrufbürgerbus; Tel. 0175-8977507 Anmeldung bis 30 Min. vor Abfahrt) - 9c (Anmeldung bis 60 Minuten vor Abfahrt unter Tel. 07661/ 9019200) - 9f (Bedarfshalt, Tel. 0391-5363180 Bitte bis 2 Std. vor Abfahrt anmelden) - 9F (Großraumabteil) - 9G (9-Euro-Ticket gültig) - 9i (ALT: verk. nur bei Anmeldung am Vortag bis 16:00 Uhr u. Tel. 05556 374) - 9k (SEV Fahrradbus; Mitnahme von Fahrrädern) - 9l (ALT: verk. nur bei Anmeldung bis 60 Min. vor Abfahrt u. Tel. 05556 374) - 9L (Nachtzug-Rezeption) - 9m (AST: Tel. 04542-9009132 Anm. 30 Min vor Abfahrt (Gruppe 1 Tag vorher)) - 9n (TaxiBus; Tel. (02333)3388 Anmeldung mind. 30 Min. vor Abfahrt) - 9N (9-Euro-Ticket nicht gültig) - 9o (Anm. 1 Std. v.Fahrt,Tel.07721 9132020;Gruppen mind.5 Werktage v.Fahrt) - 9p (Bedarfshalt, nur auf Anfrage. Bitte anm. unter 037755/2222) - 9q (AST; Tel.(06431)203456 Anmeld. 60Min vor Abfahrt zwischen 15 und 24Uhr) - 9r (Anm. am Vorabend bis 24 Uhr; Tel.-Nr.: 07721 9132020) - 9s (TaxiBus; Tel. 02441-99454545 Anm.30Min bis22Uhr; Gruppen 3Tage vorher) - 9S (Steuerwagen) - 9t ((*9 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 9T ((*9 ct/Min. aus dem Festnetz, Tarif bei Mobilfunk max. 42 ct/Min.)) - 9v (Kleinbus, Gruppen bitte anmelden, Tel. 09729-91010) - 9w (Anm. mind. 1h vor Abf., www.ding.eu oder 0731/1550- 505, 8-18Uhr) - 9x (Anm. mind. 1 Std. vor Abfahrt; Tel. (07392) 973717-225, Mo-Fr: 8-17Uhr) - 9y (Anm. mind. 1 Std. vor Abfahrt; (07392) 973717-226, Mo-Fr: 8-17Uhr) - 9z (Ruftaxi; Tel. 0800-3605200 (bitte Anmeldeverfahren beachten)) - a~ (Bedarfshalt/Zustieg tel. Anmeldung 90 min vor Abfahrt 038326-600-800) - a> (Bedarfshalt; Tel. (0800)6065600 Anmeldung bis 15Uhr am vorigen Werktag) - a| (Rufbus! Anmeldung bis 1 h vor Abfahrt unter 034607/202 94) - a (Rufbus: Tel. 06841 4312, Anmeldug bis 60 Minuten vor Abfahrt) - a_ (Tel. 03531-650010 Anmeldg. bis 90 Min vor Fahrtbeginn Mo-Fr 5:30-18:30) - a- (Bus kann wg. Ferienbeginn/Zeugnisausgabe früher abfahren bzw ausfallen) - a, (TaxiBus; Tel. 0700 / 88839839* Anmeldung 30 Min. vor Abfahrt) - a; (AnrufSammelTaxi; Tel. 0551-38444843 Anmeldung mind. 30 Min vor Abfahrt) - a: (Anmeldung bis 2 Stunden vor Fahrtbeginn unter Tel. 07542 / 7552) - a? (Bedarfshalt, Einstieg anm. bis 1h vor Abfahrt,03921-935945 (bis 18:00)) - a. (TaxiBus; Tel. 02831 / 398765 bis spätestens 30 Min. vor der Abfahrt) - a{ (Bedarfsfahrt bitte 60 Min. vor Abfahrt anmelden, Tel.: 06245 99834) - a} (Es gilt ausschließlich der Sondertarif Nachtschwärmer.) - a$ (Rufbus;Tel.(01802)892892* Bestellung mind 2Std vor Abfahrt von 7-20Uhr) - a* (TaxiBus-Anschlussfahrt, Fahrtwunsch beim Bus-Fahrer anmelden.) - a+ (Rufbus, Tel. (06131)8921652 Anmeldung am vorherigen Werktag bis 17Uhr) - A` (Tel. 09245-983267420, Anmeldung mind. 45 Min. vor Abfahrt) - A^ (Tel. 0951-96869734, Anmeldung bis spätestens am Vortag 12 Uhr) - A< (Rufbus: Anmeldung 60 min vor Abfahrt Tel:(07161) 41070) - A= (Rufbus verk. nach tel. Voranm. 03834/532424 mind. 60 Min.) - A> (Bitte bei Nutzung der Fähre Reservezeit einplanen! Fährt ohne Fahrplan) - A| (Anmeldung spätestens Freitag 18 Uhr, Tel.: 07128 / 687) - A (Schienenersatzverkehr Bus A) - A_ (Tel. 09245-983267419, Anmeldung mind. 45 Min. vor Abfahrt) - A- (Kein Zustieg mit Abo-Ticket: Bus-Bahn) - A, (Shuttle-Bus, Eintrittskarte = Fahrkarte, verkehrt nur bei Bedarf) - A; (Anmeldung bis 60 Min. vor Abfahrt unter Tel. 07331 8888) - A: (freies Attribut) - A! (Anmeldung spätestens am Vortag bis 17:00 Uhr, Tel. 09141-99350) - A? (Für GTF gesperrt) - A/ (Anm. bis 60 Min. vor Abfahrt unter Tel. 0751/3 61 41 52) - A. (Anm. 60 Min. vor Abfahrt, Tel. 0981-9714925 (Mo-Fr 8-17 Uhr)) - A\\' (verkehrt vom 01.05. bis 31.10. als RadBus) - A\\\" (Tel. 09521-953530, Anmeldung spätestens am Vortag bis 17 Uhr (Mo-Fr)) - A( (RFB: verkehrt nur bei Anmeldung bis 11:30 Uhr unter Tel. 04465 9496-0) - A) (Anmeldung bis 45 Minuten vor Abfahrt unter Tel. 07223 3319) - A[ (Rufbus; Tel. 09171-8392395, Anmeldung spätestens 60 Min. vor Abfahrt) - A] (Tel. 09171-8392396 Anmeldung mind. 90 Min. vor Abfahrt (Mo-Fr 7-20Uhr)) - A{ (Zustieg nur nach Voranmeldung, Tel.: 0981-971490 (Mo-Fr 8-17 Uhr)) - A} (Nur bei VFL-Wolfsburg Bundesligaheimspiel, Anpfiff um 18:00 Uhr) - A@ (Anmeldung bis 18 Uhr des Vortags, Tel. 07371/7407, Sondertarif) - A$ (Tel. 0800-0005645, Anmeldung bis 2 Std. vor Abfahrt) - A* (ALT, Anmeldung mindestens 30 min. vorher, Tel.: 07851 884848) - A\\\\ (Tel. 09171-8392395 Anmeldung mind. 90 Min. vor Abfahrt (Mo-Sa 7-20Uhr)) - A& (Tel. 09933-324, Anmeldung bis spätestens 17 Uhr am Vortag) - A# (Tel. 0800-0005645, Anmeldung spätestens am Vortag (Mo-Fr von 8-15 Uhr)) - A% (Nur nach Voranmeldung am Vortag der Fahrt, Tel. 0871-34994) - ^a (RFB: Anmeldung bis 16:00 Uhr am Vortag unter Tel. 04465 / 94960) - ~a (Anmeldung mind. 30 Min. vor Abf. unter Tel. 07152 335959) - <a (Voranmeldung bitte bis 30 Minuten vor Abfahrt, Tel. 0170-9419849) - =a (BahnCard der DB AG wird nicht anerkannt) - >a (Anmeldung bis spätestens 21:00 Uhr unter (07161) 41070) - |a (Anmeldung unter 0711/666 07 -783 oder -100.) - _a (Anm. am Vortag (Mo-Fr) bis 17:00, Tel. 07579/ 9211729) - ,a (Bedarfshaltestelle, Tel. 0173 / 2521021 Anm. bis 30 Min vor Abfahrt) - ;a (Tel. 0851-21370606, Anmeldung Mo - So von 06:30 Uhr - 21:00 Uhr) - :a (Bedarfshalt; Tel.034202-309980 Zustieg nach Anmeldg bis 1h vor Abfahrt) - .a (Kleinbus, Gruppen bitte unter 03741/4480 anmelden.) - {a (Rufbus, Anmeldung bitte am Vortag bis 15 Uhr, Tel.: 09523-95300) - }a (Anmeldung bis 1 Std. vor Abfahrt Mo-Fr -18 Uhr, Tel. 0800 5842870) - *a (Anmeld. bis spätestens 2 Std. vor Abfahrt unter 06781 219121) - +a (kostenlose Fahrradbeförderung (max. 3 Räder)) - ~A (Anruf-Linien-Taxi-Bitte anm. unter 0162 9097264 spät. 30 Min. vor Abf.) - |A (Rufbus: Voranmeldung bis 2 Stunden vor Fahrtbeginn unter 06181-6681357) - {A (Verkehrt nur bei Anmeldung bis 60 Min. vor Abfahrt unter: 0160 3133383) - }A (Tel. 09351-975797, BUS fährt nur nach Anmeldung bei Mobilitätszentrale) - a0 (Anm. ab 5 P. bis Fr. 12:00 o. am Vortag von Feiertagen;Tel.0731-15500) - A0 (AKN-Eisenbahn-AG) - a1 (TaxiBus; Tel. 02853 / 91910 Anmeldung mind. 30 Min. vor Abfahrt.) - A1 (Arriva) - a3 (Kleinbus; Gruppen bitte 3 Tage unter Tel. 05231-977681 anmelden) - a4 (AST; Tel. 01802 / 552000* Anmeldung mind. 45 Min. vor Abfahrt) - a5 (keine Fahrradmitnahme möglich) - A6 (Albtal-Verkehrs-Gesellschaft) - a8 (Anruf-Linientaxi, Tel. (0921)64422 Anmeldung bis 60 Min. vor Abfahrt.) - aa (RufBus: Tel. 04461 / 912298 Anmeldung bis spätestens 18:00 Uhr) - aA (RufBus, Tel. 03941-566166 Anmeldung mind. 60 Min. vor Fahrtbeginn) - Aa (Barrierefreies Fahrzeug 60Min vor Abf. unter Tel.0331-6614694 anmelden) - ab (AST, Tel. 07641 / 1212 Anmeldung 30 Min. vor gewünschter Fahrt) - aB (Zusatzbus v. Kues, Schulzentr - Kröv, Weisbrunnenhalle 5 Min vor Fahrt) - Ab (AST-Verkehr: Tel. (05541) 12848 Anmeldung bis 30 Minuten vor Abfahrt) - AB (Bus mit Fahrradanhänger) - aC (TaxiBus; Tel. 02831 / 398765 bitte bis 20 Uhr am Vortag bestellen) - Ac (Anruflinientaxi: Tel. 0441 / 9259292 Anmeldung am Werktag vor Abfahrt) - ad (Waldseebus nur bei Badewetter, Info: 06074-696609065 oder www.kvgOF.de) - aD (Rufbus, Tel. 07471 935050, Anmeldung mind. 60 Min. vor Abfahrt) - Ad (Taxibus; Tel. 0800/3504031 Anm. 30 Min vor Abfahrt, Gruppen am Vortag) - AD (Damenabteil) - ae (Mitnahme von max. 5 Fahrrädern 01.04. - 01.11. Infos: www.radbusse.de) - aE (Schülerverkehr-kann kurzfr entfallen. - Infos unter Tel. 03774 18020) - Ae (Tel. 08092-256518, Anmeldung bitte bis 1 Std. vor Abfahrt) - af (Kleinbus: Gruppen ab 10 Personen unter Tel. (03941)566161 anmelden) - aF (Beckenhof nur nach Anmeldung; Tel. 09189/7958 mind. 60 Min vor Abfahrt) - Af (Verkehrt nur nach Voranmeldung bis 70 Min. vor Abfahrt Tel. 08121/3141) - AF (Autofähre) - aG (Rufbus, Tel. 09524 / 850905 Anmeldung bis 15 Uhr am Vortag (Mo-Fr)) - Ag (Nur nach Voranmeld.bis 40 Min.vor Abfahrt, Tel.08084/94500 (tgl.6-22h)) - AG (VVO-Anschlussgarantie: Info unter 0800/3111888 oder www.vvo-online.de) - ah (Anmeldung mind. 30 Min. vor Fahrt Tel. 07041 / 2400 spez.Tarif) - aH (Voranmeldg. bis 1 Std. v. Abfahrt, Tel. 09245-983267422 (Mo-Fr 8-17)) - Ah (Nur nach Voranmeldung 45 Min vor Fahrt Tel. 0170/9419849 (tgl.6-22h)) - ai (Anm. bis 22 Uhr am Vortag unter Tel. (07245) 2323 oder 2635) - aI (Tel. 09723/91190 Anmeldung bis spät. 15 Uhr am Vortag (Mo-Fr)) - Ai (TaxiBus; Tel.0151-58036697 Anmeldung bis 60Min vor Abfahrt von 6-20Uhr) - AI (mit Anschluss Inselbahn) - aj (AST; Tel. 0202 / 750030 Anmeldung mind. 30 Minuten vor Abfahrt) - aJ (Anmeld. bis 1 Std. vor Abf., 09191-862511 (17-22h; Sa+So auch 9-11h)) - Aj (Taxibus; Tel. 05246-6600 Anmeldung 30 Min. vor Abfahrt von 10-18 Uhr) - AJ (ab Inselbahnhof mit Schiffsanschluss) - ak (Kleinbus; Gruppen bitte vorher anmelden) - aK (Rufbus; Tel. (0391)5481212 Anmeldung bis 30 Minuten vor Abfahrt) - Ak (Kleinfahrzeug-Gruppen sind anzumelden, Tel. 03733 / 151240) - al (Kleinbus - Gruppenfahrten bitte unter 0365 824 560 anmelden) - aL (Rufbus; Tel. 02381-9503313 Bestellung am Vortag (Mo-Fr) bis 15:30 Uhr) - Al (Kleinbus; Gruppen bitte am Vortag anmelden 0171 / 5057200) - AL (Anhaltische Bahngesellschaft) - am (Vornehmlich für den Schülerverkehr, Änderungen sind möglich) - aM (Anmeldung bis 1 Stunde vor Abfahrt: Tel. 07121-485588, Sondertarif) - Am (Ruftaxi, Tel. 06326 / 980144 Anmeldung mind. 60 Min vor Abfahrt) - an (Verkehrt nur nach Voranmeldung unter Tel. 09467/224) - aN (Rufbushst.: Hält nur nach Voranmeldung) - An (Anmeldung über www.moBiel.de/Anton oder Tel. 0521-511514,) - ao (Bedarfshalt, Tel. 03431-670815 Anmeldung 60 Min. vor Abfahrt) - aO (Anm. mind. 30 Min vor Abf. Tel. 07051/9689-0; letzte Anm. bis 17.00) - Ao (Rufbushaltestelle; bis 30 Min. vor Abfahrt unter 08122/92323 anmelden) - AO (Konsum alkoholischer Getränke im Zug verboten) - ap (Bedarfsfahrt, Tel.: 09733/81060, Anmeldung bis 15:00 Uhr des Vortages) - Ap (Rufbus: Tel. 06371 459174, Anmeldug bis 60 Minuten vor Abfahrt) - AP (Globalpreis oder Fahrkarte zzgl. Aufpreis möglich) - aq (Tel. 08341-809529 Anmeldung 60 Min. vor Abfahrt (Anm. 10-19 Uhr)) - aQ (verkehrt nur bei Anm. bis 30 Minuten vor Abfahrt Tel. 0175 / 6000148) - Aq (Anmeldeverkehr unter 07443 / 247131 bis 1 Std. vor Abfahrt) - AQ (Buchung: bte-autoreisezug.de; autoreisezug@bahntouristikexpress.de) - ar (Anm. bis 60Min vor Abfahrt, Tel. 09631-7929899, Mo-Fr 7-18:30, Sa 7-12) - aR (ALT: Fahrt bitte mindestens 30 Min vorher anmelden unter 05207/2357) - Ar (AST: Tel. 05656 / 334932 Anmeldung bis 30 Minuten vor Abfahrt) - as (Erw. Fahrradbeförderung vom 15.04. bis 01.10.2023, max. 20 Fahrräder) - aS (Anmeldungszeiten 8:00 - 12:00 Uhr, sonst am Vortag) - As (Tel. 0159-04267760, Anmeldung bis 60 Min. vor Abfahrt, Sa-So 07-22 Uhr) - AS (nur für Reisende mit Kraftfahrzeug) - at (AST=Anruf-Sammel-Taxi) - aT (TaxiBus; Tel. 0208 / 4511122 mind. 30 Min. vor Abfahrt bestellen) - At (Anmeldung bis 18.00 Uhr des Vortages: Tel. 07373 / 1539) - AT (Zug führt Autotransportwagen) - au (Bedarfsabhängige Bedienung:Fahrtverlauf abhängig vom Fahrgastaufkommen) - aU (Rufbus; bitte anmelden unter Tel. 03643 / 86410) - Au (Taxibus; Tel. 02851-1263 Anmeldung mind. 30 Min. vor Abfahrt) - av (Fahrt kann schulbedingt geändert werden) - aV (Kleinbus; Gruppen > 4 Pers. 4 Werktage vorher anm., Tel 06631-963333*) - Av (Rufbus: Tel. 06783 99500, Anmeldug bis 60 Minuten vor Abfahrt) - AV (Tickets: arriva.express@panturist.hr oder 0800 1828530 (kostenlos)) - aw (Diese Fahrt wird mit einem Kleinbus mit max 8 Sitzplätzen durchgeführt) - aW (Voranmldung bitte bis 2 Stunden vor Abfahrt, Tel. 08651-62593) - Aw (Anruf-LinienTaxi; Tel. 06669 / 960230 Anmeldung bis 60 Min vor Abfahrt) - ax (Mit Fahrradanhänger. Reservierung unter 0241 912890 bis Fr. 12 Uhr.) - Ax (Ab Sachsenwaldau nur bei Bedarf: 30 Min. vor Abfahrt: Tel 040-72594830) - AX (Buchung: www.nachtexpress.de; Tel 04661-7368744; info@nachtexpress.de) - ay (Fahrräder müssen 5 Minuten vor Abfahrt zum Verladen bereitstehen)"
          },
          "displayPriority": {
            "type": "number",
            "format": "double",
            "description": "Display priority [Anzeigereihenfolge aka \\'Priorität*] for message. Order is ascending."
          },
          "displayPriorityDetail": {
            "type": "number",
            "format": "double",
            "description": "Detailed display priority [detaillierte Anzeigereihenfolge aka \\'Feinsortierung\\'] for message. Order is ascending."
          },
          "text": {
            "type": "string",
            "description": "Text for attribute."
          }
        },
        "required": [
          "code",
          "text"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "MessageType": {
        "type": "string",
        "enum": [
          "CUSTOMER_TEXT",
          "QUALITY_VARIATION",
          "CUSTOMER_REASON"
        ],
        "description": "Classification of message. - CUSTOMER_TEXT (unstructured free text [unstrukturierter Kundenfreitext], may be based on HIM messages (no disruptions!) (for instance \\'Bitte beachten Sie die Maskenpflicht\\') - QUALITY_VARIATION (structured quality variations [struckturierte Qualitätsabweichung] (for instance \\'Geänderte Wagenreihung\\' or \\'Fahrradmitnahme nicht möglich\\') - CUSTOMER_REASON (structured customer reasons [struckturierte Kundenbegründungen] (for instance \\'Umgestürzter Baum auf Strecke\\' or \\'Verspätung aufgrund vorausfahrendem Zug\\')"
      },
      "MessageLegacy": {
        "description": "Message for customers.",
        "properties": {
          "category": {
            "type": "string",
            "description": "Optional category of message, like for instance \\'Bauarbeiten\\' or \\'Informationen\\'"
          },
          "code": {
            "type": "string",
            "description": "Unique code of message may be empty in case of HIM based messages."
          },
          "displayPriority": {
            "type": "number",
            "format": "double",
            "description": "Display priority [Anzeigereihenfolge] for message. Order is by display priority asc. May be empty."
          },
          "text": {
            "type": "string",
            "description": "Freetext of message."
          },
          "textShort": {
            "type": "string",
            "description": "Short freetext of message, may be empty."
          },
          "type": {
            "$ref": "#/components/schemas/MessageType"
          }
        },
        "required": [
          "text",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TransportPublicDestinationOriginJourney": {
        "description": "Public transport reference [Oeffentlicher Verkehr Referenz] with origin [Herkunft] and destination [Ziel] information and journey id [FahrtID].",
        "properties": {
          "category": {
            "type": "string",
            "description": "Code of the transport [Fahrtgattung]."
          },
          "destination": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "differingDestination": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionInfo"
          },
          "journeyID": {
            "type": "string",
            "description": "ID of journey [FahrtID]."
          },
          "label": {
            "type": "string",
            "description": "Marketing - or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
          },
          "line": {
            "type": "string",
            "description": "Line of the transport [Linie]."
          },
          "number": {
            "type": "number",
            "format": "double",
            "description": "Number of the transport [Fahrtnummer]."
          },
          "origin": {
            "$ref": "#/components/schemas/StopAtStopPlace"
          },
          "replacementTransport": {
            "$ref": "#/components/schemas/ReplacementTransport"
          },
          "type": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "category",
          "destination",
          "journeyID",
          "number",
          "origin",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TimeType": {
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PREVIEW",
          "REAL"
        ],
        "description": "Specifies whether \\'time\\' is based on schedule or preview. - SCHEDULE (Time source is schedule) - PREVIEW (Time source is preview / forecast) - REAL (Time source is real)"
      },
      "TransportPublic": {
        "description": "Public transport description for all types of trains, buses, subways, trams etc.",
        "properties": {
          "category": {
            "type": "string",
            "description": "Code of the transport [Fahrtgattung]."
          },
          "direction": {
            "$ref": "#/components/schemas/DirectionInfo"
          },
          "label": {
            "type": "string",
            "description": "Marketing - or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
          },
          "line": {
            "type": "string",
            "description": "Line of the transport [Linie]."
          },
          "number": {
            "type": "number",
            "format": "double",
            "description": "Number of the transport [Fahrtnummer]."
          },
          "replacementTransport": {
            "$ref": "#/components/schemas/ReplacementTransport"
          },
          "type": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "category",
          "number",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "EventType": {
        "type": "string",
        "enum": [
          "ARRIVAL",
          "DEPARTURE"
        ],
        "description": "Type of event. Can be arrival or departure. - ARRIVAL (Ankunft) - DEPARTURE (Abfahrt)"
      },
      "ArrivalDepartureEvent": {
        "description": "Journey event [Fahrtereignis].",
        "properties": {
          "additional": {
            "type": "boolean",
            "description": "Indicates whether this segment is additional, meaning not be part of the regular schedule. Take care that an event of an additional journey [Zusatzfahrt] is only considered as additional in case the event has been added to the journeys after the additional journey has been scheduled."
          },
          "administration": {
            "$ref": "#/components/schemas/Administration"
          },
          "arrivalOrDepartureID": {
            "type": "string",
            "description": "ID of arrival or departure, depends on event type."
          },
          "attributes": {
            "items": {
              "$ref": "#/components/schemas/MessageAttribute"
            },
            "type": "array",
            "description": "List of journey-attributes [Fahrtmerkmale / Sollmerkmale] at this particular stop."
          },
          "canceled": {
            "type": "boolean",
            "description": "Indicates whether this event has been canceled."
          },
          "disruptions": {
            "items": {
              "$ref": "#/components/schemas/DisruptionCommunicationEmbeddedLegacy"
            },
            "type": "array",
            "description": "List of disruptions [Stoerungsinformationen] for journey at this particular stop."
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/MessageLegacy"
            },
            "type": "array",
            "description": "List of messages [Freitexte] for journey at this particular stop [Freitexte]."
          },
          "onDemand": {
            "type": "boolean",
            "description": "Indicates whether arrival or departure is an on demand stop [Bedarfshalt]."
          },
          "passengerChange": {
            "type": "boolean",
            "description": "Indicates whether passengers are allowed to enter / leave [Fahrgastwechsel]."
          },
          "platform": {
            "type": "string",
            "description": "Actual platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
          },
          "platformSchedule": {
            "type": "string",
            "description": "Scheduled platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
          },
          "reliefBy": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationOriginJourney"
            },
            "type": "array",
            "description": "List of transports this journey at this particular event is reliefed by [Entlastungszug]."
          },
          "reliefFor": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationOriginJourney"
            },
            "type": "array",
            "description": "List of transports this journey at this particular event reliefs for [Entlastungszug]."
          },
          "replacedBy": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationOriginJourney"
            },
            "type": "array",
            "description": "List of transports this journey at this particular event is replaced by [Ersatzzug]."
          },
          "replacementFor": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationOriginJourney"
            },
            "type": "array",
            "description": "List of transports this journey at this particular event replaces [Ersatzzug]."
          },
          "station": {
            "$ref": "#/components/schemas/StopPlaceEmbedded"
          },
          "time": {
            "type": "string",
            "description": "Best known time information of stop as fully qualified date (for instance \\'2019-08-19T12:56:14+02:00\\' or \\'2019-08-19T10:56:14Z\\')."
          },
          "timeSchedule": {
            "type": "string",
            "description": "Scheduled time [Soll] of stop as fully qualified date (for instance \\'2019-08-19T12:56:14+02:00\\' or \\'2019-08-19T10:56:14Z\\')."
          },
          "timeType": {
            "$ref": "#/components/schemas/TimeType"
          },
          "transport": {
            "$ref": "#/components/schemas/TransportPublic"
          },
          "travelsWith": {
            "items": {
              "$ref": "#/components/schemas/TransportPublicDestinationPortionWorking"
            },
            "type": "array",
            "description": "List of journeys this journey at this particular event travels with [Vereinigung]."
          },
          "type": {
            "$ref": "#/components/schemas/EventType"
          }
        },
        "required": [
          "additional",
          "administration",
          "arrivalOrDepartureID",
          "attributes",
          "canceled",
          "messages",
          "onDemand",
          "passengerChange",
          "platform",
          "reliefBy",
          "reliefFor",
          "replacedBy",
          "replacementFor",
          "station",
          "time",
          "timeSchedule",
          "timeType",
          "transport",
          "travelsWith",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JourneyType": {
        "type": "string",
        "enum": [
          "REGULAR",
          "REPLACEMENT",
          "RELIEF",
          "EXTRA"
        ],
        "description": "Defines whether journey [Fahrt] is regular or some kind of special. - REGULAR (Regular scheduled journey) - REPLACEMENT (Journey that replaces another journey) - RELIEF (Journey that reliefs another journey) - EXTRA (Journey that is somehow extra"
      },
      "JourneyEventBased": {
        "description": "Event based [Fahrtereignisbasiert] information for a particular journey [Fahrtverlauf].",
        "properties": {
          "continuationBy": {
            "$ref": "#/components/schemas/TransportPublicDestination"
          },
          "continuationFor": {
            "$ref": "#/components/schemas/TransportPublicOrigin"
          },
          "destinationSchedule": {
            "$ref": "#/components/schemas/StopPlaceEmbedded"
          },
          "disruptions": {
            "items": {
              "$ref": "#/components/schemas/DisruptionCommunicationEmbeddedLegacy"
            },
            "type": "array",
            "description": "List of disruptions [Stoerungsinformationen] for whole journey."
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/ArrivalDepartureEvent"
            },
            "type": "array",
            "description": "List of events [Fahrtereignisse]. Order is based on 1 - scheduled time and 2 - arrival before departure."
          },
          "journeyCanceled": {
            "type": "boolean",
            "description": "Flag that indicates whether whole journey has been canceled."
          },
          "journeyID": {
            "type": "string",
            "description": "ID of journey [FahrtID]."
          },
          "originSchedule": {
            "$ref": "#/components/schemas/StopPlaceEmbedded"
          },
          "type": {
            "$ref": "#/components/schemas/JourneyType"
          }
        },
        "required": [
          "destinationSchedule",
          "events",
          "journeyCanceled",
          "journeyID",
          "originSchedule",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HafasCoordinates": {
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "lat",
          "lng"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HafasStation": {
        "properties": {
          "name": {
            "type": "string"
          },
          "evaNumber": {
            "type": "string"
          },
          "ril100": {
            "type": "string"
          },
          "products": {
            "items": {
              "$ref": "#/components/schemas/ParsedProduct"
            },
            "type": "array"
          },
          "coordinates": {
            "$ref": "#/components/schemas/HafasCoordinates"
          }
        },
        "required": [
          "name",
          "evaNumber",
          "coordinates"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedPolyline": {
        "properties": {
          "points": {
            "items": {
              "items": {
                "type": "number",
                "format": "double"
              },
              "type": "array"
            },
            "type": "array"
          },
          "delta": {
            "type": "boolean"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/HafasStation"
            },
            "type": "array"
          }
        },
        "required": [
          "points",
          "delta",
          "locations"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ProdCtx": {
        "properties": {
          "name": {
            "type": "string"
          },
          "num": {
            "type": "string"
          },
          "matchId": {
            "type": "string"
          },
          "catOut": {
            "type": "string"
          },
          "catOutS": {
            "type": "string"
          },
          "catOutL": {
            "type": "string"
          },
          "catIn": {
            "type": "string"
          },
          "catCode": {
            "type": "string"
          },
          "admin": {
            "type": "string"
          },
          "lineId": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "cls": {
            "type": "number",
            "format": "double"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "name",
          "cls",
          "icoX"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ProdL": {
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "cls": {
            "type": "number",
            "format": "double"
          },
          "oprX": {
            "type": "number",
            "format": "double"
          },
          "prodCtx": {
            "$ref": "#/components/schemas/ProdCtx"
          },
          "addName": {
            "type": "string"
          },
          "nameS": {
            "type": "string"
          },
          "matchId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "icoX",
          "cls"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrnCmpSX": {
        "properties": {
          "tcocX": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array"
          },
          "tcM": {
            "type": "number",
            "format": "double"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "TxtC": {
        "properties": {
          "r": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "r",
          "g",
          "b"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "MsgL": {
        "properties": {
          "type": {
            "type": "string"
          },
          "remX": {
            "type": "number",
            "format": "double"
          },
          "txtC": {
            "$ref": "#/components/schemas/TxtC"
          },
          "prio": {
            "type": "number",
            "format": "double"
          },
          "fIdx": {
            "type": "number",
            "format": "double"
          },
          "tIdx": {
            "type": "number",
            "format": "double"
          },
          "tagL": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "type",
          "remX",
          "txtC",
          "prio",
          "fIdx",
          "tIdx",
          "tagL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonDeparture": {
        "properties": {
          "locX": {
            "type": "number",
            "format": "double"
          },
          "idx": {
            "type": "number",
            "format": "double"
          },
          "dCncl": {
            "type": "boolean"
          },
          "dProdX": {
            "type": "number",
            "format": "double"
          },
          "dInS": {
            "type": "boolean"
          },
          "dInR": {
            "type": "boolean"
          },
          "dTimeS": {
            "type": "string"
          },
          "dTimeR": {
            "type": "string"
          },
          "dPlatfS": {
            "type": "string"
          },
          "dPlatfR": {
            "type": "string"
          },
          "dProgType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "dTZOffset": {
            "type": "number",
            "format": "double"
          },
          "dTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          }
        },
        "required": [
          "locX",
          "dInS",
          "dInR",
          "dTimeS"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonArrival": {
        "properties": {
          "locX": {
            "type": "number",
            "format": "double"
          },
          "idx": {
            "type": "number",
            "format": "double"
          },
          "aCncl": {
            "type": "boolean"
          },
          "aProdX": {
            "type": "number",
            "format": "double"
          },
          "aOutR": {
            "type": "boolean"
          },
          "aTimeS": {
            "type": "string"
          },
          "aTimeR": {
            "type": "string"
          },
          "aPlatfS": {
            "type": "string"
          },
          "aPlatfR": {
            "type": "string"
          },
          "aProgType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "aTZOffset": {
            "type": "number",
            "format": "double"
          },
          "aTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          }
        },
        "required": [
          "locX",
          "aOutR",
          "aTimeS"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonStop": {
        "properties": {
          "locX": {
            "type": "number",
            "format": "double"
          },
          "idx": {
            "type": "number",
            "format": "double"
          },
          "aCncl": {
            "type": "boolean"
          },
          "aProdX": {
            "type": "number",
            "format": "double"
          },
          "aOutR": {
            "type": "boolean"
          },
          "aTimeS": {
            "type": "string"
          },
          "aTimeR": {
            "type": "string"
          },
          "aPlatfS": {
            "type": "string"
          },
          "aPlatfR": {
            "type": "string"
          },
          "aProgType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "aTZOffset": {
            "type": "number",
            "format": "double"
          },
          "aTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "dCncl": {
            "type": "boolean"
          },
          "dProdX": {
            "type": "number",
            "format": "double"
          },
          "dInS": {
            "type": "boolean"
          },
          "dInR": {
            "type": "boolean"
          },
          "dTimeS": {
            "type": "string"
          },
          "dTimeR": {
            "type": "string"
          },
          "dPlatfS": {
            "type": "string"
          },
          "dPlatfR": {
            "type": "string"
          },
          "dProgType": {
            "type": "string"
          },
          "dTZOffset": {
            "type": "number",
            "format": "double"
          },
          "dTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "isAdd": {
            "type": "boolean"
          }
        },
        "required": [
          "locX",
          "aOutR",
          "aTimeS",
          "dInS",
          "dInR",
          "dTimeS"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JnyL": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "prodX": {
            "type": "number",
            "format": "double"
          },
          "dirTxt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRchbl": {
            "type": "boolean"
          },
          "isCncl": {
            "type": "boolean"
          },
          "isPartCncl": {
            "type": "boolean"
          },
          "subscr": {
            "type": "string"
          },
          "stopL": {
            "items": {
              "$ref": "#/components/schemas/CommonStop"
            },
            "type": "array"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          }
        },
        "required": [
          "jid",
          "prodX",
          "dirTxt",
          "status",
          "isRchbl",
          "subscr",
          "stopL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Freq": {
        "properties": {
          "minC": {
            "type": "number",
            "format": "double"
          },
          "maxC": {
            "type": "number",
            "format": "double"
          },
          "numC": {
            "type": "number",
            "format": "double"
          },
          "jnyL": {
            "items": {
              "$ref": "#/components/schemas/JnyL"
            },
            "type": "array"
          }
        },
        "required": [
          "minC",
          "maxC",
          "numC",
          "jnyL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Jny": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "prodX": {
            "type": "number",
            "format": "double"
          },
          "dirTxt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRchbl": {
            "type": "boolean"
          },
          "isCncl": {
            "type": "boolean"
          },
          "isPartCncl": {
            "type": "boolean"
          },
          "subscr": {
            "type": "string"
          },
          "stopL": {
            "items": {
              "$ref": "#/components/schemas/CommonStop"
            },
            "type": "array"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "chgDurR": {
            "type": "number",
            "format": "double"
          },
          "ctxRecon": {
            "type": "string"
          },
          "dTrnCmpSXmsgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "dTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "freq": {
            "$ref": "#/components/schemas/Freq"
          }
        },
        "required": [
          "jid",
          "prodX",
          "dirTxt",
          "status",
          "isRchbl",
          "subscr",
          "ctxRecon",
          "dTrnCmpSXmsgL",
          "freq"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecLJNY": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "JNY"
            ],
            "nullable": false
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "dep": {
            "$ref": "#/components/schemas/CommonDeparture"
          },
          "arr": {
            "$ref": "#/components/schemas/CommonArrival"
          },
          "jny": {
            "$ref": "#/components/schemas/Jny"
          },
          "parJnyL": {
            "items": {
              "$ref": "#/components/schemas/Jny"
            },
            "type": "array"
          },
          "resState": {
            "type": "string",
            "enum": [
              "N",
              "B",
              "S"
            ]
          },
          "resRecommendation": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "icoX",
          "dep",
          "arr",
          "jny",
          "resState",
          "resRecommendation"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Gis": {
        "properties": {
          "dist": {
            "type": "number",
            "format": "double"
          },
          "durS": {
            "type": "string"
          },
          "dirGeo": {
            "type": "number",
            "format": "double"
          },
          "ctx": {
            "type": "string"
          },
          "gisPrvr": {
            "type": "string"
          },
          "getDescr": {
            "type": "boolean"
          },
          "getPoly": {
            "type": "boolean"
          }
        },
        "required": [
          "dist",
          "durS",
          "dirGeo",
          "ctx",
          "gisPrvr",
          "getDescr",
          "getPoly"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecLWALK": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "WALK",
              "TRSF"
            ]
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "dep": {
            "$ref": "#/components/schemas/CommonDeparture"
          },
          "arr": {
            "$ref": "#/components/schemas/CommonArrival"
          },
          "gis": {
            "$ref": "#/components/schemas/Gis"
          }
        },
        "required": [
          "type",
          "icoX",
          "dep",
          "arr",
          "gis"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecLKISS": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "KISS"
            ],
            "nullable": false
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecL": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/SecLJNY"
          },
          {
            "$ref": "#/components/schemas/SecLWALK"
          },
          {
            "$ref": "#/components/schemas/SecLKISS"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "JNY": "#/components/schemas/SecLJNY",
            "WALK": "#/components/schemas/SecLWALK",
            "TRSF": "#/components/schemas/SecLWALK",
            "KISS": "#/components/schemas/SecLKISS"
          }
        }
      },
      "RouteTarifFare": {
        "properties": {
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "moreExpensiveAvailable": {
            "type": "boolean"
          },
          "bookable": {
            "type": "boolean"
          },
          "upsell": {
            "type": "boolean",
            "description": "???"
          },
          "targetContext": {
            "type": "string",
            "description": "???"
          }
        },
        "required": [
          "price",
          "moreExpensiveAvailable",
          "bookable",
          "upsell",
          "targetContext"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RouteTarifFareSet": {
        "properties": {
          "fares": {
            "items": {
              "$ref": "#/components/schemas/RouteTarifFare"
            },
            "type": "array"
          }
        },
        "required": [
          "fares"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RouteJourney": {
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "changeDuration": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "journeyId": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProdL"
          },
          "raw": {
            "$ref": "#/components/schemas/SecL"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/RouteStop"
            },
            "type": "array"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/RouteAuslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/RouteTarifFareSet"
            },
            "type": "array"
          }
        },
        "required": [
          "finalDestination",
          "segmentDestination",
          "segmentStart",
          "stops",
          "train"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedSearchOnTripResponse": {
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "changeDuration": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "journeyId": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProdL"
          },
          "raw": {
            "$ref": "#/components/schemas/SecL"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/RouteStop"
            },
            "type": "array"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/RouteAuslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/RouteTarifFareSet"
            },
            "type": "array"
          },
          "type": {
            "type": "string",
            "enum": [
              "JNY"
            ],
            "nullable": false
          },
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "wings": {
            "items": {
              "$ref": "#/components/schemas/RouteJourney"
            },
            "type": "array"
          },
          "himMessages": {
            "items": {
              "$ref": "#/components/schemas/HimIrisMessage"
            },
            "type": "array"
          },
          "currentStop": {
            "$ref": "#/components/schemas/RouteStop"
          },
          "polyline": {
            "$ref": "#/components/schemas/ParsedPolyline"
          }
        },
        "required": [
          "finalDestination",
          "segmentDestination",
          "segmentStart",
          "stops",
          "train",
          "type",
          "arrival",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "EvaNumber": {
        "type": "string",
        "example": "8000105",
        "description": "Usually 7 digits, leading zeros can be omitted"
      },
      "LageplanResponse": {
        "properties": {
          "lageplan": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "Coordinate2D": {
        "description": "2D coordinate within geo reference system.",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude position in reference system."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude position in reference system."
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "GroupedStopPlace": {
        "properties": {
          "evaNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "availableTransports": {
            "items": {
              "$ref": "#/components/schemas/TransportType"
            },
            "type": "array"
          },
          "position": {
            "$ref": "#/components/schemas/Coordinate2D"
          },
          "ifopt": {
            "type": "string"
          },
          "ril100": {
            "type": "string"
          },
          "alternativeRil100": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "stationId": {
            "type": "string"
          },
          "uic": {
            "type": "string"
          }
        },
        "required": [
          "evaNumber",
          "name",
          "availableTransports"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Record_string.RouteAuslastung-or-null_": {
        "properties": {},
        "additionalProperties": {
          "$ref": "#/components/schemas/RouteAuslastung"
        },
        "type": "object",
        "description": "Construct a type with a set of properties K of type T"
      },
      "TrainOccupancyList": {
        "$ref": "#/components/schemas/Record_string.RouteAuslastung-or-null_"
      },
      "StopInfo": {
        "properties": {
          "isPlan": {
            "type": "boolean",
            "description": "Quelle dieser info ist die Planwagenreihung"
          },
          "scheduledPlatform": {
            "type": "string",
            "description": "Scheduled Platform"
          },
          "platform": {
            "type": "string",
            "description": "Best known platform, might be identical to scheduledPlatform"
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled time for this stop"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "best known time for this stop, might be identical to scheduledTime"
          },
          "delay": {
            "type": "integer",
            "format": "int32"
          },
          "reihung": {
            "type": "boolean"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "cancelled": {
            "type": "boolean"
          },
          "isRealTime": {
            "type": "boolean"
          },
          "wingIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "MediumIds of journeys that are wings of this journey at this stop."
          },
          "hidden": {
            "type": "boolean"
          },
          "transition": {
            "type": "string",
            "description": "Durchbindung? Zug wechselt die Kategorie, theoretisch aber sogar Zugnummer?"
          }
        },
        "required": [
          "scheduledTime",
          "time"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Messages": {
        "properties": {
          "qos": {
            "items": {
              "$ref": "#/components/schemas/IrisMessage"
            },
            "type": "array"
          },
          "delay": {
            "items": {
              "$ref": "#/components/schemas/IrisMessage"
            },
            "type": "array"
          },
          "him": {
            "items": {
              "$ref": "#/components/schemas/HimIrisMessage"
            },
            "type": "array"
          }
        },
        "required": [
          "qos",
          "delay",
          "him"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SubstituteRef": {
        "properties": {
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "This is actually category"
          }
        },
        "required": [
          "number",
          "name",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Stop": {
        "properties": {
          "additional": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          },
          "showVia": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrainInfo": {
        "properties": {
          "name": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "This is actually category"
          },
          "operator": {
            "$ref": "#/components/schemas/OpL"
          },
          "admin": {
            "type": "string"
          },
          "transportType": {
            "$ref": "#/components/schemas/TransportType"
          }
        },
        "required": [
          "name",
          "transportType",
          "type",
          "number"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Abfahrt": {
        "properties": {
          "journeyId": {
            "type": "string"
          },
          "initialDeparture": {
            "type": "string",
            "format": "date-time"
          },
          "initialStopPlace": {
            "type": "string",
            "description": "evaNumber of first stopPlace in route"
          },
          "arrival": {
            "$ref": "#/components/schemas/StopInfo"
          },
          "currentStopPlace": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "departure": {
            "$ref": "#/components/schemas/StopInfo"
          },
          "destination": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "additional": {
            "type": "boolean",
            "description": "Is this stop unplanned and additional?"
          },
          "cancelled": {
            "type": "boolean",
            "description": "Is this stop cancelled for this journey?"
          },
          "mediumId": {
            "type": "string"
          },
          "messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "platform": {
            "type": "string"
          },
          "productClass": {
            "type": "string",
            "description": "Most likely D | N | S | F"
          },
          "rawId": {
            "type": "string"
          },
          "ref": {
            "$ref": "#/components/schemas/SubstituteRef"
          },
          "route": {
            "items": {
              "$ref": "#/components/schemas/Stop"
            },
            "type": "array"
          },
          "scheduledDestination": {
            "type": "string"
          },
          "scheduledPlatform": {
            "type": "string"
          },
          "substitute": {
            "type": "boolean"
          },
          "substituted": {
            "type": "boolean"
          },
          "train": {
            "$ref": "#/components/schemas/TrainInfo"
          },
          "previousTrain": {
            "$ref": "#/components/schemas/TrainInfo",
            "description": "Sofern Durchbindung passiert ist steht hier der vorherige Transport drin. Is fachlich ultra hacky."
          }
        },
        "required": [
          "initialDeparture",
          "initialStopPlace",
          "currentStopPlace",
          "destination",
          "id",
          "mediumId",
          "messages",
          "platform",
          "productClass",
          "rawId",
          "route",
          "scheduledDestination",
          "scheduledPlatform",
          "train"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Record_string.Abfahrt_": {
        "properties": {},
        "additionalProperties": {
          "$ref": "#/components/schemas/Abfahrt"
        },
        "type": "object",
        "description": "Construct a type with a set of properties K of type T"
      },
      "Wings": {
        "$ref": "#/components/schemas/Record_string.Abfahrt_",
        "description": "Map of \"mediumId\" to Abfahrt."
      },
      "AbfahrtenResult": {
        "properties": {
          "departures": {
            "items": {
              "$ref": "#/components/schemas/Abfahrt"
            },
            "type": "array",
            "description": "Journeys that have not yet departed (or arrived if they end here)"
          },
          "lookbehind": {
            "items": {
              "$ref": "#/components/schemas/Abfahrt"
            },
            "type": "array",
            "description": "Journeys that have already departed (or arrived if they end here)"
          },
          "wings": {
            "$ref": "#/components/schemas/Wings"
          },
          "strike": {
            "type": "number",
            "format": "double",
            "description": "amount of departures/arrivals that are affected by a strike [Streik]"
          },
          "stopPlaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "Eva Numbers queried for this resultset"
          }
        },
        "required": [
          "departures",
          "lookbehind",
          "stopPlaces"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RouteJourneySegmentTrain": {
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "changeDuration": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "journeyId": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProdL"
          },
          "raw": {
            "$ref": "#/components/schemas/SecL"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/RouteStop"
            },
            "type": "array"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/RouteAuslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/RouteTarifFareSet"
            },
            "type": "array"
          },
          "type": {
            "type": "string",
            "enum": [
              "JNY"
            ],
            "nullable": false
          },
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "wings": {
            "items": {
              "$ref": "#/components/schemas/RouteJourney"
            },
            "type": "array"
          }
        },
        "required": [
          "finalDestination",
          "segmentDestination",
          "segmentStart",
          "stops",
          "train",
          "type",
          "arrival",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "WalkStopInfo": {
        "properties": {
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "delay": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "time"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RouteJourneySegmentWalk": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "WALK"
            ],
            "nullable": false
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "arrival": {
            "$ref": "#/components/schemas/WalkStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/WalkStopInfo"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/HafasStation"
          }
        },
        "required": [
          "type",
          "train",
          "arrival",
          "departure",
          "duration",
          "segmentStart",
          "segmentDestination"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RouteJourneySegment": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/RouteJourneySegmentTrain"
          },
          {
            "$ref": "#/components/schemas/RouteJourneySegmentWalk"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "JNY": "#/components/schemas/RouteJourneySegmentTrain",
            "WALK": "#/components/schemas/RouteJourneySegmentWalk"
          }
        }
      },
      "SingleRoute": {
        "properties": {
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "isRideable": {
            "type": "boolean"
          },
          "checksum": {
            "type": "string"
          },
          "cid": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "changes": {
            "type": "integer",
            "format": "int32"
          },
          "segments": {
            "items": {
              "$ref": "#/components/schemas/RouteJourneySegment"
            },
            "type": "array"
          },
          "segmentTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/RouteTarifFareSet"
            },
            "type": "array"
          }
        },
        "required": [
          "arrival",
          "departure",
          "isRideable",
          "checksum",
          "cid",
          "date",
          "duration",
          "changes",
          "segments",
          "segmentTypes"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RoutingResult": {
        "properties": {
          "routes": {
            "items": {
              "$ref": "#/components/schemas/SingleRoute"
            },
            "type": "array"
          },
          "context": {
            "properties": {
              "later": {
                "type": "string"
              },
              "earlier": {
                "type": "string"
              }
            },
            "required": [
              "later",
              "earlier"
            ],
            "type": "object"
          }
        },
        "required": [
          "routes",
          "context"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "StopPlaceLocation": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "stopPlace"
            ],
            "nullable": false
          },
          "evaNumber": {
            "$ref": "#/components/schemas/EvaNumber"
          }
        },
        "required": [
          "type",
          "evaNumber"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoordinateLocation": {
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude position in reference system."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude position in reference system."
          },
          "type": {
            "type": "string",
            "enum": [
              "coordinate"
            ],
            "nullable": false
          }
        },
        "required": [
          "latitude",
          "longitude",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RoutingLocationInput": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/StopPlaceLocation"
          },
          {
            "$ref": "#/components/schemas/CoordinateLocation"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "stopPlace": "#/components/schemas/StopPlaceLocation",
            "coordinate": "#/components/schemas/CoordinateLocation"
          }
        }
      },
      "TripSearchViaV4": {
        "properties": {
          "evaNumber": {
            "type": "string"
          },
          "minChangeTime": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "evaNumber"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JnyCl": {
        "enum": [
          1,
          2
        ],
        "type": "number"
      },
      "TravelerType": {
        "enum": [
          "E",
          "K",
          "B"
        ],
        "type": "string"
      },
      "LoyalityCard": {
        "enum": [
          "BC25First",
          "BC25Second",
          "BC50First",
          "BC50Second",
          "SHCard",
          "ATVorteilscard",
          "CHGeneral",
          "CHHalfWithRailplus",
          "CHHalfWithoutRailplus",
          "NLWithRailplus",
          "NLWithoutRailplus",
          "BC100First",
          "BC100Second"
        ],
        "type": "string"
      },
      "TripSearchTraveler": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TravelerType"
          },
          "loyalityCard": {
            "$ref": "#/components/schemas/LoyalityCard",
            "description": "Testing Comment"
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TripSearchTarifRequest": {
        "properties": {
          "class": {
            "$ref": "#/components/schemas/JnyCl"
          },
          "traveler": {
            "items": {
              "$ref": "#/components/schemas/TripSearchTraveler"
            },
            "type": "array"
          }
        },
        "required": [
          "class",
          "traveler"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TripSearchOptionsV4": {
        "properties": {
          "economic": {
            "type": "boolean",
            "description": "true = not only fastest route"
          },
          "getIV": {
            "type": "boolean",
            "description": "Unknown flag"
          },
          "getPasslist": {
            "type": "boolean",
            "description": "Get Stop inbetween"
          },
          "getPolyline": {
            "type": "boolean",
            "description": "Polylines - unknown format"
          },
          "numF": {
            "type": "number",
            "format": "double"
          },
          "ctxScr": {
            "type": "string"
          },
          "ushrp": {
            "type": "boolean",
            "description": "Is a station nearby enough for routing?"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "transferTime": {
            "type": "number",
            "format": "double"
          },
          "maxChanges": {
            "type": "number",
            "format": "double"
          },
          "searchForDeparture": {
            "type": "boolean"
          },
          "onlyRegional": {
            "type": "boolean"
          },
          "onlyNetzcard": {
            "type": "boolean"
          },
          "tarif": {
            "$ref": "#/components/schemas/TripSearchTarifRequest"
          },
          "start": {
            "$ref": "#/components/schemas/RoutingLocationInput"
          },
          "destination": {
            "$ref": "#/components/schemas/RoutingLocationInput"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TripSearchViaV4"
            },
            "type": "array"
          }
        },
        "required": [
          "start",
          "destination"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "InputTripSearchOptionsV4": {
        "$ref": "#/components/schemas/TripSearchOptionsV4"
      },
      "AllowedHafasProfile": {
        "enum": [
          "db",
          "oebb",
          "bvg",
          "hvv",
          "rmv",
          "sncb",
          "avv",
          "nahsh",
          "insa",
          "anachb",
          "vao",
          "sbb",
          "dbnetz",
          "pkp",
          "dbregio",
          "smartrbl",
          "vbn"
        ],
        "type": "string"
      },
      "TripSearchViaV3": {
        "properties": {
          "evaId": {
            "type": "string"
          },
          "minChangeTime": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "evaId"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TripSearchOptionsV3": {
        "properties": {
          "economic": {
            "type": "boolean",
            "description": "true = not only fastest route"
          },
          "getIV": {
            "type": "boolean",
            "description": "Unknown flag"
          },
          "getPasslist": {
            "type": "boolean",
            "description": "Get Stop inbetween"
          },
          "getPolyline": {
            "type": "boolean",
            "description": "Polylines - unknown format"
          },
          "numF": {
            "type": "number",
            "format": "double"
          },
          "ctxScr": {
            "type": "string"
          },
          "ushrp": {
            "type": "boolean",
            "description": "Is a station nearby enough for routing?"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "transferTime": {
            "type": "number",
            "format": "double"
          },
          "maxChanges": {
            "type": "number",
            "format": "double"
          },
          "searchForDeparture": {
            "type": "boolean"
          },
          "onlyRegional": {
            "type": "boolean"
          },
          "onlyNetzcard": {
            "type": "boolean"
          },
          "tarif": {
            "$ref": "#/components/schemas/TripSearchTarifRequest"
          },
          "start": {
            "$ref": "#/components/schemas/EvaNumber"
          },
          "destination": {
            "$ref": "#/components/schemas/EvaNumber"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TripSearchViaV3"
            },
            "type": "array"
          }
        },
        "required": [
          "start",
          "destination"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "InputTripSearchOptionsV3": {
        "$ref": "#/components/schemas/TripSearchOptionsV3"
      },
      "Record_EvaNumber.RouteAuslastung_": {
        "properties": {},
        "additionalProperties": {
          "$ref": "#/components/schemas/RouteAuslastung"
        },
        "type": "object",
        "description": "Construct a type with a set of properties K of type T"
      },
      "AdditionalJourneyInformation": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "operatorName": {
            "type": "string"
          },
          "occupancy": {
            "$ref": "#/components/schemas/Record_EvaNumber.RouteAuslastung_"
          },
          "polyline": {
            "$ref": "#/components/schemas/ParsedPolyline"
          }
        },
        "required": [
          "occupancy"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ArrivalStationBoardEntry": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "cancelled": {
            "type": "boolean"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/RouteStop"
            },
            "type": "array"
          },
          "currentStation": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          }
        },
        "required": [
          "train",
          "finalDestination",
          "jid",
          "currentStation",
          "arrival"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DepartureStationBoardEntry": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "cancelled": {
            "type": "boolean"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/RouteStop"
            },
            "type": "array"
          },
          "currentStation": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          }
        },
        "required": [
          "train",
          "finalDestination",
          "jid",
          "currentStation",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "StationBoardEntry": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ArrivalStationBoardEntry"
          },
          {
            "$ref": "#/components/schemas/DepartureStationBoardEntry"
          }
        ]
      },
      "CInfo": {
        "properties": {
          "code": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "msg": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "url",
          "msg"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ArrStbStop": {
        "$ref": "#/components/schemas/CommonArrival"
      },
      "ArrivalJny": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "prodX": {
            "type": "number",
            "format": "double"
          },
          "dirTxt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRchbl": {
            "type": "boolean"
          },
          "isCncl": {
            "type": "boolean"
          },
          "isPartCncl": {
            "type": "boolean"
          },
          "subscr": {
            "type": "string"
          },
          "stopL": {
            "items": {
              "$ref": "#/components/schemas/CommonStop"
            },
            "type": "array"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "date": {
            "type": "string"
          },
          "stbStop": {
            "$ref": "#/components/schemas/ArrStbStop"
          }
        },
        "required": [
          "jid",
          "prodX",
          "dirTxt",
          "status",
          "isRchbl",
          "subscr",
          "date",
          "stbStop"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Crd": {
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "layerX": {
            "type": "number",
            "format": "double"
          },
          "crdSysX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Required_OptionalLocL_": {
        "properties": {
          "lid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "extId": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "crd": {
            "$ref": "#/components/schemas/Crd"
          },
          "pCls": {
            "type": "number",
            "format": "double"
          },
          "pRefL": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array",
            "description": "Reference to prodL"
          }
        },
        "required": [
          "lid",
          "type",
          "name",
          "icoX",
          "extId",
          "state",
          "crd",
          "pCls",
          "pRefL"
        ],
        "type": "object",
        "description": "Make all properties in T required"
      },
      "LocL": {
        "$ref": "#/components/schemas/Required_OptionalLocL_"
      },
      "PpLocRefL": {
        "properties": {
          "ppIdx": {
            "type": "number",
            "format": "double"
          },
          "locX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "ppIdx",
          "locX"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "PolyL": {
        "properties": {
          "delta": {
            "type": "boolean"
          },
          "dim": {
            "type": "number",
            "format": "double"
          },
          "crdEncYX": {
            "type": "string"
          },
          "crdEncS": {
            "type": "string"
          },
          "crdEncF": {
            "type": "string"
          },
          "ppLocRefL": {
            "items": {
              "$ref": "#/components/schemas/PpLocRefL"
            },
            "type": "array"
          }
        },
        "required": [
          "delta",
          "dim",
          "crdEncYX",
          "crdEncS",
          "crdEncF",
          "ppLocRefL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "LayerL": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "index": {
            "type": "number",
            "format": "double"
          },
          "annoCnt": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "id",
          "name",
          "index",
          "annoCnt"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CrdSysL": {
        "properties": {
          "id": {
            "type": "string"
          },
          "index": {
            "type": "number",
            "format": "double"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "index",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "IcoL": {
        "properties": {
          "res": {
            "type": "string"
          },
          "txt": {
            "type": "string"
          }
        },
        "required": [
          "res"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TcocL": {
        "properties": {
          "c": {
            "type": "string"
          },
          "r": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "c"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HimMsgEdgeL": {
        "properties": {
          "icoCrd": {
            "properties": {
              "y": {
                "type": "string"
              },
              "x": {
                "type": "string"
              }
            },
            "required": [
              "y",
              "x"
            ],
            "type": "object"
          }
        },
        "required": [
          "icoCrd"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Common": {
        "properties": {
          "locL": {
            "items": {
              "$ref": "#/components/schemas/LocL"
            },
            "type": "array"
          },
          "prodL": {
            "items": {
              "$ref": "#/components/schemas/ProdL"
            },
            "type": "array"
          },
          "polyL": {
            "items": {
              "$ref": "#/components/schemas/PolyL"
            },
            "type": "array"
          },
          "layerL": {
            "items": {
              "$ref": "#/components/schemas/LayerL"
            },
            "type": "array"
          },
          "crdSysL": {
            "items": {
              "$ref": "#/components/schemas/CrdSysL"
            },
            "type": "array"
          },
          "opL": {
            "items": {
              "$ref": "#/components/schemas/OpL"
            },
            "type": "array"
          },
          "remL": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "icoL": {
            "items": {
              "$ref": "#/components/schemas/IcoL"
            },
            "type": "array"
          },
          "tcocL": {
            "items": {
              "$ref": "#/components/schemas/TcocL"
            },
            "type": "array"
          },
          "himMsgEdgeL": {
            "items": {
              "$ref": "#/components/schemas/HimMsgEdgeL"
            },
            "type": "array"
          }
        },
        "required": [
          "locL",
          "prodL",
          "polyL",
          "layerL",
          "crdSysL",
          "opL",
          "remL",
          "icoL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ArrivalStationBoardResponse": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/Common"
          },
          "fpB": {
            "type": "string"
          },
          "fpE": {
            "type": "string"
          },
          "planrtTS": {
            "type": "string"
          },
          "sD": {
            "type": "string"
          },
          "sT": {
            "type": "string"
          },
          "locRefL": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array"
          },
          "type": {
            "type": "string",
            "enum": [
              "ARR"
            ],
            "nullable": false
          },
          "jnyL": {
            "items": {
              "$ref": "#/components/schemas/ArrivalJny"
            },
            "type": "array"
          }
        },
        "required": [
          "common",
          "fpB",
          "fpE",
          "planrtTS",
          "sD",
          "sT",
          "locRefL",
          "type",
          "jnyL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DepStbStop": {
        "$ref": "#/components/schemas/CommonDeparture"
      },
      "DepartureJny": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "prodX": {
            "type": "number",
            "format": "double"
          },
          "dirTxt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRchbl": {
            "type": "boolean"
          },
          "isCncl": {
            "type": "boolean"
          },
          "isPartCncl": {
            "type": "boolean"
          },
          "subscr": {
            "type": "string"
          },
          "stopL": {
            "items": {
              "$ref": "#/components/schemas/CommonStop"
            },
            "type": "array"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "date": {
            "type": "string"
          },
          "stbStop": {
            "$ref": "#/components/schemas/DepStbStop"
          }
        },
        "required": [
          "jid",
          "prodX",
          "dirTxt",
          "status",
          "isRchbl",
          "subscr",
          "date",
          "stbStop"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "DepartureStationBoardResponse": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/Common"
          },
          "fpB": {
            "type": "string"
          },
          "fpE": {
            "type": "string"
          },
          "planrtTS": {
            "type": "string"
          },
          "sD": {
            "type": "string"
          },
          "sT": {
            "type": "string"
          },
          "locRefL": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEP"
            ],
            "nullable": false
          },
          "jnyL": {
            "items": {
              "$ref": "#/components/schemas/DepartureJny"
            },
            "type": "array"
          }
        },
        "required": [
          "common",
          "fpB",
          "fpE",
          "planrtTS",
          "sD",
          "sT",
          "locRefL",
          "type",
          "jnyL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "StationBoardResponse": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/ArrivalStationBoardResponse"
          },
          {
            "$ref": "#/components/schemas/DepartureStationBoardResponse"
          }
        ]
      },
      "SvcResL_StationBoardResponse_": {
        "properties": {
          "meth": {
            "type": "string"
          },
          "err": {
            "type": "string"
          },
          "res": {
            "$ref": "#/components/schemas/StationBoardResponse"
          }
        },
        "required": [
          "meth",
          "err",
          "res"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HafasResponse_StationBoardResponse_": {
        "properties": {
          "ver": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "err": {
            "type": "string"
          },
          "cInfo": {
            "$ref": "#/components/schemas/CInfo"
          },
          "svcResL": {
            "items": {
              "$ref": "#/components/schemas/SvcResL_StationBoardResponse_"
            },
            "type": "array"
          }
        },
        "required": [
          "ver",
          "lang",
          "id",
          "err",
          "cInfo",
          "svcResL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "LocMatchResponse": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/Common"
          },
          "match": {
            "properties": {
              "locL": {
                "items": {
                  "properties": {
                    "wt": {
                      "type": "number",
                      "format": "double"
                    },
                    "pRefL": {
                      "items": {
                        "type": "number",
                        "format": "double"
                      },
                      "type": "array"
                    },
                    "pCls": {
                      "type": "number",
                      "format": "double"
                    },
                    "meta": {
                      "type": "boolean"
                    },
                    "crd": {
                      "properties": {
                        "z": {
                          "type": "number",
                          "format": "double"
                        },
                        "crdSysX": {
                          "type": "number",
                          "format": "double"
                        },
                        "layerX": {
                          "type": "number",
                          "format": "double"
                        },
                        "y": {
                          "type": "number",
                          "format": "double"
                        },
                        "x": {
                          "type": "number",
                          "format": "double"
                        }
                      },
                      "required": [
                        "crdSysX",
                        "layerX",
                        "y",
                        "x"
                      ],
                      "type": "object"
                    },
                    "state": {
                      "type": "string"
                    },
                    "extId": {
                      "type": "string"
                    },
                    "icoX": {
                      "type": "number",
                      "format": "double"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "lid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "wt",
                    "pRefL",
                    "pCls",
                    "meta",
                    "crd",
                    "state",
                    "extId",
                    "icoX",
                    "name",
                    "type",
                    "lid"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "state": {
                "type": "string"
              },
              "field": {
                "type": "string"
              }
            },
            "required": [
              "locL",
              "state",
              "field"
            ],
            "type": "object"
          }
        },
        "required": [
          "common",
          "match"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SvcResL_LocMatchResponse_": {
        "properties": {
          "meth": {
            "type": "string"
          },
          "err": {
            "type": "string"
          },
          "res": {
            "$ref": "#/components/schemas/LocMatchResponse"
          }
        },
        "required": [
          "meth",
          "err",
          "res"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HafasResponse_LocMatchResponse_": {
        "properties": {
          "ver": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "err": {
            "type": "string"
          },
          "cInfo": {
            "$ref": "#/components/schemas/CInfo"
          },
          "svcResL": {
            "items": {
              "$ref": "#/components/schemas/SvcResL_LocMatchResponse_"
            },
            "type": "array"
          }
        },
        "required": [
          "ver",
          "lang",
          "id",
          "err",
          "cInfo",
          "svcResL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequencePosition": {
        "properties": {
          "startPercent": {
            "type": "number",
            "format": "double"
          },
          "endPercent": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "startPercent",
          "endPercent"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceSector": {
        "properties": {
          "name": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/CoachSequencePosition"
          }
        },
        "required": [
          "name",
          "position"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceStop": {
        "properties": {
          "stopPlace": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "sectors": {
            "items": {
              "$ref": "#/components/schemas/CoachSequenceSector"
            },
            "type": "array"
          }
        },
        "required": [
          "stopPlace",
          "sectors"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceProduct": {
        "properties": {
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "line": {
            "type": "string"
          }
        },
        "required": [
          "number",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceCoachFeatures": {
        "properties": {
          "dining": {
            "type": "boolean"
          },
          "wheelchair": {
            "type": "boolean"
          },
          "bike": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "quiet": {
            "type": "boolean"
          },
          "info": {
            "type": "boolean"
          },
          "family": {
            "type": "boolean"
          },
          "toddler": {
            "type": "boolean"
          },
          "wifi": {
            "type": "boolean"
          },
          "comfort": {
            "type": "boolean"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceCoachSeats": {
        "properties": {
          "comfort": {
            "type": "string"
          },
          "disabled": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceCoach": {
        "properties": {
          "class": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "description": "0: Unknown; 1: erste; 2: zweite; 3: 1&2; 4: Not for passengers"
          },
          "vehicleCategory": {
            "type": "string"
          },
          "closed": {
            "type": "boolean"
          },
          "uic": {
            "type": "string",
            "description": "only filled for real time information"
          },
          "type": {
            "type": "string"
          },
          "identificationNumber": {
            "type": "string",
            "description": "Wagenordnungsnummer"
          },
          "position": {
            "$ref": "#/components/schemas/CoachSequencePosition"
          },
          "features": {
            "$ref": "#/components/schemas/CoachSequenceCoachFeatures"
          },
          "seats": {
            "$ref": "#/components/schemas/CoachSequenceCoachSeats"
          },
          "occupancy": {
            "$ref": "#/components/schemas/AuslastungsValue"
          }
        },
        "required": [
          "class",
          "vehicleCategory",
          "position",
          "features"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "AvailableBR": {
        "type": "string",
        "enum": [
          "401",
          "402",
          "403",
          "406",
          "407",
          "408",
          "411",
          "412",
          "415",
          "4010",
          "4110",
          "410.1"
        ]
      },
      "AvailableIdentifierOnly": {
        "type": "string",
        "enum": [
          "401.LDV",
          "401.9",
          "411.S1",
          "411.S2",
          "412.7",
          "412.13",
          "403.R",
          "403.S1",
          "403.S2",
          "406.R",
          "IC2.TRE",
          "MET",
          "TGV"
        ]
      },
      "AvailableIdentifier": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/AvailableIdentifierOnly"
          },
          {
            "$ref": "#/components/schemas/AvailableBR"
          }
        ]
      },
      "CoachSequenceBaureihe": {
        "properties": {
          "name": {
            "type": "string"
          },
          "baureihe": {
            "$ref": "#/components/schemas/AvailableBR"
          },
          "identifier": {
            "$ref": "#/components/schemas/AvailableIdentifier"
          }
        },
        "required": [
          "name",
          "identifier"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceGroup": {
        "properties": {
          "coaches": {
            "items": {
              "$ref": "#/components/schemas/CoachSequenceCoach"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "originName": {
            "type": "string"
          },
          "destinationName": {
            "type": "string"
          },
          "trainName": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "baureihe": {
            "$ref": "#/components/schemas/CoachSequenceBaureihe"
          }
        },
        "required": [
          "coaches",
          "name",
          "originName",
          "destinationName",
          "number"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequence": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/CoachSequenceGroup"
            },
            "type": "array"
          }
        },
        "required": [
          "groups"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceInformation": {
        "properties": {
          "source": {
            "type": "string",
            "enum": [
              "OEBB",
              "DB-noncd",
              "DB-plan",
              "DB-bahnde",
              "SBB"
            ]
          },
          "stop": {
            "$ref": "#/components/schemas/CoachSequenceStop"
          },
          "product": {
            "$ref": "#/components/schemas/CoachSequenceProduct"
          },
          "sequence": {
            "$ref": "#/components/schemas/CoachSequence"
          },
          "multipleTrainNumbers": {
            "type": "boolean"
          },
          "multipleDestinations": {
            "type": "boolean"
          },
          "isRealtime": {
            "type": "boolean"
          },
          "direction": {
            "type": "boolean",
            "description": "true = in direction of first sector in array\nfalse = in direction of last sector in array\nundefined = we do not know"
          },
          "journeyId": {
            "type": "string"
          }
        },
        "required": [
          "source",
          "stop",
          "product",
          "sequence",
          "isRealtime"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrainRunStop": {
        "properties": {
          "name": {
            "type": "string"
          },
          "evaNumber": {
            "type": "string"
          },
          "ril100": {
            "type": "string"
          },
          "arrivalTime": {
            "type": "string",
            "format": "date-time"
          },
          "departureTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "evaNumber"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Pick_TrainRun.Exclude_keyofTrainRun.primaryVehicleGroupName__": {
        "properties": {
          "product": {
            "$ref": "#/components/schemas/CoachSequenceProduct"
          },
          "origin": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "destination": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TrainRunStop"
            },
            "type": "array"
          },
          "dates": {
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "type": "array"
          }
        },
        "required": [
          "product",
          "origin",
          "destination",
          "via",
          "dates"
        ],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "TrainRunWithBR": {
        "properties": {
          "product": {
            "$ref": "#/components/schemas/CoachSequenceProduct"
          },
          "origin": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "destination": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TrainRunStop"
            },
            "type": "array"
          },
          "dates": {
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "type": "array"
          },
          "br": {
            "$ref": "#/components/schemas/CoachSequenceBaureihe"
          }
        },
        "required": [
          "product",
          "origin",
          "destination",
          "via",
          "dates"
        ],
        "type": "object",
        "additionalProperties": true
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "title": "Bahn.expert",
    "version": "0.1.0",
    "license": {
      "name": "MIT"
    },
    "contact": {
      "name": "marudor"
    }
  },
  "paths": {
    "/iris/v2/abfahrten/{evaNumber}": {
      "get": {
        "operationId": "Abfahrten v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbfahrtenResult"
                }
              }
            }
          }
        },
        "tags": [
          "IRIS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "description": "minutes",
            "in": "query",
            "name": "lookahead",
            "required": false,
            "schema": {
              "default": 150,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "minutes",
            "in": "query",
            "name": "lookbehind",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "startTime",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ]
      }
    },
    "/hafas/v3/additionalInformation/{trainName}/{journeyId}": {
      "get": {
        "operationId": "Additional Information",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdditionalJourneyInformation"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "RIS JourneyId",
            "in": "path",
            "name": "journeyId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "evaNumberAlongRoute",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "initialDepartureDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ]
      }
    },
    "/coachSequence/v4/wagen/{trainNumber}": {
      "get": {
        "operationId": "CoachSequence v4",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CoachSequenceInformation"
                    },
                    {}
                  ]
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {},
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {},
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Returns the coachSequence at a specific stop for a specific train.\nWorks for OEBB stops and DB stops.\n\nReturns plannedSequence if no real time information is available",
        "tags": [
          "CoachSequence"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainNumber",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "examples": {
              "Example 1": {
                "value": "23"
              },
              "Example 2": {
                "value": "42023"
              }
            }
          },
          {
            "description": "Departure at the stop you want the coachSequence for",
            "in": "query",
            "name": "departure",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "needed for OEBB coachSequence, usually 7 digits",
            "in": "query",
            "name": "evaNumber",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "description": "needed for OEBB coachSequence",
            "in": "query",
            "name": "initialDeparture",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "needed for new DB coachSequence",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "needed for SBB coachSequence",
            "in": "query",
            "name": "lastArrivalEva",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/hafas/v3/departures/{evaNumber}": {
      "get": {
        "operationId": "Departures",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/StationBoardEntry"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v3/departures/{evaNumber}/raw": {
      "get": {
        "operationId": "DeparturesRaw",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HafasResponse_StationBoardResponse_"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v2/details/{trainName}": {
      "get": {
        "operationId": "Details v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedSearchOnTripResponse"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "description": "This combines several HAFAS endpoint as well as IRIS data to get the best possible information for a specific journey.",
        "tags": [
          "HAFAS"
        ],
        "deprecated": true,
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ICE 23"
          },
          {
            "in": "query",
            "name": "stop",
            "required": false,
            "schema": {
              "type": "string"
            },
            "deprecated": true
          },
          {
            "description": "EvaNumber of a stop of your train, might not work for profiles other than DB",
            "in": "query",
            "name": "station",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "description": "This is the initialDepartureDate of your desired journey",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v1/detailsRedirect/{tripId}": {
      "get": {
        "operationId": "DetailsRedirect",
        "responses": {
          "302": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "description": "This redirects to the current Details Page with a provided HAFAS TripId / JourneyId / JID",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "tripId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/journeys/v1/find/number/{trainNumber}": {
      "get": {
        "operationId": "FindNumber",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParsedJourneyMatchResponse"
                  },
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": [
          "Journeys"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainNumber",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "initialDepartureDate",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "initialEvaNumber",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filtered",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "format": "double",
              "type": "number"
            }
          }
        ]
      }
    },
    "/hafas/v3/stopPlaceSearch/{query}": {
      "get": {
        "operationId": "HafasStopPlaceSearch",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HafasStation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v3/irisCompatibleAbfahrten/{evaId}": {
      "get": {
        "operationId": "IrisCompatibleAbfahrten",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbfahrtenResult"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/lageplan/{stopPlaceName}/{evaNumber}": {
      "get": {
        "operationId": "Lageplan",
        "responses": {
          "200": {
            "description": "URL to DB, HVV or NAHSH Lageplan",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LageplanResponse"
                }
              }
            }
          }
        },
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "stopPlaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          }
        ]
      }
    },
    "/hafas/v3/occupancy/{start}/{destination}/{trainNumber}/{plannedDepartureTime}/{stopEva}": {
      "get": {
        "operationId": "Occupancy",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteAuslastung"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "description": "Provides occupancy for specified stop based on DB Vertrieb HAFAS (DB Navigator).\nBased on a rough estimate, handles first and second class.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "description": "Name of the start stop",
            "in": "path",
            "name": "start",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Frankfurt (Main) Hbf"
          },
          {
            "description": "Name of the destination stop",
            "in": "path",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basel SBB"
          },
          {
            "description": "Planned Departure time of the stop you want the occpuancy for",
            "in": "path",
            "name": "plannedDepartureTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "example": "2022-03-24T11:50:00.000Z"
          },
          {
            "in": "path",
            "name": "trainNumber",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "23"
          },
          {
            "in": "path",
            "name": "stopEva",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/coachSequence/v4/runsPerDate/{date}": {
      "get": {
        "operationId": "Runs per Date v4",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TrainRunWithBR"
                  },
                  "type": "array"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {},
                    {
                      "type": "string"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Returns all journeys that run on a specific date. Only works for DB Fernverkehr",
        "tags": [
          "CoachSequence"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Used to filter for specific Baureihen",
            "in": "query",
            "name": "baureihen",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AvailableBR"
              }
            }
          },
          {
            "description": "Used to filter for specific identifier (identifier are defined by me, not DB)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AvailableIdentifier"
              }
            }
          },
          {
            "description": "Used to filter for runs that stop at specific stopPlaces in the specifed order",
            "in": "query",
            "name": "stopsAt",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvaNumber"
              }
            },
            "example": "[8000105, 8000191]"
          }
        ]
      }
    },
    "/stopPlace/v1/{evaNumberOrRl100}": {
      "get": {
        "operationId": "StopPlaceByEvaOrRl100",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupedStopPlace"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumberOrRl100",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/search/{searchTerm}": {
      "get": {
        "operationId": "StopPlaceSearch",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupedStopPlace"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "This might fall back to use HAFAS",
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "searchTerm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "max",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Only returns stopPlaces iris-tts can handle (/abfahrten)",
            "in": "query",
            "name": "filterForIris",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "groupedBySales",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/hafas/v3/stopPlaceSearch/{query}/raw": {
      "get": {
        "operationId": "StopPlaceSearchRaw",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HafasResponse_LocMatchResponse_"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/{evaNumber}/trainOccupancy": {
      "get": {
        "operationId": "TrainOccupancy",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainOccupancyList"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "description": "Currently only for VRR. <br>\nSource: https://github.com/derf/eva-to-efa-gw<br>\nThanks derf.",
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          }
        ]
      }
    },
    "/hafas/v3/tripSearch": {
      "post": {
        "operationId": "TripSearch v3",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingResult"
                }
              }
            }
          }
        },
        "description": "Used to find trips [Verbindungssuche]\nA lot of the request options are raw HAFAS and not documented.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputTripSearchOptionsV3"
              }
            }
          }
        }
      }
    },
    "/hafas/v4/tripSearch": {
      "post": {
        "operationId": "TripSearch v4",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingResult"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InputTripSearchOptionsV4"
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://bahn.expert/api"
    }
  ],
  "tags": [
    {
      "name": "HAFAS",
      "description": "All Operation use a HAFAS backend. By default it will be the HAFAS backend by DB Vertrieb (DB Navigator). Different backends can be selected by providing the query paramter profile."
    },
    {
      "name": "Journeys"
    },
    {
      "name": "IRIS"
    },
    {
      "name": "CoachSequence"
    },
    {
      "name": "StopPlace"
    }
  ]
}