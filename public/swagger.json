{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"OpL": {
				"properties": {
					"name": {
						"type": "string"
					},
					"icoX": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["name"],
				"type": "object",
				"additionalProperties": true
			},
			"CommonProductInfo": {
				"properties": {
					"name": {
						"type": "string"
					},
					"line": {
						"type": "string"
					},
					"number": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"description": "This is actually category"
					},
					"operator": {
						"$ref": "#/components/schemas/OpL"
					},
					"admin": {
						"type": "string"
					},
					"transportType": {
						"type": "string"
					}
				},
				"required": ["name", "transportType"],
				"type": "object",
				"additionalProperties": true
			},
			"ParsedProduct": {
				"$ref": "#/components/schemas/CommonProductInfo"
			},
			"RemL": {
				"properties": {
					"type": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"icoX": {
						"type": "number",
						"format": "double"
					},
					"txtN": {
						"type": "string"
					},
					"txtS": {
						"type": "string"
					},
					"prio": {
						"type": "number",
						"format": "double"
					},
					"sIdx": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["type", "code", "icoX", "txtN"],
				"type": "object",
				"additionalProperties": true
			},
			"CommonStopInfo": {
				"properties": {
					"isPlan": {
						"type": "boolean",
						"description": "Quelle dieser info ist die Planwagenreihung"
					},
					"scheduledPlatform": {
						"type": "string",
						"description": "Scheduled Platform"
					},
					"platform": {
						"type": "string",
						"description": "Best known platform, might be identical to scheduledPlatform"
					},
					"scheduledTime": {
						"type": "string",
						"format": "date-time",
						"description": "scheduled time for this stop"
					},
					"time": {
						"type": "string",
						"format": "date-time",
						"description": "best known time for this stop, might be identical to scheduledTime"
					},
					"delay": {
						"type": "integer",
						"format": "int32"
					},
					"reihung": {
						"type": "boolean"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"cancelled": {
						"type": "boolean"
					},
					"isRealTime": {
						"type": "boolean"
					},
					"noPassengerChange": {
						"type": "boolean"
					}
				},
				"required": ["scheduledTime", "time"],
				"type": "object",
				"additionalProperties": true
			},
			"MinimalStopPlace": {
				"properties": {
					"name": {
						"type": "string"
					},
					"evaNumber": {
						"type": "string"
					},
					"ril100": {
						"type": "string"
					}
				},
				"required": ["name", "evaNumber"],
				"type": "object",
				"additionalProperties": true
			},
			"AuslastungsValue": {
				"description": "1: Gering\n2: Hoch\n3: Sehr Hoch\n4: Ausgebucht",
				"enum": [1, 2, 3, 4],
				"type": "number"
			},
			"RouteAuslastung": {
				"properties": {
					"first": {
						"$ref": "#/components/schemas/AuslastungsValue"
					},
					"second": {
						"$ref": "#/components/schemas/AuslastungsValue"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"MessagePrio": {
				"type": "string",
				"enum": ["1", "2", "3", "4"],
				"description": "1: High; 2: Medium; 3: Low; 4: Done"
			},
			"IrisMessage": {
				"properties": {
					"text": {
						"type": "string"
					},
					"timestamp": {
						"type": "string",
						"format": "date-time"
					},
					"superseded": {
						"type": "boolean"
					},
					"priority": {
						"$ref": "#/components/schemas/MessagePrio"
					},
					"value": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["text"],
				"type": "object",
				"additionalProperties": true
			},
			"HimIrisMessage": {
				"properties": {
					"text": {
						"type": "string"
					},
					"timestamp": {
						"type": "string",
						"format": "date-time"
					},
					"superseded": {
						"type": "boolean"
					},
					"priority": {
						"$ref": "#/components/schemas/MessagePrio"
					},
					"value": {
						"type": "number",
						"format": "double"
					},
					"head": {
						"type": "string"
					},
					"short": {
						"type": "string"
					},
					"stopPlaceInfo": {
						"type": "string"
					},
					"source": {
						"type": "string"
					}
				},
				"required": ["text", "head"],
				"type": "object",
				"additionalProperties": true
			},
			"Message": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/IrisMessage"
					},
					{
						"$ref": "#/components/schemas/HimIrisMessage"
					}
				]
			},
			"StopPlaceEmbeddedWithCancel": {
				"description": "Comprehensive stop-place [Haltestelle] information.",
				"properties": {
					"evaNumber": {
						"type": "string",
						"description": "Eva number of stop-place [Haltestelle]."
					},
					"name": {
						"type": "string",
						"description": "Name for stop-place [Haltestelle] in fixed language \\'DE\\'."
					},
					"cancelled": {
						"type": "boolean",
						"description": "Indicates whether the stop ie departure / arrival has been cancelled [Haltausfall]."
					}
				},
				"required": ["evaNumber", "name"],
				"type": "object",
				"additionalProperties": true
			},
			"StopPlaceEmbedded": {
				"properties": {
					"evaNumber": {
						"type": "string",
						"description": "Eva number of stop-place [Haltestelle]."
					},
					"name": {
						"type": "string",
						"description": "Name for stop-place [Haltestelle] in fixed language \\'DE\\'."
					}
				},
				"required": ["evaNumber", "name"],
				"type": "object",
				"additionalProperties": true
			},
			"TransportDestinationPortionWorkingRef": {
				"description": "Public transport [Oeffentlicher Transport] with (scheduled) destination [Ziel] and differing destination [abweichender Zielhalt] for coupled transports [vereinigte ZÃ¼ge].",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"type": {
						"type": "string",
						"description": "Type of transport. Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - SHUTTLE (Shuttle [Ruftaxi]) - FLIGHT (Flight [Flug]) - UNKNOWN (Unknown)"
					},
					"category": {
						"type": "string",
						"description": "Category of the transport [externe Fahrtgattung]."
					},
					"journeyNumber": {
						"type": "number",
						"format": "double",
						"description": "Number of the transport [Fahrtnummer]."
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
					},
					"destination": {
						"$ref": "#/components/schemas/StopPlaceEmbeddedWithCancel"
					},
					"differingDestination": {
						"$ref": "#/components/schemas/StopPlaceEmbedded"
					},
					"separationAt": {
						"$ref": "#/components/schemas/StopPlaceEmbedded"
					}
				},
				"required": [
					"journeyID",
					"type",
					"category",
					"journeyNumber",
					"destination"
				],
				"type": "object",
				"additionalProperties": true
			},
			"TransportDestinationRef": {
				"description": "Transport [Verkehrsart / Verkehrsmittel] information for journey references with destination.",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"type": {
						"type": "string",
						"description": "Type of transport. Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - SHUTTLE (Shuttle [Ruftaxi]) - FLIGHT (Flight [Flug]) - UNKNOWN (Unknown)"
					},
					"category": {
						"type": "string",
						"description": "Category of the transport [externe Fahrtgattung]."
					},
					"journeyNumber": {
						"type": "number",
						"format": "double",
						"description": "Number of the transport [Fahrtnummer]."
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
					},
					"destination": {
						"$ref": "#/components/schemas/StopPlaceEmbeddedWithCancel"
					},
					"differingDestination": {
						"$ref": "#/components/schemas/StopPlaceEmbedded"
					}
				},
				"required": [
					"journeyID",
					"type",
					"category",
					"journeyNumber",
					"destination"
				],
				"type": "object",
				"additionalProperties": true
			},
			"RouteStop": {
				"properties": {
					"arrival": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"departure": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"station": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"auslastung": {
						"$ref": "#/components/schemas/RouteAuslastung"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"additional": {
						"type": "boolean"
					},
					"cancelled": {
						"type": "boolean"
					},
					"irisMessages": {
						"items": {
							"$ref": "#/components/schemas/Message"
						},
						"type": "array"
					},
					"joinsWith": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationPortionWorkingRef"
						},
						"type": "array"
					},
					"splitsWith": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationPortionWorkingRef"
						},
						"type": "array"
					},
					"replacedBy": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array"
					},
					"replacementFor": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array"
					}
				},
				"required": ["station"],
				"type": "object",
				"additionalProperties": true
			},
			"ParsedJourneyMatchResponse": {
				"properties": {
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"stops": {
						"items": {
							"$ref": "#/components/schemas/RouteStop"
						},
						"type": "array"
					},
					"jid": {
						"type": "string"
					},
					"firstStop": {
						"$ref": "#/components/schemas/RouteStop"
					},
					"lastStop": {
						"$ref": "#/components/schemas/RouteStop"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					}
				},
				"required": ["train", "stops", "jid", "firstStop", "lastStop"],
				"type": "object",
				"additionalProperties": true
			},
			"Administration": {
				"description": "Information on the operator [Betreiber] and the administration [Verwaltung] of the journey.",
				"properties": {
					"administrationID": {
						"type": "string",
						"description": "Unique id of the administration [Verwaltung]. - 8 (S - S-Bahn Berlin) - 19 (EST - EUROSTAR) - 51 (PKP - PKP Intercity) - 53 (DPN - Nahreisezug) - 54 (CD - Ceske Drahy) - 55 (MAV - MAV) - 56 (ZSS - ZSSK) - 71 (REN - RENFE) - 74 (SJ - SJ) - 78 (HZ - HZPP) - 79 (SZ - Slovenske zeleznice) - 80 (DB - DB Fernverkehr AG) - 81 (ÃBB - Ãsterreichische Bundesbahnen) - 82 (CFL - CFL) - 83 (TI - Trenitalia) - 84 (NS - Nederlandse Spoorwegen) - 85 (SBB - SBB) - 86 (DSB - DÃ¤nische Staatsbahnen) - 87 (SCF - SNCF) - 88 (SCB - SNCB) - 3018 (THA - THALYS) - 3189 (ARV - ARRIVA vlaky) - 3230 (VBG - vogtlandbahn - Die LÃ¤nderbahn GmbH DLB) - 3236 (WB - WESTbahn) - 3246 (IC - RegioJet) - 3270 (TN - TRENORD) - 3288 (GW - GW Train Regio) - 3332 (KZC - KZC Doprava s.r.o.) - 3393 (TGV - SNCF Voyages Deutschland) - 3613 (StB - Steiermarkbahn und Bus GmbH) - 80001 (S - S-Bahn Berlin) - 550043 (GyS - GySEV) - 743051 (ST - SnÃ¤lltÃ¥get) - 800151 (DB - DB Regio AG Nordost) - 800153 (DB - DB Regio AG Nordost) - 800154 (DB - DB Regio AG Nordost) - 800155 (DB - DB Regio AG Nordost) - 800156 (DB - DB Regio AG Nordost) - 800157 (DB - DB Regio AG Nordost) - 800158 (DB - DB Regio AG Nordost) - 800159 (DB - DB Regio AG Nordost) - 800160 (DB - DB Regio AG Nordost) - 800161 (DB - DB Regio AG Nordost) - 800163 (DB - DB Regio AG Nordost) - 800165 (DB - DB Regio AG Nordost) - 800166 (DB - DB Regio AG Nordost) - 800201 (DB - DB Regio AG Nord) - 800271 (DB - DB Regio AG Nord) - 800279 (DB - DB Regio AG Nord) - 800292 (DB - DB Regio AG Nord) - 800293 (DB - DB Regio AG Nord) - 800295 (DB - DB Regio AG Nord) - 800310 (DB - DB Regio AG NRW) - 800318 (DB - DB Arriva) - 800333 (DB - DB Regio AG NRW) - 800337 (DB - DB Regio AG NRW) - 800338 (DB - DB Regio AG NRW) - 800348 (DB - DB Regio AG NRW) - 800349 (DB - DB Regio AG NRW) - 800351 (DB - DB Regio AG NRW) - 800352 (DB - DB Regio AG NRW) - 800354 (DB - DB Regio AG NRW) - 800363 (DB - DB Regio AG NRW) - 800413 (DB - DB Regio AG SÃ¼dost) - 800417 (DB - DB Regio AG SÃ¼dost) - 800430 (EGB - DB RegioNetz Verkehrs GmbH Erzgebirgsbahn) - 800445 (DB - DB Regio AG SÃ¼dost) - 800456 (DB - DB Regio AG SÃ¼dost) - 800469 (DB - DB Regio AG SÃ¼dost) - 800478 (DB - DB Regio AG SÃ¼dost) - 800486 (DB - DB Regio AG SÃ¼dost) - 800487 (DB - DB Regio AG SÃ¼dost) - 800489 (DB - DB Regio AG SÃ¼dost) - 800523 (KHB - DB RegioNetz Verkehrs GmbH Kurhessenbahn) - 800528 (S - DB Regio AG S-Bahn Rhein-Main) - 800535 (DB - DB Regio AG Mitte) - 800553 (DB - DB Regio AG Mitte) - 800571 (DB - DB Regio AG Mitte) - 800572 (DB - DB Regio AG Mitte) - 800574 (DB - DB Regio AG Mitte) - 800603 (WFB - DB RegioNetz Verkehrs GmbH Westfrankenbahn) - 800622 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800631 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800632 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800640 (SWX - DB Regio AG Mitte SÃWEX) - 800643 (S - DB Regio AG S-Bahn Stuttgart) - 800647 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800659 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800693 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800694 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 800714 (DB - DB Regio AG Bayern) - 800720 (DB - DB Regio AG Bayern) - 800721 (DB - DB Regio AG Bayern) - 800725 (S - DB Regio AG S-Bahn MÃ¼nchen) - 800734 (DB - DB Regio AG Bayern) - 800742 (DB - DB Regio AG Bayern) - 800746 (DB - DB Regio AG Bayern) - 800755 (DB - DB Regio AG Bayern) - 800759 (DB - DB Regio AG Bayern) - 800765 (DB - DB Regio AG Bayern) - 800767 (DB - DB Regio AG Bayern) - 800772 (DB - DB Regio AG Bayern) - 800785 (DB - DB Regio AG Bayern) - 800790 (DB - DB Regio AG Bayern) - 801512 (DB - DB Regio AG Mitte) - 801513 (DB - DB Regio AG Mitte) - 801518 (DB - DB Regio AG Mitte) - 801526 (DB - DB Regio AG Mitte) - 801539 (DB - DB Regio AG Mitte) - 801566 (DB - DB Regio AG Mitte) - 801591 (DB - DB Regio AG Mitte) - 801599 (DB - DB Regio AG Mitte) - 810003 (mbs - Montafoner Bahn) - 810005 (ZB - Zillertalbahn) - 810007 (SLB - Salzburger Lokalbahnen) - 810008 (STH - Stern & Hafferl Verkehrs-GmbH) - 810009 (WiL - Wiener Linien) - 810011 (R - Schneebergbahn) - 810017 (NÃV - NÃ Verkehrsorganisations-ges.m.b.H.) - 810021 (NÃV - NÃ Verkehrsorganisations-ges.m.b.H.) - 810023 (NÃV - NÃ Verkehrsorganisations-ges.m.b.H.) - 810024 (P - Waldviertler Schmalspurbahn) - 810025 (SLB - Salzburger Lokalbahnen) - 810028 (GyS - GySEV) - 810031 (STR - Linz Linien AG (StraÃenbahn Stadt Linz)) - 810043 (ÃPO - ÃBB-Postbus) - 840037 (Rnt - R-net) - 840052 (Brg - Breng) - 840054 (Vll - Valleilijn) - 840055 (BN - Blauwnet) - 840100 (NS - Nederlandse Spoorwegen) - 840500 (ARR - Arriva Nederland) - 850022 (AB - Appenzeller Bahnen) - 850023 (TPC - Transports Publics du Chablais) - 850029 (MBC - Transports de la rÃ©gion Morges-BiÃ¨re-Cossonay) - 850031 (BDW - BDWM Transport) - 850032 (BLM - Lauterbrunnen-MÃ¼rren) - 850033 (BLS - BLS AG) - 850035 (BOB - Berner Oberland-Bahnen) - 850038 (ASM - Aare Seeland mobil) - 850042 (MVR - Montreux-Vevey-Riviera) - 850043 (CJ - Chemins de fer du Jura) - 850044 (TRN - Transports Publics NeuchÃ¢telois SA) - 850046 (FB - Forchbahn) - 850047 (FLP - Lugano-Ponte Tresa) - 850048 (MGB - Matterhorn Gotthard Bahn (fo)) - 850049 (FAR - Ferrovie Autolinee Regionali Ticinesi) - 850051 (FW - Frauenfeld-Wil) - 850053 (TPF - Transports publics fribourgeois) - 850055 (LEB - Lausanne-Echallens-Bercher) - 850056 (ASM - Aare Seeland mobil) - 850061 (TMR - Transports de Martigny et RÃ©gions (mc)) - 850064 (MOB - Montreux-Oberland Bernois) - 850065 (THU - THURBO) - 850066 (NSt - Nyon-St-Cergue-Morez) - 850072 (RhB - RhÃ¤tische Bahn) - 850073 (TRN - Transports Publics NeuchÃ¢telois SA) - 850074 (RA - Regionalps) - 850078 (SZU - Sihltal-ZÃ¼rich-Uetliberg-Bahn) - 850081 (ASM - Aare Seeland mobil) - 850082 (SOB - Schweizerische SÃ¼dostbahn (sob)) - 850086 (ZB - Zentralbahn) - 850088 (RBS - Regionalverkehr Bern-Solothurn) - 850093 (MGB - Matterhorn Gotthard Bahn (bvz)) - 850096 (WSB - Wynental-und Suhrental-Bahn) - 850097 (TRA - Transports VallÃ©e de Joux-Yverdon-Ste-Croix) - 850193 (URh - Untersee und Rhein) - 850195 (SBS - Schweizerische Bodensee-Schiffahrtsgesellschaft) - 850360 (BSB - Bodensee-Schiffsbetriebe) - 850371 (BC - SociÃ©tÃ© coopÃ©rative du Chemin de fer - MusÃ©e Blonay-Chamby) - 850801 (PAG - PostAuto Schweiz) - 850846 (RVS - Regionale Verkehrsbetriebe Schaffhausen) - 853186 (SZR - Schiff Eglisau-TÃ¶ssegg) - 853271 (ANA - Association neuchÃ¢teloise des Amis du Tramway ANAT) - 857200 (SBB - SBB) - 857206 (SBB - SBB) - 857210 (SBB - SBB) - 857221 (THU - THURBO) - 857231 (SBB - SBB) - 859014 (VDB - Verein Dampfbahn Bern) - 859999 (SBB - SBB) - 860087 (ARR - Arriva Danmark) - 861002 (DSB - DÃ¤nische Staatsbahnen) - 8006000 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 0S (S - S-Bahn Hamburg) - 51KD (KD - Koleje Dolnoslaskie) - 51PR (PR - Polregio) - 51PR-Q (PR - Polregio) - 51PR-R (PR - Polregio) - 51PR-S (PR - Polregio) - 8002A3 (DB - DB Regio AG Nord) - 8002B5 (DB - DB Regio AG Nord) - 8003A5 (DB - DB Regio AG NRW) - 8003G1 (DB - DB Regio AG NRW) - 8003G2 (DB - DB Regio AG NRW) - 8003H5 (DB - DB Regio AG NRW) - 8003L1 (DB - DB Regio AG NRW) - 8003L2 (DB - DB Regio AG NRW) - 8003RL (DB - DB Regio AG NRW) - 8003S (DB - DB Regio AG NRW) - 8004A9 (DB - DB Regio AG SÃ¼dost) - 8004L1 (DB - DB Regio AG SÃ¼dost) - 8004NT (DB - DB Regio AG SÃ¼dost) - 8004OB (OBS - DB RegioNetz Verkehrs GmbH OberweiÃbacher Berg+Schwarzatalbahn) - 8005A4 (DB - DB Regio AG Mitte) - 8005KG (DB - DB Regio AG Mitte) - 8005MW (DB - DB Regio AG Mitte) - 8005ND (DB - DB Regio AG Mitte) - 8005SV (DB - Rhein-Mosel-Bus Ahrweiler) - 8006A7 (WFB - DB RegioNetz Verkehrs GmbH Westfrankenbahn) - 8006C4 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006C5 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006C6 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006D1 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006D2 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006D6 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006D8 (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8006SH (DB - DB Regio AG Baden-WÃ¼rttemberg) - 8007D4 (DB - DB Regio AG Bayern) - 8007D5 (DB - DB Regio AG Bayern) - 8007DU (DB - DB Regio AG Bayern) - 8007H1 (DB - DB Regio AG Bayern) - 8007H2 (DB - DB Regio AG Bayern) - 8013D (SOB - DB RegioNetz Verkehrs GmbH SÃ¼dostbayernbahn) - 8013E (SOB - DB RegioNetz Verkehrs GmbH SÃ¼dostbayernbahn) - 8015A1 (DB - DB Regio AG Mitte) - 8015A6 (DB - DB Regio AG Mitte) - 8015FR (DB - DB Regio AG Mitte) - 8015H9 (DB - DB Regio AG Mitte) - 80SEV (DB - DB Fernverkehr AG) - 80SSP (D - Sylt Shuttle Plus) - 80TRI (EC - DB/SBB/TI) - 81GE43 (DPN - Nahreisezug) - 857LEX (LEX - LEX) - 85DBSH (SBB - SBB) - A0 (AKN - AKN Eisenbahn GmbH) - A5 (VEN - Rhenus Veniro) - A6 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6FEX (DPN - Nahreisezug) - A6S1 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S11 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S12 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S31 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S32 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S34 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S4 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S41 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S42 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S5 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S51 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S52 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S6 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S7 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S71 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S8 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A6S81 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - A8N (ALX - alex - Die LÃ¤nderbahn GmbH DLB) - A9 (ag - agilis) - aav006 (DPN - Nahreisezug) - aavARN (DPN - Nahreisezug) - aavARR (DPN - Nahreisezug) - aavASE (DPN - Nahreisezug) - aavDKB (DPN - Nahreisezug) - aavNET (DPN - Nahreisezug) - aavTEC (DPN - Nahreisezug) - AB (ABR - SWEG Bahn Stuttgart GmbH) - ABIRE (IRE - SWEG Bahn Stuttgart GmbH) - ABRB (RB - SWEG Bahn Stuttgart GmbH) - ABRE (RE - SWEG Bahn Stuttgart GmbH) - ak_AK (AK - Autokraft) - ak_DRN (DIB - Dithmarschenbus (DB Regio Bus Nord GmbH)) - ak_SVG (SVG - Sylter Verkehrsgesellschaft) - ak_SVL (DPN - Nahreisezug) - ak_SWN (DPN - Nahreisezug) - ak_VIN (DPN - Nahreisezug) - ak_VKP (DPN - Nahreisezug) - ak_VSF (DPN - Nahreisezug) - akAK_A (DPN - Nahreisezug) - akAKTI (DPN - Nahreisezug) - akDRNA (DPN - Nahreisezug) - akECKE (DPN - Nahreisezug) - akKVGK (DPN - Nahreisezug) - akROH (DPN - Nahreisezug) - akSFKK (DPN - Nahreisezug) - akTRAN (DPN - Nahreisezug) - akVINA (DPN - Nahreisezug) - akWDR (DPN - Nahreisezug) - AL (DWE - Dessau-WÃ¶rlitzer Eisenbahn) - ald012 (DPN - Nahreisezug) - ald020 (DPN - Nahreisezug) - ald021 (DPN - Nahreisezug) - ald022 (DPN - Nahreisezug) - ald023 (DPN - Nahreisezug) - ald024 (DPN - Nahreisezug) - ald025 (DPN - Nahreisezug) - ald030 (DPN - Nahreisezug) - ald044 (DPN - Nahreisezug) - ald046 (DPN - Nahreisezug) - ald065 (DPN - Nahreisezug) - ald067 (DPN - Nahreisezug) - ald069 (DPN - Nahreisezug) - ald072 (DPN - Nahreisezug) - ald073 (DPN - Nahreisezug) - ald075 (DPN - Nahreisezug) - ald077 (DPN - Nahreisezug) - ald083 (DPN - Nahreisezug) - ald084 (DPN - Nahreisezug) - ald087 (DPN - Nahreisezug) - ald091 (DPN - Nahreisezug) - ald093 (DPN - Nahreisezug) - ald094 (DPN - Nahreisezug) - ald095 (DPN - Nahreisezug) - ald096 (DPN - Nahreisezug) - ald099 (DPN - Nahreisezug) - AM (ABR - Abellio Rail Mitteldeutschland GmbH) - AMHBX (HBX - Abellio Rail Mitteldeutschland GmbH) - AMRB (RB - Abellio Rail Mitteldeutschland GmbH) - AMRE (RE - Abellio Rail Mitteldeutschland GmbH) - AMS (S - Abellio Rail Mitteldeutschland GmbH) - aoeBus (DPN - Nahreisezug) - apg__1 (DPN - Nahreisezug) - avv009 (DPN - Nahreisezug) - avvBus (DPN - Nahreisezug) - B1 (DB - DB Regio AG Nord) - B1EDZ (DPN - Nahreisezug) - B2 (DB - DB Regio AG NRW) - B3 (P - Brohltalbahn) - B4 (S - DB Regio AG S-Bahn Rhein-Main) - B5 (DB - DB Regio AG Mitte) - B6 (DB - DB Regio AG Baden-WÃ¼rttemberg) - B7 (DPN - Nahreisezug) - bacBus (DPN - Nahreisezug) - bambus (DPN - Nahreisezug) - bayaut (DPN - Nahreisezug) - BB (DB - DB Regio AG Nordost) - bcl001 (DPN - Nahreisezug) - BD (SDG - SDG SÃ¤chsische Dampfeisenbahngesellschaft mbH) - BE (BE - Bentheimer Eisenbahn) - bod000 (DPN - Nahreisezug) - bod001 (DPN - Nahreisezug) - bod002 (DPN - Nahreisezug) - bod003 (DPN - Nahreisezug) - bod004 (DPN - Nahreisezug) - bod005 (DPN - Nahreisezug) - bod006 (DPN - Nahreisezug) - bod008 (DPN - Nahreisezug) - bod012 (DPN - Nahreisezug) - bod013 (DPN - Nahreisezug) - bod014 (DPN - Nahreisezug) - bod015 (DPN - Nahreisezug) - bod018 (DPN - Nahreisezug) - bod019 (DPN - Nahreisezug) - bod020 (DPN - Nahreisezug) - bod031 (DPN - Nahreisezug) - BurBus (DPN - Nahreisezug) - BW (DB - DB Regio AG Nordost) - byr001 (DPN - Nahreisezug) - C6 (KTB - Kandertalbahn) - C8 (LEO - Chiemgauer Lokalbahn) - CD (CB - City-Bahn Chemnitz) - cha016 (DPN - Nahreisezug) - cobBus (DPN - Nahreisezug) - css002 (P - Chiemseebahn) - csscss (DPN - Nahreisezug) - cw001 (DPN - Nahreisezug) - cw010 (DPN - Nahreisezug) - CX (MRB - Mitteldeutsche Regiobahn) - CXRB (RB - Mitteldeutsche Regiobahn) - CXRE (RE - Mitteldeutsche Regiobahn) - D3 (RTB - Rurtalbahn) - daf005 (DPN - Nahreisezug) - dgfBus (DPN - Nahreisezug) - drbBUS (DPN - Nahreisezug) - E0 (EVB - EVB ELBE-WESER GmbH) - E3 (P - Kasbachtalbahn) - EB (RB - Erfurter Bahn GmbH) - ED (FEG - Freiberger Eisenbahngesellschaft) - estbus (DPN - Nahreisezug) - etgBus (DPN - Nahreisezug) - EX (RE - Erfurter Bahn GmbH) - F1 (DPN - Nahreisezug) - F7 (RB - Bodensee-Oberschwaben-Bahn) - fds002 (DPN - Nahreisezug) - fdsBus (DPN - Nahreisezug) - FisBus (DPN - Nahreisezug) - FLX10 (FLX - FlixTrain) - FLX11 (FLX - FlixTrain) - FLX15 (FLX - FlixTrain) - FLX20 (FLX - FlixTrain) - FLX30 (FLX - FlixTrain) - FLX35 (FLX - FlixTrain) - frg001 (DPN - Nahreisezug) - fuebus (DPN - Nahreisezug) - fwzBus (DPN - Nahreisezug) - GA (GA - Go-Ahead Baden-WÃ¼rttemberg GmbH) - GAIRE (IRE - Go-Ahead Baden-WÃ¼rttemberg GmbH) - GAMEX (MEX - Go-Ahead Baden-WÃ¼rttemberg GmbH) - GARB (RB - Go-Ahead Baden-WÃ¼rttemberg GmbH) - GARE (RE - Go-Ahead Baden-WÃ¼rttemberg GmbH) - ge2GEV (DPN - Nahreisezug) - ge3GEV (DPN - Nahreisezug) - geiBus (DPN - Nahreisezug) - gf2001 (DPN - Nahreisezug) - gfn011 (DPN - Nahreisezug) - gfn012 (DPN - Nahreisezug) - gfn015 (DPN - Nahreisezug) - gfn020 (DPN - Nahreisezug) - ghuBus (DPN - Nahreisezug) - grhBus (DPN - Nahreisezug) - GY (GA - Go-Ahead Bayern GmbH) - GYRB (RB - Go-Ahead Bayern GmbH) - GYRE (RE - Go-Ahead Bayern GmbH) - H4 (RT - RegioTram) - H6 (HzL - Hohenzollerische Landesbahn (SWEG)) - H7 (HzL - Hohenzollerische Landesbahn (SWEG)) - hggBus (DPN - Nahreisezug) - HL (HSB - Harzer Schmalspurbahn) - hnv030 (DPN - Nahreisezug) - hnv031 (DPN - Nahreisezug) - hnv034 (DPN - Nahreisezug) - hnv050 (DPN - Nahreisezug) - hof004 (DPN - Nahreisezug) - hvv001 (DPN - Nahreisezug) - hvvDAH (DPN - Nahreisezug) - hvvHAD (DPN - Nahreisezug) - hvvHHA (DPN - Nahreisezug) - hvvHOX (DPN - Nahreisezug) - hvvKVI (DPN - Nahreisezug) - hvvLIZ (DPN - Nahreisezug) - hvvRAO (DPN - Nahreisezug) - hvvRMV (DPN - Nahreisezug) - hvvVHH (DPN - Nahreisezug) - hvvVLP (DPN - Nahreisezug) - invBus (DPN - Nahreisezug) - K4 (HLB - HLB Hessenbahn GmbH) - K4RB (HLB - HLB Hessenbahn GmbH) - K4RE (HLB - HLB Hessenbahn GmbH) - K6 (AVG - Albtal-Verkehrs-Gesellschaft mbH) - KD (KD - KÃ¶ln-DÃ¼sseldorfer Deutsche Rheinschifffahrt GmbH) - kis001 (DPN - Nahreisezug) - kolbus (DPN - Nahreisezug) - kraBus (DPN - Nahreisezug) - krgBus (DPN - Nahreisezug) - kulBus (DPN - Nahreisezug) - kvg001 (DPN - Nahreisezug) - kvv002 (DPN - Nahreisezug) - kvv003 (DPN - Nahreisezug) - kvv004 (DPN - Nahreisezug) - kvv006 (DPN - Nahreisezug) - kvv010 (DPN - Nahreisezug) - kvv011 (DPN - Nahreisezug) - kvv012 (DPN - Nahreisezug) - kvv015 (DPN - Nahreisezug) - kvv017 (DPN - Nahreisezug) - kvv021 (DPN - Nahreisezug) - kvv023 (DPN - Nahreisezug) - kvv024 (DPN - Nahreisezug) - kvv025 (DPN - Nahreisezug) - kvv027 (DPN - Nahreisezug) - kvv028 (DPN - Nahreisezug) - kvv030 (DPN - Nahreisezug) - kvv041 (DPN - Nahreisezug) - kvv22E (DPN - Nahreisezug) - kvvFEX (DPN - Nahreisezug) - L7 (SBB - SBB GmbH) - L8 (BRB - Bayerische Regiobahn) - lamBus (DPN - Nahreisezug) - lanGEV (DPN - Nahreisezug) - LD (TL - trilex  - Die LÃ¤nderbahn GmbH DLB) - LDTLX (TLX - trilex-express - Die LÃ¤nderbahn GmbH DLB) - lklGEV (DPN - Nahreisezug) - M1 (P - Museumsbahn) - M2 (S - REGIOBAHN) - M2RE (R - REGIOBAHN) - M4 (VSE - Verein SÃ¤chsischer Eisenbahnfreunde) - M8 (BRB - Bayerische Regiobahn) - M9 (MSB - Mainschleifenbahn) - marmar (DPN - Nahreisezug) - marovf (DPN - Nahreisezug) - marrbk (DPN - Nahreisezug) - mvgb10 (DPN - Nahreisezug) - mvgb14 (DPN - Nahreisezug) - mvgb15 (DPN - Nahreisezug) - mvgb16 (DPN - Nahreisezug) - mvv099 (DPN - Nahreisezug) - mvvEBU (DPN - Nahreisezug) - mvvRBU (DPN - Nahreisezug) - mvvRFB (DPN - Nahreisezug) - MW (MBB - Mecklenburgische BÃ¤derbahn Molli) - mzbBUS (DPN - Nahreisezug) - N0 (neg - Norddeutsche Eisenbahn Gesellschaft) - N1 (NWB - NordWestBahn) - N2 (NWB - NordWestBahn) - N4 (RB - cantus Verkehrsgesellschaft) - N4RE (RE - cantus Verkehrsgesellschaft) - N6 (SWE - SÃ¼dwestdeutsche Landesverkehrs-GmbH) - N8 (P - BayernBahn GmbH) - nas001 (DPN - Nahreisezug) - nas003 (DPN - Nahreisezug) - nasBLK (DPN - Nahreisezug) - nasBOE (DPN - Nahreisezug) - nasDVG (DPN - Nahreisezug) - nasFWL (DPN - Nahreisezug) - nasHAB (DPN - Nahreisezug) - nasHAT (DPN - Nahreisezug) - nasHVB (DPN - Nahreisezug) - nasHVG (DPN - Nahreisezug) - nasKSB (DPN - Nahreisezug) - nasLVB (DPN - Nahreisezug) - nasLVT (DPN - Nahreisezug) - nasMBB (DPN - Nahreisezug) - nasMBT (DPN - Nahreisezug) - nasMQ (DPN - Nahreisezug) - nasNJL (DPN - Nahreisezug) - nasNTB (DPN - Nahreisezug) - nasOBS (DPN - Nahreisezug) - nasOVH (DPN - Nahreisezug) - nasRBM (DPN - Nahreisezug) - nasRL (DPN - Nahreisezug) - nasSAW (DPN - Nahreisezug) - nasSDL (DPN - Nahreisezug) - nasTHU (DPN - Nahreisezug) - nasVET (DPN - Nahreisezug) - nasVGS (DPN - Nahreisezug) - nasZel (DPN - Nahreisezug) - NB (RB - NEB Niederbarnimer Eisenbahn) - NBRB12 (RB - NEB Niederbarnimer Eisenbahn) - NBRB25 (RB - NEB Niederbarnimer Eisenbahn) - NBRB26 (RB - NEB Niederbarnimer Eisenbahn) - NBRB27 (RB - NEB Niederbarnimer Eisenbahn) - NBRB35 (RB - NEB Niederbarnimer Eisenbahn) - NBRB36 (RB - NEB Niederbarnimer Eisenbahn) - NBRB54 (RB - NEB Niederbarnimer Eisenbahn) - NBRB60 (RB - NEB Niederbarnimer Eisenbahn) - NBRB61 (RB - NEB Niederbarnimer Eisenbahn) - NBRB62 (RB - NEB Niederbarnimer Eisenbahn) - NBRB63 (RB - NEB Niederbarnimer Eisenbahn) - nvpBUS (DPN - Nahreisezug) - NWBus (NWB - NordWestBahn) - NX (NX - National Express) - NXRB (RB - National Express) - NXRE (RE - National Express) - NY (MSM - MSM Partyzug) - NYUEX (UEX - Urlaubs-Express) - NZ (RE - DB Fernverkehr AG) - O0 (NBE - Nordbahn Eisenbahngesellschaft) - O7 (ÃBA - Ãchsle-Bahn-Betriebsgesellschaft mbH) - O9 (OPB - oberpfalzbahn - Die LÃ¤nderbahn GmbH DLB) - O9X (OPX - oberpfalz-express - Die LÃ¤nderbahn GmbH DLB) - OD (SOE - SÃ¤chsisch-Oberlausitzer Eisenbahngesellschaft) - omp001 (DPN - Nahreisezug) - omp003 (DPN - Nahreisezug) - omp007 (DPN - Nahreisezug) - omp014 (DPN - Nahreisezug) - omp022 (DPN - Nahreisezug) - omp024 (DPN - Nahreisezug) - omp033 (DPN - Nahreisezug) - omp035 (DPN - Nahreisezug) - omp043 (DPN - Nahreisezug) - omp047 (DPN - Nahreisezug) - omp048 (DPN - Nahreisezug) - omp050 (DPN - Nahreisezug) - omp051 (DPN - Nahreisezug) - omp052 (DPN - Nahreisezug) - omp053 (DPN - Nahreisezug) - omp054 (DPN - Nahreisezug) - omp055 (DPN - Nahreisezug) - omp056 (DPN - Nahreisezug) - omp057 (DPN - Nahreisezug) - omp058 (DPN - Nahreisezug) - omp059 (DPN - Nahreisezug) - omp062 (DPN - Nahreisezug) - omp063 (DPN - Nahreisezug) - omp065 (DPN - Nahreisezug) - omp066 (DPN - Nahreisezug) - omp067 (DPN - Nahreisezug) - omp069 (DPN - Nahreisezug) - omp070 (DPN - Nahreisezug) - omp071 (DPN - Nahreisezug) - omp072 (DPN - Nahreisezug) - omp073 (DPN - Nahreisezug) - omp074 (DPN - Nahreisezug) - omp075 (DPN - Nahreisezug) - omp077 (DPN - Nahreisezug) - omp079 (DPN - Nahreisezug) - omp085 (DPN - Nahreisezug) - omp086 (DPN - Nahreisezug) - omp088 (DPN - Nahreisezug) - omp092 (DPN - Nahreisezug) - omp093 (DPN - Nahreisezug) - omp094 (DPN - Nahreisezug) - omp095 (DPN - Nahreisezug) - omp096 (DPN - Nahreisezug) - omp098 (DPN - Nahreisezug) - omp099 (DPN - Nahreisezug) - omsBus (DPN - Nahreisezug) - ova002 (DPN - Nahreisezug) - ova035 (DPN - Nahreisezug) - ovaOVA (DPN - Nahreisezug) - ovfOVF (DPN - Nahreisezug) - OWBus (OE - Ostdeutsche Eisenbahn GmbH) - owl020 (DPN - Nahreisezug) - owl021 (DPN - Nahreisezug) - owl022 (DPN - Nahreisezug) - owl023 (DPN - Nahreisezug) - owl024 (DPN - Nahreisezug) - owl025 (DPN - Nahreisezug) - owl026 (DPN - Nahreisezug) - owl027 (DPN - Nahreisezug) - owl028 (DPN - Nahreisezug) - owl029 (DPN - Nahreisezug) - owl031 (STB - moBiel GmbH) - owl032 (DPN - Nahreisezug) - owl038 (DPN - Nahreisezug) - owl039 (DPN - Nahreisezug) - owl040 (DPN - Nahreisezug) - owl041 (DPN - Nahreisezug) - owl042 (DPN - Nahreisezug) - owl043 (DPN - Nahreisezug) - owl044 (DPN - Nahreisezug) - owl045 (DPN - Nahreisezug) - owl049 (DPN - Nahreisezug) - owl050 (DPN - Nahreisezug) - owl051 (DPN - Nahreisezug) - owl052 (DPN - Nahreisezug) - owl053 (DPN - Nahreisezug) - owl054 (DPN - Nahreisezug) - owl059 (DPN - Nahreisezug) - OWRB (RB - Ostdeutsche Eisenbahn GmbH) - OWRB13 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB14 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB15 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB19 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB33 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB46 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB51 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB64 (RB - Ostdeutsche Eisenbahn GmbH) - OWRB65 (RB - Ostdeutsche Eisenbahn GmbH) - OWRE (RE - Ostdeutsche Eisenbahn GmbH) - OWRE2 (RE - Ostdeutsche Eisenbahn GmbH) - OWRE4 (RE - Ostdeutsche Eisenbahn GmbH) - pafBus (DPN - Nahreisezug) - PB (RB - Hanseatische Eisenbahn GmbH) - pbaATT (DPN - Nahreisezug) - pbaitr (DPN - Nahreisezug) - pbaKB (ÃPO - ÃBB-Postbus) - pbaVVT (DPN - Nahreisezug) - pbaW3 (DPN - Nahreisezug) - pbaWR (ÃPO - ÃBB-Postbus) - prg091 (DPN - Nahreisezug) - R0 (ENO - enno) - R1 (ME - metronom) - R2 (ERB - eurobahn) - R2RB (RB - eurobahn) - R2RE (RE - eurobahn) - R4 (VIA - VIAS Rail GmbH) - R4NRN (VIA - VIAS Rail GmbH) - R4RB35 (VIA - VIAS Rail GmbH) - R4RH (VIA - VIAS GmbH) - R4S7 (VIA - VIAS Rail GmbH) - R4WEST (VIA - VIAS Rail GmbH) - R7 (HzL - Hohenzollerische Landesbahn (SWEG)) - rabRAB (RAB - Regionalverkehr Alb-Bodensee) - rbgAST (SBG - SÃ¼dbadenbus) - rbgBBO (DPN - Nahreisezug) - rbgBER (DPN - Nahreisezug) - rbgBRN (BRN - Busverkehr Rhein-Neckar) - rbgBVH (DPN - Nahreisezug) - rbgFAB (DPN - Nahreisezug) - rbgFMO (FMO - Friedrich MÃ¼ller Omnibusunternehmen GmbH) - rbgHMO (DPN - Nahreisezug) - rbgKNU (DPN - Nahreisezug) - rbgOVZ (DPN - Nahreisezug) - rbgRBG (DPN - Nahreisezug) - rbgRBS (RBS - Regiobus Stuttgart) - rbgRVS (RVS - SÃ¼dwestbus) - rbgRVs (RVS - SÃ¼dwestbus) - rbgSBG (SBG - SÃ¼dbadenbus) - rbgWMR (DPN - Nahreisezug) - rboMB (DPN - Nahreisezug) - rbpORN (ORN - ORN Omnibusverkehr Rhein-Nahe GmbH (Rhein-Nahe-Bus)) - rbpRMA (DB - Rhein-Mosel-Bus Ahrweiler) - rbpRMB (DB - RMB Rhein-Mosel-Bus) - rbpRPB (RPB - Rheinpfalzbus) - rbpRU1 (DPN - Nahreisezug) - rbpRU2 (DPN - Nahreisezug) - rbpSAA (DPN - Nahreisezug) - rbpSWM (DB - DB Regio Bus Mitte) - rbr002 (DPN - Nahreisezug) - rbr003 (DPN - Nahreisezug) - rbr004 (DPN - Nahreisezug) - rbrBOS (DPN - Nahreisezug) - rbrOST (DPN - Nahreisezug) - rbrSBE (DPN - Nahreisezug) - rbrSEV (DPN - Nahreisezug) - rbrSNB (DPN - Nahreisezug) - RC (AZS - AUTOZUG Sylt) - RD (VBG - vogtlandbahn - Die LÃ¤nderbahn GmbH DLB) - rmbwug (DPN - Nahreisezug) - rmpREB (DPN - Nahreisezug) - rmpRSG (DPN - Nahreisezug) - rmpUBB (DPN - Nahreisezug) - rmtEVA (DPN - Nahreisezug) - rmtEWB (DPN - Nahreisezug) - rmtFiS (DPN - Nahreisezug) - rmtGVB (DPN - Nahreisezug) - rmtIOV (DPN - Nahreisezug) - rmtJES (DPN - Nahreisezug) - rmtJNV (DPN - Nahreisezug) - rmtKOM (DPN - Nahreisezug) - rmtLWW (DPN - Nahreisezug) - rmtMBB (DPN - Nahreisezug) - rmtMKI (DPN - Nahreisezug) - rmtNDH (DPN - Nahreisezug) - rmtOVG (DPN - Nahreisezug) - rmtPVG (DPN - Nahreisezug) - rmtRBM (DPN - Nahreisezug) - rmtSal (DPN - Nahreisezug) - rmtSNG (DPN - Nahreisezug) - rmtSWG (DPN - Nahreisezug) - rmtTWS (DPN - Nahreisezug) - rmtVHO (DPN - Nahreisezug) - rmtVLG (DPN - Nahreisezug) - rmtVLO (DPN - Nahreisezug) - rmtVUS (DPN - Nahreisezug) - rmtVUW (DPN - Nahreisezug) - rmtVWG (DPN - Nahreisezug) - rmtVWO (DPN - Nahreisezug) - rmtWER (DPN - Nahreisezug) - rmtWGT (DPN - Nahreisezug) - rmv001 (DPN - Nahreisezug) - rmv007 (DPN - Nahreisezug) - rmv019 (DPN - Nahreisezug) - rmv020 (DPN - Nahreisezug) - rmv031 (DPN - Nahreisezug) - rmv045 (DPN - Nahreisezug) - rmv053 (DPN - Nahreisezug) - rmv061 (DPN - Nahreisezug) - rmv087 (DPN - Nahreisezug) - rmv099 (DPN - Nahreisezug) - rmv106 (DPN - Nahreisezug) - rmv117 (DPN - Nahreisezug) - rmv156 (DPN - Nahreisezug) - rmv158 (DPN - Nahreisezug) - rmv162 (DPN - Nahreisezug) - rmv163 (DPN - Nahreisezug) - rmv165 (DPN - Nahreisezug) - rmv168 (DPN - Nahreisezug) - rmv196 (DPN - Nahreisezug) - rmv211 (DPN - Nahreisezug) - rmv218 (DPN - Nahreisezug) - rmv222 (DPN - Nahreisezug) - rmv223 (DPN - Nahreisezug) - rmv224 (DPN - Nahreisezug) - rmv234 (DPN - Nahreisezug) - rmv238 (DPN - Nahreisezug) - rmv242 (DPN - Nahreisezug) - rmv243 (DPN - Nahreisezug) - rmv251 (DPN - Nahreisezug) - rmv254 (DPN - Nahreisezug) - rmv255 (DPN - Nahreisezug) - rmv257 (DPN - Nahreisezug) - rmv258 (DPN - Nahreisezug) - rmv260 (DPN - Nahreisezug) - rmv264 (DPN - Nahreisezug) - rmv265 (DPN - Nahreisezug) - rmv269 (DPN - Nahreisezug) - rmv272 (DPN - Nahreisezug) - rmv275 (DPN - Nahreisezug) - rmv277 (DPN - Nahreisezug) - rmv278 (DPN - Nahreisezug) - rmv282 (DPN - Nahreisezug) - rmv283 (DPN - Nahreisezug) - rmv284 (DPN - Nahreisezug) - rmv289 (DPN - Nahreisezug) - rmv290 (DPN - Nahreisezug) - rmv293 (DPN - Nahreisezug) - rmv294 (DPN - Nahreisezug) - rmv295 (DPN - Nahreisezug) - rmv297 (DPN - Nahreisezug) - rmv301 (DPN - Nahreisezug) - rmv304 (DPN - Nahreisezug) - rmv305 (DPN - Nahreisezug) - rmv306 (DPN - Nahreisezug) - rmv307 (DPN - Nahreisezug) - rmv308 (DPN - Nahreisezug) - rmv309 (DPN - Nahreisezug) - rmv316 (DPN - Nahreisezug) - rmv317 (DPN - Nahreisezug) - rmv319 (DPN - Nahreisezug) - rmv322 (DPN - Nahreisezug) - rmv323 (DPN - Nahreisezug) - rmv333 (DPN - Nahreisezug) - rmv392 (DPN - Nahreisezug) - rmv394 (DPN - Nahreisezug) - rmv395 (DPN - Nahreisezug) - rmv396 (DPN - Nahreisezug) - rmv397 (DPN - Nahreisezug) - rmv398 (DPN - Nahreisezug) - rmv399 (DPN - Nahreisezug) - rmv400 (DPN - Nahreisezug) - rmv401 (DPN - Nahreisezug) - rmv403 (DPN - Nahreisezug) - rmv404 (DPN - Nahreisezug) - rmv405 (DPN - Nahreisezug) - rmv406 (DPN - Nahreisezug) - rmv408 (DPN - Nahreisezug) - rmv412 (DPN - Nahreisezug) - rmv413 (DPN - Nahreisezug) - rmvALV (DPN - Nahreisezug) - rmvARG (DPN - Nahreisezug) - rmvBBW (DPN - Nahreisezug) - rmvBEC (DPN - Nahreisezug) - rmvCBU (DPN - Nahreisezug) - rmvDBR (DPN - Nahreisezug) - rmvERL (DPN - Nahreisezug) - rmvESE (DPN - Nahreisezug) - rmvFBB (DPN - Nahreisezug) - rmvFGR (DPN - Nahreisezug) - rmvFRI (DPN - Nahreisezug) - rmvFro (DPN - Nahreisezug) - rmvFSB (DPN - Nahreisezug) - rmvFUL (DPN - Nahreisezug) - rmvGBG (DPN - Nahreisezug) - rmvGIB (DPN - Nahreisezug) - rmvHEB (DPN - Nahreisezug) - rmvHGS (DPN - Nahreisezug) - rmvHLB (DPN - Nahreisezug) - rmvHTR (DPN - Nahreisezug) - rmvJUN (DPN - Nahreisezug) - rmvKAE (DPN - Nahreisezug) - rmvKOF (DPN - Nahreisezug) - rmvKRT (DPN - Nahreisezug) - rmvLGG (DPN - Nahreisezug) - rmvMUL (DPN - Nahreisezug) - rmvNVG (DPN - Nahreisezug) - rmvPoh (DPN - Nahreisezug) - rmvRAC (DPN - Nahreisezug) - rmvREV (DPN - Nahreisezug) - rmvRIN (DPN - Nahreisezug) - rmvRTO (DPN - Nahreisezug) - rmvRTV (DPN - Nahreisezug) - rmvSBB (DPN - Nahreisezug) - rmvSBO (DPN - Nahreisezug) - rmvSFB (DPN - Nahreisezug) - rmvSIL (DPN - Nahreisezug) - rmvSLM (DPN - Nahreisezug) - rmvSWF (DPN - Nahreisezug) - rmvSWK (DPN - Nahreisezug) - rmvSWN (DPN - Nahreisezug) - rmvSWR (DPN - Nahreisezug) - rmvTRD (DPN - Nahreisezug) - rmvVBB (DPN - Nahreisezug) - rmvVES (DPN - Nahreisezug) - rmvVIL (DPN - Nahreisezug) - rmvVLD (DPN - Nahreisezug) - rmvVUW (DPN - Nahreisezug) - rmvWB (DPN - Nahreisezug) - rmvWIN (DPN - Nahreisezug) - rmvWIR (DPN - Nahreisezug) - rmvWIS (DPN - Nahreisezug) - rmvWZV (DPN - Nahreisezug) - rohBus (DPN - Nahreisezug) - RS (RE - Regionalverkehre Start Deutschland GmbH) - RSNM (RB - Regionalverkehre Start Deutschland GmbH (Start Niedersachsen-Mitte)) - RSTN (STN - Regionalverkehre Start Deutschland GmbH (Start Taunus)) - RSUE (RE - Regionalverkehre Start Deutschland GmbH (Start Unterelbe)) - rvgRVG (DPN - Nahreisezug) - rvoRVO (RVO - Regionalverkehr Oberbayern) - rvvRVV (DPN - Nahreisezug) - RW (PRE - Pressnitztalbahn) - S0 (DPN - Nahreisezug) - S1 (DPN - Nahreisezug) - S3 (SWB - Stadtwerke Bonn) - S6 (SWE - SWEG SÃ¼dwestdeutsche Landesverkehrs-GmbH) - S7 (DPN - Nahreisezug) - S9 (ag - agilis) - SAB (SAB - SchwÃ¤bische Alb-Bahn) - SAD003 (SAD - Vinschgaubahn) - sadBUS (DPN - Nahreisezug) - SB (RB - SÃ¼d-ThÃ¼ringen-Bahn GmbH) - sbpMU (DPN - Nahreisezug) - sbpRW (DPN - Nahreisezug) - sbpSK (DPN - Nahreisezug) - SBSBUS (DPN - Nahreisezug) - sbsbus (DPN - Nahreisezug) - SBSIRE (IRE - SWEG Bahn Stuttgart GmbH) - SBSMEX (MEX - SWEG Bahn Stuttgart GmbH) - SBSRB (RB - SWEG Bahn Stuttgart GmbH) - SBSRE (RE - SWEG Bahn Stuttgart GmbH) - SBX (RE - SÃ¼d-ThÃ¼ringen-Bahn GmbH) - SD (DB - DB Regio AG SÃ¼dost) - smrBus (DPN - Nahreisezug) - smrRfb (DPN - Nahreisezug) - snp001 (DPN - Nahreisezug) - snp002 (DPN - Nahreisezug) - spaBus (DPN - Nahreisezug) - srlBus (DPN - Nahreisezug) - sswssw (DPN - Nahreisezug) - sva006 (DPN - Nahreisezug) - svaBUS (DPN - Nahreisezug) - svaSTR (DPN - Nahreisezug) - svr001 (DPN - Nahreisezug) - SW (DPN - Nahreisezug) - swg099 (SWE - SWEG SÃ¼dwestdeutsche Landesverkehrs-GmbH) - swgSWB (DPN - Nahreisezug) - swlbus (DPN - Nahreisezug) - swm001 (DPN - Nahreisezug) - swm002 (DPN - Nahreisezug) - swm003 (DPN - Nahreisezug) - swpVBP (DPN - Nahreisezug) - swt_31 (DPN - Nahreisezug) - swt_32 (DPN - Nahreisezug) - swt_33 (DPN - Nahreisezug) - swt_35 (DPN - Nahreisezug) - swt_36 (DPN - Nahreisezug) - swt_37 (DPN - Nahreisezug) - swt_38 (DPN - Nahreisezug) - swt_39 (DPN - Nahreisezug) - swt001 (DPN - Nahreisezug) - swt007 (DPN - Nahreisezug) - swt009 (DPN - Nahreisezug) - swt014 (DPN - Nahreisezug) - swt021 (DPN - Nahreisezug) - swt022 (DPN - Nahreisezug) - swt023 (DPN - Nahreisezug) - swt024 (DPN - Nahreisezug) - swt025 (DPN - Nahreisezug) - swt026 (DPN - Nahreisezug) - swt028 (DPN - Nahreisezug) - swt030 (DPN - Nahreisezug) - swt031 (DPN - Nahreisezug) - swt032 (DPN - Nahreisezug) - swt033 (DPN - Nahreisezug) - swtb00 (DPN - Nahreisezug) - swtb01 (DPN - Nahreisezug) - swtb03 (DPN - Nahreisezug) - swtb12 (DPN - Nahreisezug) - swtb16 (DPN - Nahreisezug) - swtb19 (DPN - Nahreisezug) - swtb20 (DPN - Nahreisezug) - swtb21 (DPN - Nahreisezug) - swtb22 (DPN - Nahreisezug) - swtb24 (DPN - Nahreisezug) - swtb25 (DPN - Nahreisezug) - swtb27 (DPN - Nahreisezug) - swtb29 (DPN - Nahreisezug) - T8 (BRB - Bayerische Regiobahn) - TDHS (S - S-Bahn Hannover (Transdev)) - TDRR (RRB - RheinRuhrBahn (Transdev)) - tgo099 (SWE - SWEG SÃ¼dwestdeutsche Landesverkehrs-GmbH) - TR (RB - MittelrheinBahn (Trans Regio)) - TRI (TRI - TRI Train Rental GmbH) - tub001 (DPN - Nahreisezug) - tub003 (DPN - Nahreisezug) - tub004 (DPN - Nahreisezug) - tub007 (DPN - Nahreisezug) - tub008 (DPN - Nahreisezug) - tub009 (DPN - Nahreisezug) - tub010 (DPN - Nahreisezug) - tub015 (DPN - Nahreisezug) - tub022 (DPN - Nahreisezug) - tub030 (DPN - Nahreisezug) - tub031 (DPN - Nahreisezug) - tub033 (DPN - Nahreisezug) - tub034 (DPN - Nahreisezug) - tub035 (DPN - Nahreisezug) - tub036 (DPN - Nahreisezug) - tub038 (DPN - Nahreisezug) - tub041 (DPN - Nahreisezug) - tub042 (DPN - Nahreisezug) - tub044 (DPN - Nahreisezug) - tub048 (DPN - Nahreisezug) - tub049 (DPN - Nahreisezug) - tub051 (DPN - Nahreisezug) - tub053 (DPN - Nahreisezug) - tub054 (DPN - Nahreisezug) - tub061 (DPN - Nahreisezug) - tub068 (DPN - Nahreisezug) - tub069 (DPN - Nahreisezug) - tub071 (DPN - Nahreisezug) - tub072 (DPN - Nahreisezug) - tub079 (DPN - Nahreisezug) - tub090 (DPN - Nahreisezug) - tub093 (DPN - Nahreisezug) - tub094 (DPN - Nahreisezug) - tub095 (DPN - Nahreisezug) - tut001 (DPN - Nahreisezug) - UW (UBB - Usedomer BÃ¤derbahn) - V6 (vlx - vlexx) - V6RB (RB - vlexx) - V6RE (RE - vlexx) - V7 (SVG - SVG Schienenverkehrsgesellschaft Stuttgart) - V9 (P - Wanderbahn im Regental) - vabsta (DPN - Nahreisezug) - vag010 (DPN - Nahreisezug) - vag011 (DPN - Nahreisezug) - vag013 (DPN - Nahreisezug) - vag014 (DPN - Nahreisezug) - vag060 (DPN - Nahreisezug) - vanbus (DPN - Nahreisezug) - vanstr (DPN - Nahreisezug) - vanuba (DPN - Nahreisezug) - vbb070 (DPN - Nahreisezug) - vbb071 (DPN - Nahreisezug) - vbb072 (DPN - Nahreisezug) - vbbBBG (DPN - Nahreisezug) - vbbBRB (DPN - Nahreisezug) - vbbBRT (DPN - Nahreisezug) - vbbBVB (DPN - Nahreisezug) - vbbBVF (DPN - Nahreisezug) - vbbBVT (DPN - Nahreisezug) - vbbBVU (DPN - Nahreisezug) - vbbCNB (DPN - Nahreisezug) - vbbCNT (DPN - Nahreisezug) - vbbFFB (DPN - Nahreisezug) - vbbFFT (DPN - Nahreisezug) - vbbGLA (DPN - Nahreisezug) - vbbHVG (DPN - Nahreisezug) - vbbMOB (DPN - Nahreisezug) - vbbORP (DPN - Nahreisezug) - vbbOSL (DPN - Nahreisezug) - vbbOVG (DPN - Nahreisezug) - vbbREI (DPN - Nahreisezug) - vbbRPM (DPN - Nahreisezug) - vbbRVS (DPN - Nahreisezug) - vbbSCH (DPN - Nahreisezug) - vbbSRS (DPN - Nahreisezug) - vbbSTE (DPN - Nahreisezug) - vbbSTF (DPN - Nahreisezug) - vbbSTG (DPN - Nahreisezug) - vbbUVG (DPN - Nahreisezug) - vbbVEE (DPN - Nahreisezug) - vbbVIB (DPN - Nahreisezug) - vbbVIF (DPN - Nahreisezug) - vbbVIT (DPN - Nahreisezug) - vbbVTF (DPN - Nahreisezug) - vgb00 (DPN - Nahreisezug) - vgm013 (DPN - Nahreisezug) - vgm020 (DPN - Nahreisezug) - vgm022 (DPN - Nahreisezug) - vgm023 (DPN - Nahreisezug) - vgm024 (DPN - Nahreisezug) - vgm025 (DPN - Nahreisezug) - vgm026 (DPN - Nahreisezug) - vgm028 (DPN - Nahreisezug) - vgm029 (DPN - Nahreisezug) - vgm030 (DPN - Nahreisezug) - vgm031 (DPN - Nahreisezug) - vgm032 (DPN - Nahreisezug) - vgm033 (DPN - Nahreisezug) - vgm034 (DPN - Nahreisezug) - vgm035 (DPN - Nahreisezug) - vgm036 (DPN - Nahreisezug) - vgm037 (DPN - Nahreisezug) - vgm038 (DPN - Nahreisezug) - vgm039 (DPN - Nahreisezug) - vgm040 (DPN - Nahreisezug) - vgm041 (DPN - Nahreisezug) - vgm042 (DPN - Nahreisezug) - vgm044 (DPN - Nahreisezug) - vgm045 (DPN - Nahreisezug) - vgm046 (DPN - Nahreisezug) - vgm047 (DPN - Nahreisezug) - vgm050 (DPN - Nahreisezug) - vgm051 (DPN - Nahreisezug) - vgm053 (DPN - Nahreisezug) - vgm060 (DPN - Nahreisezug) - vgm079 (DPN - Nahreisezug) - vgm092 (DPN - Nahreisezug) - vgm093 (WB - Westfalenbus) - vgm094 (DPN - Nahreisezug) - vgmb93 (WB - Westfalenbus) - vgn_16 (DPN - Nahreisezug) - vgn043 (DPN - Nahreisezug) - vgn061 (DPN - Nahreisezug) - vgn063 (DPN - Nahreisezug) - vgn065 (DPN - Nahreisezug) - vgn068 (DPN - Nahreisezug) - vgn083 (DPN - Nahreisezug) - vgsARG (DPN - Nahreisezug) - vgsBar (DPN - Nahreisezug) - vgsBTV (DPN - Nahreisezug) - vgsKIR (DPN - Nahreisezug) - vgsKVS (DPN - Nahreisezug) - vgsLay (DPN - Nahreisezug) - vgsMLB (DPN - Nahreisezug) - vgsNVG (DPN - Nahreisezug) - vgsSAM (DPN - Nahreisezug) - vgsSBB (DPN - Nahreisezug) - vgsSBS (S - Saarbahn) - vgsVVB (DPN - Nahreisezug) - vgsZar (DPN - Nahreisezug) - vhb000 (DPN - Nahreisezug) - vhb002 (DPN - Nahreisezug) - vhb003 (DPN - Nahreisezug) - vmo004 (DPN - Nahreisezug) - vmo008 (DPN - Nahreisezug) - vmo010 (DPN - Nahreisezug) - vmo012 (DPN - Nahreisezug) - vmo050 (DPN - Nahreisezug) - vmo099 (DPN - Nahreisezug) - vms001 (DPN - Nahreisezug) - vms002 (DPN - Nahreisezug) - vms010 (DPN - Nahreisezug) - vms011 (DPN - Nahreisezug) - vms012 (DPN - Nahreisezug) - vms014 (DPN - Nahreisezug) - vms020 (DPN - Nahreisezug) - vms022 (DPN - Nahreisezug) - vms023 (DPN - Nahreisezug) - vms024 (DPN - Nahreisezug) - vms025 (DPN - Nahreisezug) - vms031 (DPN - Nahreisezug) - vms032 (DPN - Nahreisezug) - vms040 (DPN - Nahreisezug) - vms041 (DPN - Nahreisezug) - vms042 (DPN - Nahreisezug) - vms043 (DPN - Nahreisezug) - vms044 (DPN - Nahreisezug) - vms046 (DPN - Nahreisezug) - vms047 (DPN - Nahreisezug) - vms051 (DPN - Nahreisezug) - vms056 (DPN - Nahreisezug) - vms060 (DPN - Nahreisezug) - vms061 (DPN - Nahreisezug) - vms062 (DPN - Nahreisezug) - vms063 (DPN - Nahreisezug) - vms064 (DPN - Nahreisezug) - vms070 (DPN - Nahreisezug) - vms076 (DPN - Nahreisezug) - vms077 (DPN - Nahreisezug) - vms080 (DPN - Nahreisezug) - vms081 (DPN - Nahreisezug) - vms099 (DPN - Nahreisezug) - voe_12 (DPN - Nahreisezug) - voe_SB (DPN - Nahreisezug) - voe002 (DPN - Nahreisezug) - voe011 (DPN - Nahreisezug) - voe012 (DPN - Nahreisezug) - voe013 (DPN - Nahreisezug) - voe015 (DPN - Nahreisezug) - voe021 (DPN - Nahreisezug) - voe022 (DPN - Nahreisezug) - voe023 (DPN - Nahreisezug) - voe024 (DPN - Nahreisezug) - voe027 (DPN - Nahreisezug) - voe028 (DPN - Nahreisezug) - voe029 (DPN - Nahreisezug) - voe081 (DPN - Nahreisezug) - voe091 (DPN - Nahreisezug) - voeALT (DPN - Nahreisezug) - voeBU3 (DPN - Nahreisezug) - voeBU4 (DPN - Nahreisezug) - voeFAE (DPN - Nahreisezug) - voeSTR (DPN - Nahreisezug) - voeSWB (DPN - Nahreisezug) - vogBus (DPN - Nahreisezug) - von026 (DPN - Nahreisezug) - von027 (DPN - Nahreisezug) - von030 (DPN - Nahreisezug) - von031 (DPN - Nahreisezug) - von032 (DPN - Nahreisezug) - von042 (DPN - Nahreisezug) - von044 (DPN - Nahreisezug) - von052 (DPN - Nahreisezug) - von062 (DPN - Nahreisezug) - von064 (DPN - Nahreisezug) - von065 (DPN - Nahreisezug) - von069 (DPN - Nahreisezug) - vpeAST (DPN - Nahreisezug) - vpeBus (DPN - Nahreisezug) - vph063 (DPN - Nahreisezug) - vph071 (DPN - Nahreisezug) - vph072 (DPN - Nahreisezug) - vph073 (DPN - Nahreisezug) - vph074 (DPN - Nahreisezug) - vph075 (DPN - Nahreisezug) - vph076 (DPN - Nahreisezug) - vph077 (DPN - Nahreisezug) - vph078 (DPN - Nahreisezug) - vph079 (DPN - Nahreisezug) - vph080 (DPN - Nahreisezug) - vph081 (DPN - Nahreisezug) - vph082 (DPN - Nahreisezug) - vpo099 (DPN - Nahreisezug) - vrm002 (DPN - Nahreisezug) - vrm005 (DPN - Nahreisezug) - vrm006 (DPN - Nahreisezug) - vrm007 (DPN - Nahreisezug) - vrm008 (DPN - Nahreisezug) - vrm009 (DPN - Nahreisezug) - vrm011 (DPN - Nahreisezug) - vrm014 (DPN - Nahreisezug) - vrm015 (DPN - Nahreisezug) - vrm016 (DPN - Nahreisezug) - vrm017 (DPN - Nahreisezug) - vrm019 (DPN - Nahreisezug) - vrm020 (DPN - Nahreisezug) - vrm025 (DPN - Nahreisezug) - vrm031 (DPN - Nahreisezug) - vrm032 (DPN - Nahreisezug) - vrm036 (DPN - Nahreisezug) - vrm061 (DPN - Nahreisezug) - vrm066 (DPN - Nahreisezug) - vrm067 (DPN - Nahreisezug) - vrm068 (DPN - Nahreisezug) - vrm069 (DPN - Nahreisezug) - vrm070 (DPN - Nahreisezug) - vrm072 (DPN - Nahreisezug) - vrm073 (DPN - Nahreisezug) - vrm074 (DPN - Nahreisezug) - vrm077 (DPN - Nahreisezug) - vrm078 (DPN - Nahreisezug) - vrm083 (DPN - Nahreisezug) - vrm084 (DPN - Nahreisezug) - vrm085 (DPN - Nahreisezug) - vrn008 (STR - Rhein-Neckar-Verkehr GmbH) - vrn011 (STR - Rhein-Neckar-Verkehr GmbH) - vrn016 (DPN - Nahreisezug) - vrn017 (DPN - Nahreisezug) - vrn018 (DPN - Nahreisezug) - vrn019 (DPN - Nahreisezug) - vrn020 (DPN - Nahreisezug) - vrn022 (MNV - MNV Mittelhaardt Nahverkehrsgesellschaft) - vrn023 (DPN - Nahreisezug) - vrn025 (DPN - Nahreisezug) - vrn026 (DPN - Nahreisezug) - vrn027 (DPN - Nahreisezug) - vrn028 (H&P - Hetzler & Pfadt) - vrn029 (DPN - Nahreisezug) - vrn030 (DPN - Nahreisezug) - vrn032 (PAL - PalatinaBus) - vrn033 (DPN - Nahreisezug) - vrn040 (DPN - Nahreisezug) - vrn041 (DPN - Nahreisezug) - vrn043 (DPN - Nahreisezug) - vrn047 (DPN - Nahreisezug) - vrn049 (DPN - Nahreisezug) - vrn050 (QNV - QNV Queichtal Nahverkehr) - vrn051 (DPN - Nahreisezug) - vrn053 (DPN - Nahreisezug) - vrn057 (DPN - Nahreisezug) - vrn058 (DPN - Nahreisezug) - vrn059 (DPN - Nahreisezug) - vrn062 (DPN - Nahreisezug) - vrn068 (DPN - Nahreisezug) - vrn073 (DPN - Nahreisezug) - vrn074 (DPN - Nahreisezug) - vrn076 (DPN - Nahreisezug) - vrn078 (DPN - Nahreisezug) - vrn079 (DPN - Nahreisezug) - vrn080 (DPN - Nahreisezug) - vrn081 (DPN - Nahreisezug) - vrn082 (DPN - Nahreisezug) - vrn083 (DPN - Nahreisezug) - vrn095 (DPN - Nahreisezug) - vrnOEG (RNV - Rhein-Neckar-Verkehr GmbH (Oberrheinische Eisenbahn)) - vrnRHB (RNV - Rhein-Neckar-Verkehr GmbH (Rhein-Haardtbahn)) - vrr001 (DPN - Nahreisezug) - vrr002 (DPN - Nahreisezug) - vrr010 (DPN - Nahreisezug) - vrr011 (DPN - Nahreisezug) - vrr012 (DPN - Nahreisezug) - vrr013 (DPN - Nahreisezug) - vrr015 (DPN - Nahreisezug) - vrr016 (DPN - Nahreisezug) - vrr018 (DPN - Nahreisezug) - vrr020 (DPN - Nahreisezug) - vrr021 (DPN - Nahreisezug) - vrr023 (DPN - Nahreisezug) - vrr025 (DPN - Nahreisezug) - vrr029 (DPN - Nahreisezug) - vrr030 (DPN - Nahreisezug) - vrr031 (DPN - Nahreisezug) - vrr032 (DPN - Nahreisezug) - vrr033 (DPN - Nahreisezug) - vrr034 (DPN - Nahreisezug) - vrr035 (DPN - Nahreisezug) - vrr036 (DPN - Nahreisezug) - vrr037 (DPN - Nahreisezug) - vrr038 (DPN - Nahreisezug) - vrr039 (DPN - Nahreisezug) - vrr040 (DPN - Nahreisezug) - vrr045 (DPN - Nahreisezug) - vrr050 (DPN - Nahreisezug) - vrr060 (DPN - Nahreisezug) - vrr064 (DPN - Nahreisezug) - vrr065 (DPN - Nahreisezug) - vrr066 (DPN - Nahreisezug) - vrr070 (DPN - Nahreisezug) - vrr071 (DPN - Nahreisezug) - vrr072 (DPN - Nahreisezug) - vrr073 (DPN - Nahreisezug) - vrr075 (DPN - Nahreisezug) - vrr076 (DPN - Nahreisezug) - vrr077 (DPN - Nahreisezug) - vrr080 (DPN - Nahreisezug) - vrr088 (BVR - Busverkehr Rheinland) - vrs001 (DPN - Nahreisezug) - vrs003 (DPN - Nahreisezug) - vrs006 (DPN - Nahreisezug) - vrs008 (DPN - Nahreisezug) - vrs011 (DPN - Nahreisezug) - vrs012 (DPN - Nahreisezug) - vrs013 (DPN - Nahreisezug) - vrs014 (DPN - Nahreisezug) - vrs016 (DPN - Nahreisezug) - vrs017 (DPN - Nahreisezug) - vrs021 (DPN - Nahreisezug) - vrs022 (DPN - Nahreisezug) - vrs023 (DPN - Nahreisezug) - vrs024 (DPN - Nahreisezug) - vrs025 (DPN - Nahreisezug) - vrs028 (DPN - Nahreisezug) - vrs029 (DPN - Nahreisezug) - vrs060 (DPN - Nahreisezug) - vrs063 (DPN - Nahreisezug) - vsh001 (DPN - Nahreisezug) - vsh010 (DPN - Nahreisezug) - vsh020 (DPN - Nahreisezug) - vuvab (VU - Verkehrsgesellschaft mbH Untermain) - vvs012 (WEG - WÃ¼rttembergische Eisenbahn-Gesellschaft mbH) - vvs020 (DPN - Nahreisezug) - vvs021 (DPN - Nahreisezug) - vvs030 (DPN - Nahreisezug) - vvs031 (DPN - Nahreisezug) - vvs033 (DPN - Nahreisezug) - vvs034 (DPN - Nahreisezug) - vvs035 (DPN - Nahreisezug) - vvs041 (DPN - Nahreisezug) - vvs050 (DPN - Nahreisezug) - vvs051 (DPN - Nahreisezug) - vvs052 (DPN - Nahreisezug) - vvs055 (DPN - Nahreisezug) - vvs077 (DPN - Nahreisezug) - vvs078 (DPN - Nahreisezug) - vwmBuS (DPN - Nahreisezug) - vwmNAH (DPN - Nahreisezug) - vwmStr (DPN - Nahreisezug) - vwmVLP (DPN - Nahreisezug) - vws003 (DPN - Nahreisezug) - vws005 (DPN - Nahreisezug) - vws007 (DPN - Nahreisezug) - W0 (WDR - Wyker Dampfschiffs-Reederei FÃ¶hr-Amrum GmbH) - W2 (Dab - Daadetalbahn) - W3 (WFB - WestfalenBahn) - W6 (WTB - Wutachtalbahn) - W9 (WBA - waldbahn - Die LÃ¤nderbahn GmbH DLB) - wabBus (DPN - Nahreisezug) - web_AN (DPN - Nahreisezug) - web_HB (DPN - Nahreisezug) - web_OF (DPN - Nahreisezug) - web_OS (DPN - Nahreisezug) - web002 (DPN - Nahreisezug) - web005 (DPN - Nahreisezug) - web006 (DPN - Nahreisezug) - web018 (DPN - Nahreisezug) - web019 (DPN - Nahreisezug) - webALL (DPN - Nahreisezug) - webAND (DPN - Nahreisezug) - webARE (DPN - Nahreisezug) - webAST (DPN - Nahreisezug) - webBBU (DPN - Nahreisezug) - webBEC (DPN - Nahreisezug) - webBPU (DPN - Nahreisezug) - webBRU (DPN - Nahreisezug) - webBTR (STR - Bremer StraÃenbahn AG) - webBVB (DPN - Nahreisezug) - webBVS (DPN - Nahreisezug) - webDEL (DPN - Nahreisezug) - webDHE (DPN - Nahreisezug) - webEDZ (DPN - Nahreisezug) - webEMS (DPN - Nahreisezug) - webEVB (DPN - Nahreisezug) - webFAS (DPN - Nahreisezug) - webFIS (DPN - Nahreisezug) - webFLX (DPN - Nahreisezug) - webGEB (DPN - Nahreisezug) - webGER (DPN - Nahreisezug) - webGIE (DPN - Nahreisezug) - webGOE (DPN - Nahreisezug) - webGOS (DPN - Nahreisezug) - webHAR (DPN - Nahreisezug) - webHDK (DPN - Nahreisezug) - webHKR (DPN - Nahreisezug) - webHM (DPN - Nahreisezug) - webHUT (DPN - Nahreisezug) - webHVG (DPN - Nahreisezug) - webJAC (DPN - Nahreisezug) - webjan (DPN - Nahreisezug) - webKAR (DPN - Nahreisezug) - webKBA (DPN - Nahreisezug) - webKRR (DPN - Nahreisezug) - webKVG (DPN - Nahreisezug) - webLSE (DPN - Nahreisezug) - webMEY (DPN - Nahreisezug) - webNIE (DPN - Nahreisezug) - webNOH (DPN - Nahreisezug) - webNOR (DPN - Nahreisezug) - webONS (DPN - Nahreisezug) - webOS1 (DPN - Nahreisezug) - webOSV (DPN - Nahreisezug) - webRA1 (DPN - Nahreisezug) - webRBG (DPN - Nahreisezug) - webRVH (DPN - Nahreisezug) - webSAL (DPN - Nahreisezug) - webSTO (DPN - Nahreisezug) - webSVG (DPN - Nahreisezug) - webSWE (DPN - Nahreisezug) - webSWH (DPN - Nahreisezug) - webSZG (DPN - Nahreisezug) - webTMW (DPN - Nahreisezug) - webUEB (DPN - Nahreisezug) - webUET (STB - Ã¼stra Hannoversche Verkehrsbetriebe AG) - webUFF (DPN - Nahreisezug) - webVBB (DPN - Nahreisezug) - webVBN (DPN - Nahreisezug) - webVBW (DPN - Nahreisezug) - webVGE (DPN - Nahreisezug) - webVGH (DPN - Nahreisezug) - webVGP (DPN - Nahreisezug) - webVGV (DPN - Nahreisezug) - webVGW (DPN - Nahreisezug) - webVL1 (DPN - Nahreisezug) - webVLG (DPN - Nahreisezug) - webVO8 (DPN - Nahreisezug) - webVOH (DPN - Nahreisezug) - webVOL (DPN - Nahreisezug) - webVOS (DPN - Nahreisezug) - webVSN (DPN - Nahreisezug) - webVWG (DPN - Nahreisezug) - webWHV (DPN - Nahreisezug) - webWIN (DPN - Nahreisezug) - webWIS (DPN - Nahreisezug) - webWOB (DPN - Nahreisezug) - webWSF (DPN - Nahreisezug) - webXOS (WEB - Weser-Ems-Bus) - webYGO (RBB - Regionalbus Braunschweig GmbH) - webYUE (RBB - Regionalbus Braunschweig GmbH) - webYUZ (DPN - Nahreisezug) - wenBUS (DPN - Nahreisezug) - WL (RB - Kreisbahn Mansfelder Land) - wstwst (DPN - Nahreisezug) - wvvBUS (DPN - Nahreisezug) - wvvSTR (DPN - Nahreisezug) - wzlBus (DPN - Nahreisezug) - X1 (erx - erixx) - X2 (erx - erixx) - Y0 (SCH - Adler-Schiffe) - Y8 (BRB - Bayerische Regiobahn) - Z8 (BZB - Bayerische Zugspitzbahn) - Z9 (P - RhÃ¶n-ZÃ¼gle) - zsbteg (DPN - Nahreisezug) - zvv008 (DPN - Nahreisezug) - zvv018 (DPN - Nahreisezug) - zvv019 (DPN - Nahreisezug) - zvv041 (DPN - Nahreisezug) note: list is not exhausting and more undocumented values may be returned"
					},
					"operatorCode": {
						"type": "string",
						"description": "Unique code of the operator [Betreiber]."
					},
					"operatorName": {
						"type": "string",
						"description": "Name of the operator [Betreiber]."
					}
				},
				"required": ["administrationID", "operatorCode", "operatorName"],
				"type": "object",
				"additionalProperties": true
			},
			"Transport": {
				"description": "Transport [Verkehrsart / Verkehrsmittel] information.",
				"properties": {
					"type": {
						"type": "string",
						"description": "Type of transport. Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - SHUTTLE (Shuttle [Ruftaxi]) - FLIGHT (Flight [Flug]) - UNKNOWN (Unknown)"
					},
					"category": {
						"type": "string",
						"description": "Category of the transport [externe Fahrtgattung]."
					},
					"journeyNumber": {
						"type": "number",
						"format": "double",
						"description": "Number of the transport [Fahrtnummer]."
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
					},
					"administration": {
						"$ref": "#/components/schemas/Administration"
					}
				},
				"required": ["type", "category", "journeyNumber", "administration"],
				"type": "object",
				"additionalProperties": true
			},
			"JourneyInfo": {
				"description": "Comprehensive journey information.",
				"properties": {
					"transportAtStart": {
						"$ref": "#/components/schemas/Transport"
					},
					"type": {
						"type": "string",
						"description": "Defines whether journey [Fahrt] is regular or some kind of special. - REGULAR (Regular scheduled journey) - REPLACEMENT (Journey that replaces another journey) - RELIEF (Journey that reliefs another journey) - EXTRA (Journey that is somehow extra)"
					},
					"journeyCancelled": {
						"type": "boolean",
						"description": "Indicates whether whole journey has been cancelled."
					},
					"origin": {
						"$ref": "#/components/schemas/StopPlaceEmbeddedWithCancel"
					},
					"differingOrigin": {
						"$ref": "#/components/schemas/StopPlaceEmbedded"
					},
					"destination": {
						"$ref": "#/components/schemas/StopPlaceEmbeddedWithCancel"
					},
					"differingDestination": {
						"$ref": "#/components/schemas/StopPlaceEmbedded"
					},
					"headerAdministration": {
						"$ref": "#/components/schemas/Administration"
					},
					"headerJourneyNumber": {
						"type": "number",
						"format": "double",
						"description": "Header number of journey [Kopf-Fahrtnummer], may differ from number of journey."
					}
				},
				"required": [
					"transportAtStart",
					"type",
					"origin",
					"destination",
					"headerAdministration",
					"headerJourneyNumber"
				],
				"type": "object",
				"additionalProperties": true
			},
			"MessageAttribute": {
				"description": "Journey-attribute [Fahrtmerkmale / Sollmerkmale] message.",
				"properties": {
					"messageID": {
						"type": "number",
						"format": "double",
						"description": "ID of message that is unique within all message collections."
					},
					"displayPriority": {
						"type": "number",
						"format": "double",
						"description": "Display priority [Anzeigereihenfolge aka \\'PrioritÃ¤t*] for message. Order is ascending."
					},
					"displayPriorityDetail": {
						"type": "number",
						"format": "double",
						"description": "Detailed display priority [detaillierte Anzeigereihenfolge aka \\'Feinsortierung\\'] for message. Order is ascending."
					},
					"code": {
						"type": "string",
						"description": "- FR (Fahrradmitnahme reservierungspflichtig) - RP (Reservierungspflicht) - RR (1. Kl. Reservierungspflicht) - RT (Teilreservierungspflicht) - OC (rollstuhltaugliches WC) - 3D (Schlafwagen 2. Klasse T3 mit Dusche und WC) - S1 (Schlafwagen 1. Klasse Single mit Dusche und WC) - S2 (Schlafwagen 1. Klasse Double mit Dusche und WC) - NG (Tarifliche Vereinigung (DB-Nahverkehrsfahrkarten gelten mit Ausnahme von Sonderangeboten) - NJ (Tarifliche Vereinigung (Alle Nahverkehrsfahrkarten werden anerkannt) - N+ (Tarifliche Vereinigung (Nahverkehrskooperation DB FV: fiktiver Zug) - CK (Komfort Check-in mÃ¶glich) - HS (Zugang fuer Rollstuhlfahrer) - OA (Rollstuhlstellplatz - Voranmeldung unter +43 5 1717) - OG (bedingt rollstuhltaugliches WC) - RO (Rollstuhlstellplatz) - FB (Fahrradmitnahme begrenzt moeglich) - FF (Fahrradmitnahme reservierungpflichtig -nur grenzueberschreitend moeglich) - FK (Fahrradmitnahme begrenzt moeglich) - FO (Fahrradreservierung unter 030 2970 oder in Reisezentren + DB Agenturen) - FR (Fahrradmitnahme reservierungspflichtig) - G  (Fahrradmitnahme begrenzt moeglich) - NF (keine Fahrradbefoerderung moeglich) - DC (keine behindertengerechte Toilette) - EH (Fahrzeuggebundene Einstiegshilfe: Anmeldung 01806-512512 *) - EF (Fahrzeuggebundene Einstiegshilfe) - RG (Behindertengerechtes Fahrzeug) - SM (Info www.bahn.de/sh-barrierefrei) - SI (Barrierefreier Zustieg an geeigneten Stationen moeglich) - AB (Bus mit Fahrradanhaenger) - FJ (Keine Mitnahme von Fahrradgruppen moeglich) - FS (Bei Fahrradmitnahme Sperrzeiten beachten) - FT (Radexpress und Ausflugszug) - KF (Kostenlose Fahrradbefoerderung) - RF (Fahrradbus: Fuer Reisende mit Fahrrad) - TF (Bus mit Fahrradtraeger)"
					},
					"text": {
						"type": "string",
						"description": "Text for attribute."
					}
				},
				"required": ["messageID", "code", "text"],
				"type": "object",
				"additionalProperties": true
			},
			"DisruptionCommunicationDescription": {
				"description": "Disruption communication information [Stoerungskommunikation] descriptions.",
				"properties": {
					"text": {
						"type": "string",
						"description": "Long text of disruption communication."
					},
					"textShort": {
						"type": "string",
						"description": "Optional short text of disruption communication."
					}
				},
				"required": ["text"],
				"type": "object",
				"additionalProperties": true
			},
			"MessageDisruptionCommunication": {
				"description": "Disruption-communication [StÃ¶rungskommunikationen] message.",
				"properties": {
					"messageID": {
						"type": "number",
						"format": "double",
						"description": "ID of message that is unique within all message collections."
					},
					"disruptionID": {
						"type": "string",
						"description": "ID of disruption [StoerungsID]."
					},
					"disruptionCommunicationID": {
						"type": "string",
						"description": "ID of disruption communication [StoerungskommunikationsID]."
					},
					"displayPriority": {
						"type": "number",
						"format": "double",
						"description": "Display priority [Anzeigereihenfolge] for disruption-communication. Order is ascending."
					},
					"langDe": {
						"$ref": "#/components/schemas/DisruptionCommunicationDescription"
					},
					"langEn": {
						"$ref": "#/components/schemas/DisruptionCommunicationDescription"
					}
				},
				"required": ["messageID", "langDe"],
				"type": "object",
				"additionalProperties": true
			},
			"MessageNote": {
				"description": "Note [Hinweistext] message.",
				"properties": {
					"messageID": {
						"type": "number",
						"format": "double",
						"description": "ID of message that is unique within all message collections."
					},
					"code": {
						"type": "string",
						"description": "Optional code of note."
					},
					"category": {
						"type": "string",
						"description": "Optional category of message, like for instance \\'Bauarbeiten\\' or \\'Informationen\\'."
					},
					"text": {
						"type": "string",
						"description": "Freetext of note."
					},
					"textShort": {
						"type": "string",
						"description": "Short freetext of note, may be empty."
					}
				},
				"required": ["messageID", "text"],
				"type": "object",
				"additionalProperties": true
			},
			"MessageRisCauseCode": {
				"description": "Ris cause code [RIS Kundengrund] message.",
				"properties": {
					"messageID": {
						"type": "number",
						"format": "double",
						"description": "ID of message that is unique within all message collections."
					},
					"code": {
						"type": "string",
						"description": "RIS cause code [Code fÃ¼r RIS Kundengrund]. - 00 (entspricht \\'keine VerspÃ¤tungsbegrÃ¼ndung\\') - 01 (entspricht \\'nÃ¤here Informationen in KÃ¼rze\\') - 02 (entspricht \\'Polizeieinsatz\\') - 03 (entspricht \\'Feuerwehreinsatz auf der Strecke\\') - 04 (aktuell nicht belegt) - 05 (entspricht \\'Ã¤rztliche Versorgung eines Fahrgastes\\') - 06 (entspricht \\'unbefugtes Ziehen der Notbremse\\') - 07 (entspricht \\'unbefugte Personen auf der Strecke\\') - 08 (entspricht \\'Notarzteinsatz auf der Strecke\\') - 09 (entspricht \\'Streikauswirkungen\\') - 10 (entspricht \\'Tiere auf der Strecke\\') - 11 (entspricht \\'Unwetter\\') - 12 (entspricht \\'Warten auf ein verspÃ¤tetes Schiff\\') - 13 (entspricht \\'Pass- und Zollkontrolle\\') - 14 (aktuell nicht belegt) - 15 (entspricht \\'BeeintrÃ¤chtigung durch Vandalismus\\') - 16 (entspricht \\'EntschÃ¤rfung einer Fliegerbombe\\') - 17 (entspricht \\'BeschÃ¤digung einer BrÃ¼cke\\') - 18 (entspricht \\'umgestÃ¼rzter Baum auf der Strecke\\') - 19 (entspricht \\'Unfall an einem BahnÃ¼bergang\\') - 20 (aktuell nicht belegt) - 21 (entspricht \\'Warten auf Anschlussreisende\\') - 22 (entspricht \\'Witterungsbedingte BeeintrÃ¤chtigungen\\') - 23 (aktuell nicht belegt) - 24 (entspricht \\'VerspÃ¤tung im Ausland\\') - 25 (entspricht \\'Bereitstellung weiterer Wagen\\') - 26 (aktuell nicht belegt) - 27 (aktuell nicht belegt) - 28 (entspricht \\'GegenstÃ¤nde auf der Strecke\\') - 29 (entspricht \\'Ersatzverkehr mit Bus ist eingerichtet\\') - 30 (aktuell nicht belegt) - 31 (entspricht \\'Bauarbeiten\\') - 32 (entspricht \\'UnterstÃ¼tzung beim Ein- und Ausstieg\\') - 33 (entspricht \\'Reparatur an der Oberleitung\\') - 34 (entspricht \\'Reparatur an einem Signal\\') - 35 (entspricht \\'Streckensperrung \\') - 36 (entspricht \\'Reparatur am Zug\\') - 37 (aktuell nicht belegt) - 38 (entspricht \\'Reparatur an der Strecke\\') - 39 (entspricht \\'\\') - 40 (entspricht \\'defektes Stellwerk\\') - 41 (aktuell nicht belegt) - 42 (entspricht \\'vorÃ¼bergehend verminderte Geschwindigkeit auf der Strecke\\') - 43 (entspricht \\'VerspÃ¤tung eines vorausfahrenden Zuges\\') - 44 (entspricht \\'Warten auf einen entgegenkommenden Zug\\') - 45 (entspricht \\'Vorfahrt eines anderen Zuges\\') - 46 (entspricht \\'Vorfahrt eines anderen Zuges\\') - 47 (entspricht \\'verspÃ¤tete Bereitstellung des Zuges\\') - 48 (entspricht \\'VerspÃ¤tung aus vorheriger Fahrt\\') - 49 (entspricht \\'kurzfristiger Personalausfall\\') - 50 (entspricht \\'kurzfristige Erkrankung von Personal\\') - 51 (entspricht \\'verspÃ¤tetes Personal aus vorheriger Fahrt\\') - 52 (entspricht \\'Streik\\') - 53 (entspricht \\'Unwetterauswirkungen\\') - 54 (entspricht \\'VerfÃ¼gbarkeit der Gleise derzeit eingeschrÃ¤nkt\\') - 55 (aktuell nicht belegt) - 56 (entspricht \\'Warten auf Anschlussreisende\\') - 57 (entspricht \\'zusÃ¤tzlicher Halt zum Ein- und Ausstieg\\') - 58 (entspricht \\'Umleitung des Zuges\\') - 59 (entspricht \\'Schnee und Eis\\') - 60 (entspricht \\'witterungsbedingt verminderte Geschwindigkeit\\') - 61 (entspricht \\'defekte TÃ¼r\\') - 62 (aktuell nicht belegt) - 63 (aktuell nicht belegt) - 64 (entspricht \\'Reparatur an der Weiche\\') - 65 (entspricht \\'Erdrutsch\\') - 66 (entspricht \\'Hochwasser\\') - 67 (entspricht \\'behÃ¶rdliche MaÃnahme\\') - 68 (entspricht \\'hohes Fahrgastaufkommen verlÃ¤ngert Ein- und Ausstieg\\') - 69 (entspricht \\'Zug verkehrt mit verminderter Geschwindigkeit\\') - 99 (entspricht \\'sonstige GrÃ¼nde\\')  note: list is not exhausting and more undocumented values may be returned"
					},
					"text": {
						"type": "string",
						"description": "Text for code."
					}
				},
				"required": ["messageID", "code", "text"],
				"type": "object",
				"additionalProperties": true
			},
			"MessageRisQualityDeviation": {
				"description": "Ris quality deviation [RIS QualitÃ¤tsabweichungen] message.",
				"properties": {
					"messageID": {
						"type": "number",
						"format": "double",
						"description": "ID of message that is unique within all message collections."
					},
					"code": {
						"type": "string",
						"description": "RIS quality deviation [Code fÃ¼r RIS QualitÃ¤tsabweichung]. - 70 (WLAN nicht verfÃ¼gbar) - 71 (WLAN in einem/mehreren Wagen nicht verfÃ¼gbar) - 72 (Info-/Entertainment nicht verfÃ¼gbar) - 73 (Heute: Mehrzweckabteil vorne) - 74 (Heute: Mehrzweckabteil hinten) - 75 (Heute: 1. Klasse vorne) - 76 (Heute: 1. Klasse hinten) - 77 (1. Klasse fehlt) - 78 (aktuell nicht belegt) - 79 (Mehrzweckabteil fehlt) - 80 (andere Reihenfolge der Wagen) - 81 (aktuell nicht belegt) - 82 (mehrere Wagen fehlen) - 83 (defekte fahrzeuggebundene Einstiegshilfe) - 84 (Zug verkehrt richtig gereiht) - 85 (ein Wagen fehlt) - 86 (gesamter Zug ohne Reservierung) - 87 (einzelne Wagen ohne Reservierung) - 88 (keine QualitÃ¤tsmÃ¤ngel) - 89 (Reservierungen sind wieder vorhanden) - 90 (kein gastronomisches Angebot) - 91 (Fahrradmitnahme nicht mÃ¶glich) - 92 (EingeschrÃ¤nkte FahrradbefÃ¶rderung ) - 93 (behindertengerechte Einrichtung fehlt) - 94 (Ersatzbewirtschaftung) - 95 (Universal-WC fehlt) - 96 (Ãberbesetzung mit Kulanzleistungen) - 97 (Ãberbesetzung ohne Kulanzleistungen) - 98 (sonstige QualitÃ¤tsmÃ¤ngel)  note: list is not exhausting and more undocumented values may be returned"
					},
					"text": {
						"type": "string",
						"description": "Text for code."
					}
				},
				"required": ["messageID", "code", "text"],
				"type": "object",
				"additionalProperties": true
			},
			"Messages": {
				"description": "Container to deduplicate messages [StÃ¶rungskommunikationen, Fahrtmerkmale, Hinweise, RIS KundengrÃ¼nde oder RIS QualitÃ¤tsabweichungen] in order to assign them to journeys [Fahrten], journey-events [Fahrtereignisse wie Abfahrt und Ankunft] and stop-places [Haltestellen]. - messages are provided once and may be referenced multiple times [z.B. ein Fahrtmerkmal fÃ¼r alle Fahrtereignisse oder eine StÃ¶rungskommunikation fÃ¼r alle Abfahrten] - ids are not stable and only valid within the provided context (ie first journey request may have different message ids than second request for the same journey) - ids are unique over all buckets",
				"properties": {
					"attributes": {
						"items": {
							"$ref": "#/components/schemas/MessageAttribute"
						},
						"type": "array",
						"description": "List of journey-attributes [Fahrtmerkmale / Sollmerkmale]."
					},
					"disruptions": {
						"items": {
							"$ref": "#/components/schemas/MessageDisruptionCommunication"
						},
						"type": "array",
						"description": "List of disruption-communications [StÃ¶rungskommunikationen]."
					},
					"notes": {
						"items": {
							"$ref": "#/components/schemas/MessageNote"
						},
						"type": "array",
						"description": "List of notes [Freitexte / Hinweistexte]."
					},
					"risCauseCodes": {
						"items": {
							"$ref": "#/components/schemas/MessageRisCauseCode"
						},
						"type": "array",
						"description": "List of ris cause codes [RIS KundengrÃ¼nde]."
					},
					"risQualityDeviations": {
						"items": {
							"$ref": "#/components/schemas/MessageRisQualityDeviation"
						},
						"type": "array",
						"description": "List of ris quality deviations [RIS QualitÃ¤tsabweichungen]."
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"EventType": {
				"type": "string",
				"enum": ["ARRIVAL", "DEPARTURE"],
				"description": "Type of event. - ARRIVAL (Ankunft) - DEPARTURE (Abfahrt)"
			},
			"StopPlaceDifferingInJourney": {
				"description": "Differing stop-place [Haltestelle] in case a platform change [Gleiswechsel] within a station [Bahnhof], the stop-place belongs to, occurs and stop-place ids are changed (for instance a platform change in \\'Frankfurt Main Hbf\\' from platform \\'12\\' to \\'103\\' will result in a change of the stop-place id from \\'8000105\\' to \\'8098105\\' hence stopPlace.evaNumber = \\'8000105\\' and stopPlace.differingStopPlace.evaNumber = \\'8098105\\').",
				"properties": {
					"evaNumber": {
						"type": "string",
						"description": "Eva number of stop-place [Haltestelle]."
					},
					"name": {
						"type": "string",
						"description": "Name for stop-place [Haltestelle] in fixed language \\'DE\\'."
					}
				},
				"required": ["evaNumber", "name"],
				"type": "object",
				"additionalProperties": true
			},
			"StopPlaceInJourney": {
				"description": "Stop-place [Haltestelle] information for a stop-place a transport [Verkehrsart / Verkehrsmittel] departs / arrives at.",
				"properties": {
					"evaNumber": {
						"type": "string",
						"description": "Eva number of stop-place [Haltestelle]."
					},
					"name": {
						"type": "string",
						"description": "Name for stop-place [Haltestelle] in fixed language \\'DE\\'."
					},
					"differingStopPlace": {
						"$ref": "#/components/schemas/StopPlaceDifferingInJourney"
					}
				},
				"required": ["evaNumber", "name"],
				"type": "object",
				"additionalProperties": true
			},
			"ReplacementTransport": {
				"description": "Replacement transport [Ersatzverkehr] information, in case transport is a rail replacement transport [Schienenersatzverkehr (SEV)] or emergency bus service [Busnotverkehr]. Indicates that this transport is a replacement transport.",
				"properties": {
					"realType": {
						"type": "string",
						"description": "Real type of replacement transport that may differ from sales perspective (for instance a \\'REGIONAL_TRAIN\\' is usuallay replaced by a \\'BUS\\'). Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - SHUTTLE (Shuttle [Ruftaxi]) - FLIGHT (Flight [Flug]) - UNKNOWN (Unknown)"
					}
				},
				"required": ["realType"],
				"type": "object",
				"additionalProperties": true
			},
			"DirectionInfo": {
				"description": "Optional direction information [Richtungstext] for a particular transport that may differ from the destination [Zielhalt] on some parts of the journey. Take care that a text and / or a particular stop-place [Haltestelle] may be provided.",
				"properties": {
					"text": {
						"type": "string",
						"description": "Direction text [Richtungstext]. Must not necessarly be the name of a real stop-place [Haltestelle] (for instance \\'Richtung Automobilmesse\\'). For instance before the stop \\'fare\\' the transport has direction \\'fare\\', after \\'fare\\' has been reached maybe \\'central station\\' or \\'airport\\'."
					},
					"stopPlaces": {
						"items": {
							"$ref": "#/components/schemas/StopPlaceEmbedded"
						},
						"type": "array",
						"description": "Optional list of stop-places [Haltestellen] the direction text refers to. May be more than one stop-place for cases like for instance \\'Richtung Messe & Hauptbahnhof\\'."
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"TransportWithDirection": {
				"description": "Transport [Verkehrsart / Verkehrsmittel] information.",
				"properties": {
					"type": {
						"type": "string",
						"description": "Type of transport. Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - SHUTTLE (Shuttle [Ruftaxi]) - FLIGHT (Flight [Flug]) - UNKNOWN (Unknown)"
					},
					"category": {
						"type": "string",
						"description": "Category of the transport [externe Fahrtgattung]."
					},
					"journeyNumber": {
						"type": "number",
						"format": "double",
						"description": "Number of the transport [Fahrtnummer]."
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
					},
					"replacementTransport": {
						"$ref": "#/components/schemas/ReplacementTransport"
					},
					"direction": {
						"$ref": "#/components/schemas/DirectionInfo"
					},
					"administration": {
						"$ref": "#/components/schemas/Administration"
					}
				},
				"required": ["type", "category", "journeyNumber", "administration"],
				"type": "object",
				"additionalProperties": true
			},
			"CodeShare": {
				"description": "Codeshare [Code-Teilungen mit FlÃ¼gen verschiedener Fluggesellschaften] information for a particular journey event.",
				"properties": {
					"airlineCode": {
						"type": "string",
						"description": "Code of cooperating airline [IATA-Code der Fluggesellschaft]."
					},
					"flightnumber": {
						"type": "number",
						"format": "double",
						"description": "Flightnumber of cooperating airline journey [Flugnummer des Fluges der kooperierenden Fluggesellschaft]."
					}
				},
				"required": ["airlineCode", "flightnumber"],
				"type": "object",
				"additionalProperties": true
			},
			"JourneyEvent": {
				"description": "Journey event [Fahrtereignis].",
				"properties": {
					"type": {
						"$ref": "#/components/schemas/EventType"
					},
					"arrivalOrDepartureID": {
						"type": "string",
						"description": "ID of arrival or departure, depends on event type."
					},
					"stopPlace": {
						"$ref": "#/components/schemas/StopPlaceInJourney"
					},
					"transport": {
						"$ref": "#/components/schemas/TransportWithDirection"
					},
					"timeSchedule": {
						"type": "string",
						"description": "Scheduled time [Soll] of stop as fully-qualified-date (ISO-8601 with time-zone or offset)."
					},
					"timeType": {
						"type": "string",
						"description": "Specifies on which information \\'time\\' is based. - SCHEDULE (Time source is schedule [Plan / Soll]) - PREVIEW (Time source is preview / forecast [Vorschau / Disposition / Prognose]) - REAL (Time source is real [Echt = passiert (kann nur in die Vergangenheit gesetzt werden)"
					},
					"time": {
						"type": "string",
						"description": "Best known time information of stop as fully-qualified-date (ISO-8601 with time-zone or offset)."
					},
					"platformSchedule": {
						"type": "string",
						"description": "Scheduled platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at."
					},
					"platform": {
						"type": "string",
						"description": "Actual platform [Gleis, Bahnsteig, Plattform] the transport arrives / departs at, may be empty."
					},
					"cancelled": {
						"type": "boolean",
						"description": "Indicates whether event is cancelled [Haltausfall]. Note: In case an event is cancelled and additional, it\\'s considered as an cancelled additional stop [zurÃ¼ckgenommener Zusatzhalt]."
					},
					"additional": {
						"type": "boolean",
						"description": "Indicates whether event is additional, meaning not be part of the regular schedule [Zusatzhalt]. Note: In case an event is cancelled and additional, it\\'s considered as an cancelled additional stop [zurÃ¼ckgenommener Zusatzhalt]."
					},
					"noPassengerChange": {
						"type": "boolean",
						"description": "Indicates whether passengers are not allowed to enter / leave [kein Fahrgastwechsel]."
					},
					"onDemand": {
						"type": "boolean",
						"description": "Indicates whether arrival / departure is an on demand stop [Bedarfshalt]."
					},
					"messages": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"description": "List of message-ids [Nachrichten IDs] for this particular event. IDs are pointing to the global \\'messages\\' structure, containing disruption-communications [StÃ¶rungskommunikationen], attributes [Fahrtmerkmale], notes [Hinweise], ris cause codes [RIS KundengrÃ¼nde] and ris quality deviations [RIS QualitÃ¤tsabweichungen]."
					},
					"codeshares": {
						"items": {
							"$ref": "#/components/schemas/CodeShare"
						},
						"type": "array",
						"description": "List of codeshares [Code-Teilungen mit FlÃ¼gen verschiedener Fluggesellschaften] for this particular journey at this arrival / departure."
					},
					"reliefFor": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array",
						"description": "List of transports this journey at this particular event reliefs for [Entlastungszug]."
					},
					"reliefBy": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array",
						"description": "List of transports this journey at this particular event is reliefed by [Entlastungszug]."
					},
					"replacementFor": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array",
						"description": "List of transports this journey at this particular event replaces [Ersatzzug]."
					},
					"replacedBy": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array",
						"description": "List of transports this journey at this particular event is replaced by [Ersatzzug]."
					},
					"travelsWith": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationPortionWorkingRef"
						},
						"type": "array",
						"description": "List of journeys this journey at this particular event travels with [Vereinigung]."
					}
				},
				"required": [
					"type",
					"arrivalOrDepartureID",
					"stopPlace",
					"transport",
					"timeSchedule",
					"timeType",
					"time"
				],
				"type": "object",
				"additionalProperties": true
			},
			"TransportOriginRef": {
				"description": "Transport [Verkehrsart / Verkehrsmittel] information for journey references with origin.",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"type": {
						"type": "string",
						"description": "Type of transport. Possible values are: - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - SHUTTLE (Shuttle [Ruftaxi]) - FLIGHT (Flight [Flug]) - UNKNOWN (Unknown)"
					},
					"category": {
						"type": "string",
						"description": "Category of the transport [externe Fahrtgattung]."
					},
					"journeyNumber": {
						"type": "number",
						"format": "double",
						"description": "Number of the transport [Fahrtnummer]."
					},
					"line": {
						"type": "string",
						"description": "Line of the transport [Linie]."
					},
					"label": {
						"type": "string",
						"description": "Marketing or product name of the transport, for instance \\'Sprinter\\' or \\'Schwarzwaldexpress\\' etc. [Marketing Name / Produkt Name]."
					},
					"origin": {
						"$ref": "#/components/schemas/StopPlaceEmbeddedWithCancel"
					},
					"differingOrigin": {
						"$ref": "#/components/schemas/StopPlaceEmbedded"
					}
				},
				"required": [
					"journeyID",
					"type",
					"category",
					"journeyNumber",
					"origin"
				],
				"type": "object",
				"additionalProperties": true
			},
			"JourneyEventBased": {
				"description": "Event based [Fahrtereignisbasiert] information for a particular journey [Fahrtverlauf].",
				"properties": {
					"journeyID": {
						"type": "string",
						"description": "ID of journey [FahrtID]."
					},
					"info": {
						"$ref": "#/components/schemas/JourneyInfo"
					},
					"messages": {
						"$ref": "#/components/schemas/Messages"
					},
					"events": {
						"items": {
							"$ref": "#/components/schemas/JourneyEvent"
						},
						"type": "array",
						"description": "List of events [Fahrtereignisse (Abfahrten und AnkÃ¼nfte)]."
					},
					"eventsCancelled": {
						"items": {
							"$ref": "#/components/schemas/JourneyEvent"
						},
						"type": "array",
						"description": "List of cancelled events [ausgefallene Fahrtereignisse (Abfahrten und AnkÃ¼nfte)]. Only filled in case separation of cancelled events has been requested."
					},
					"continuationFor": {
						"items": {
							"$ref": "#/components/schemas/TransportOriginRef"
						},
						"type": "array",
						"description": "Continuation by predecessor journey, if available [Durchbindung am Start]."
					},
					"continuationBy": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array",
						"description": "Continuation by successor journey, if available [Durchbindung am Ziel]."
					}
				},
				"required": ["journeyID", "info"],
				"type": "object",
				"additionalProperties": true
			},
			"HafasCoordinates": {
				"properties": {
					"lat": {
						"type": "number",
						"format": "double"
					},
					"lng": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["lat", "lng"],
				"type": "object",
				"additionalProperties": true
			},
			"HafasStation": {
				"properties": {
					"name": {
						"type": "string"
					},
					"evaNumber": {
						"type": "string"
					},
					"ril100": {
						"type": "string"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/ParsedProduct"
						},
						"type": "array"
					},
					"coordinates": {
						"$ref": "#/components/schemas/HafasCoordinates"
					}
				},
				"required": ["name", "evaNumber", "coordinates"],
				"type": "object",
				"additionalProperties": true
			},
			"ParsedPolyline": {
				"properties": {
					"points": {
						"items": {
							"items": {
								"type": "number",
								"format": "double"
							},
							"type": "array"
						},
						"type": "array"
					},
					"delta": {
						"type": "boolean"
					},
					"locations": {
						"items": {
							"$ref": "#/components/schemas/HafasStation"
						},
						"type": "array"
					}
				},
				"required": ["points", "delta", "locations"],
				"type": "object",
				"additionalProperties": true
			},
			"ProdCtx": {
				"properties": {
					"name": {
						"type": "string"
					},
					"num": {
						"type": "string"
					},
					"matchId": {
						"type": "string"
					},
					"catOut": {
						"type": "string"
					},
					"catOutS": {
						"type": "string"
					},
					"catOutL": {
						"type": "string"
					},
					"catIn": {
						"type": "string"
					},
					"catCode": {
						"type": "string"
					},
					"admin": {
						"type": "string"
					},
					"lineId": {
						"type": "string"
					},
					"line": {
						"type": "string"
					},
					"cls": {
						"type": "number",
						"format": "double"
					},
					"icoX": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["name", "cls", "icoX"],
				"type": "object",
				"additionalProperties": true
			},
			"ProdL": {
				"properties": {
					"name": {
						"type": "string"
					},
					"number": {
						"type": "string"
					},
					"icoX": {
						"type": "number",
						"format": "double"
					},
					"cls": {
						"type": "number",
						"format": "double"
					},
					"oprX": {
						"type": "number",
						"format": "double"
					},
					"prodCtx": {
						"$ref": "#/components/schemas/ProdCtx"
					},
					"addName": {
						"type": "string"
					},
					"nameS": {
						"type": "string"
					},
					"matchId": {
						"type": "string"
					}
				},
				"required": ["name", "icoX", "cls"],
				"type": "object",
				"additionalProperties": true
			},
			"TrnCmpSX": {
				"properties": {
					"tcocX": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"tcM": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"TxtC": {
				"properties": {
					"r": {
						"type": "number",
						"format": "double"
					},
					"g": {
						"type": "number",
						"format": "double"
					},
					"b": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["r", "g", "b"],
				"type": "object",
				"additionalProperties": true
			},
			"MsgL": {
				"properties": {
					"type": {
						"type": "string"
					},
					"remX": {
						"type": "number",
						"format": "double"
					},
					"txtC": {
						"$ref": "#/components/schemas/TxtC"
					},
					"prio": {
						"type": "number",
						"format": "double"
					},
					"fIdx": {
						"type": "number",
						"format": "double"
					},
					"tIdx": {
						"type": "number",
						"format": "double"
					},
					"tagL": {
						"items": {
							"type": "string"
						},
						"type": "array"
					}
				},
				"required": ["type", "remX", "txtC", "prio", "fIdx", "tIdx", "tagL"],
				"type": "object",
				"additionalProperties": true
			},
			"CommonDeparture": {
				"properties": {
					"locX": {
						"type": "number",
						"format": "double"
					},
					"idx": {
						"type": "number",
						"format": "double"
					},
					"dCncl": {
						"type": "boolean"
					},
					"dProdX": {
						"type": "number",
						"format": "double"
					},
					"dInS": {
						"type": "boolean"
					},
					"dInR": {
						"type": "boolean"
					},
					"dTimeS": {
						"type": "string"
					},
					"dTimeR": {
						"type": "string"
					},
					"dPlatfS": {
						"type": "string"
					},
					"dPlatfR": {
						"type": "string"
					},
					"dProgType": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"dTZOffset": {
						"type": "number",
						"format": "double"
					},
					"dTrnCmpSX": {
						"$ref": "#/components/schemas/TrnCmpSX"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					}
				},
				"required": ["locX", "dInS", "dInR", "dTimeS"],
				"type": "object",
				"additionalProperties": true
			},
			"CommonArrival": {
				"properties": {
					"locX": {
						"type": "number",
						"format": "double"
					},
					"idx": {
						"type": "number",
						"format": "double"
					},
					"aCncl": {
						"type": "boolean"
					},
					"aProdX": {
						"type": "number",
						"format": "double"
					},
					"aOutR": {
						"type": "boolean"
					},
					"aTimeS": {
						"type": "string"
					},
					"aTimeR": {
						"type": "string"
					},
					"aPlatfS": {
						"type": "string"
					},
					"aPlatfR": {
						"type": "string"
					},
					"aProgType": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"aTZOffset": {
						"type": "number",
						"format": "double"
					},
					"aTrnCmpSX": {
						"$ref": "#/components/schemas/TrnCmpSX"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					}
				},
				"required": ["locX", "aOutR", "aTimeS"],
				"type": "object",
				"additionalProperties": true
			},
			"CommonStop": {
				"properties": {
					"locX": {
						"type": "number",
						"format": "double"
					},
					"idx": {
						"type": "number",
						"format": "double"
					},
					"aCncl": {
						"type": "boolean"
					},
					"aProdX": {
						"type": "number",
						"format": "double"
					},
					"aOutR": {
						"type": "boolean"
					},
					"aTimeS": {
						"type": "string"
					},
					"aTimeR": {
						"type": "string"
					},
					"aPlatfS": {
						"type": "string"
					},
					"aPlatfR": {
						"type": "string"
					},
					"aProgType": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"aTZOffset": {
						"type": "number",
						"format": "double"
					},
					"aTrnCmpSX": {
						"$ref": "#/components/schemas/TrnCmpSX"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					},
					"dCncl": {
						"type": "boolean"
					},
					"dProdX": {
						"type": "number",
						"format": "double"
					},
					"dInS": {
						"type": "boolean"
					},
					"dInR": {
						"type": "boolean"
					},
					"dTimeS": {
						"type": "string"
					},
					"dTimeR": {
						"type": "string"
					},
					"dPlatfS": {
						"type": "string"
					},
					"dPlatfR": {
						"type": "string"
					},
					"dProgType": {
						"type": "string"
					},
					"dTZOffset": {
						"type": "number",
						"format": "double"
					},
					"dTrnCmpSX": {
						"$ref": "#/components/schemas/TrnCmpSX"
					},
					"isAdd": {
						"type": "boolean"
					}
				},
				"required": ["locX", "aOutR", "aTimeS", "dInS", "dInR", "dTimeS"],
				"type": "object",
				"additionalProperties": true
			},
			"JnyL": {
				"properties": {
					"jid": {
						"type": "string"
					},
					"prodX": {
						"type": "number",
						"format": "double"
					},
					"dirTxt": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"isRchbl": {
						"type": "boolean"
					},
					"isCncl": {
						"type": "boolean"
					},
					"isPartCncl": {
						"type": "boolean"
					},
					"subscr": {
						"type": "string"
					},
					"stopL": {
						"items": {
							"$ref": "#/components/schemas/CommonStop"
						},
						"type": "array"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					}
				},
				"required": [
					"jid",
					"prodX",
					"dirTxt",
					"status",
					"isRchbl",
					"subscr",
					"stopL"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Freq": {
				"properties": {
					"minC": {
						"type": "number",
						"format": "double"
					},
					"maxC": {
						"type": "number",
						"format": "double"
					},
					"numC": {
						"type": "number",
						"format": "double"
					},
					"jnyL": {
						"items": {
							"$ref": "#/components/schemas/JnyL"
						},
						"type": "array"
					}
				},
				"required": ["minC", "maxC", "numC", "jnyL"],
				"type": "object",
				"additionalProperties": true
			},
			"Jny": {
				"properties": {
					"jid": {
						"type": "string"
					},
					"prodX": {
						"type": "number",
						"format": "double"
					},
					"dirTxt": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"isRchbl": {
						"type": "boolean"
					},
					"isCncl": {
						"type": "boolean"
					},
					"isPartCncl": {
						"type": "boolean"
					},
					"subscr": {
						"type": "string"
					},
					"stopL": {
						"items": {
							"$ref": "#/components/schemas/CommonStop"
						},
						"type": "array"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					},
					"chgDurR": {
						"type": "number",
						"format": "double"
					},
					"ctxRecon": {
						"type": "string"
					},
					"dTrnCmpSXmsgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					},
					"dTrnCmpSX": {
						"$ref": "#/components/schemas/TrnCmpSX"
					},
					"freq": {
						"$ref": "#/components/schemas/Freq"
					}
				},
				"required": [
					"jid",
					"prodX",
					"dirTxt",
					"status",
					"isRchbl",
					"subscr",
					"ctxRecon",
					"dTrnCmpSXmsgL",
					"freq"
				],
				"type": "object",
				"additionalProperties": true
			},
			"SecLJNY": {
				"properties": {
					"type": {
						"type": "string",
						"enum": ["JNY"],
						"nullable": false
					},
					"icoX": {
						"type": "number",
						"format": "double"
					},
					"dep": {
						"$ref": "#/components/schemas/CommonDeparture"
					},
					"arr": {
						"$ref": "#/components/schemas/CommonArrival"
					},
					"jny": {
						"$ref": "#/components/schemas/Jny"
					},
					"parJnyL": {
						"items": {
							"$ref": "#/components/schemas/Jny"
						},
						"type": "array"
					},
					"resState": {
						"type": "string",
						"enum": ["N", "B", "S"]
					},
					"resRecommendation": {
						"type": "string"
					}
				},
				"required": [
					"type",
					"icoX",
					"dep",
					"arr",
					"jny",
					"resState",
					"resRecommendation"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Gis": {
				"properties": {
					"dist": {
						"type": "number",
						"format": "double"
					},
					"durS": {
						"type": "string"
					},
					"dirGeo": {
						"type": "number",
						"format": "double"
					},
					"ctx": {
						"type": "string"
					},
					"gisPrvr": {
						"type": "string"
					},
					"getDescr": {
						"type": "boolean"
					},
					"getPoly": {
						"type": "boolean"
					}
				},
				"required": [
					"dist",
					"durS",
					"dirGeo",
					"ctx",
					"gisPrvr",
					"getDescr",
					"getPoly"
				],
				"type": "object",
				"additionalProperties": true
			},
			"SecLWALK": {
				"properties": {
					"type": {
						"type": "string",
						"enum": ["WALK", "TRSF"]
					},
					"icoX": {
						"type": "number",
						"format": "double"
					},
					"dep": {
						"$ref": "#/components/schemas/CommonDeparture"
					},
					"arr": {
						"$ref": "#/components/schemas/CommonArrival"
					},
					"gis": {
						"$ref": "#/components/schemas/Gis"
					}
				},
				"required": ["type", "icoX", "dep", "arr", "gis"],
				"type": "object",
				"additionalProperties": true
			},
			"SecLKISS": {
				"properties": {
					"type": {
						"type": "string",
						"enum": ["KISS"],
						"nullable": false
					}
				},
				"required": ["type"],
				"type": "object",
				"additionalProperties": true
			},
			"SecL": {
				"oneOf": [
					{
						"$ref": "#/components/schemas/SecLJNY"
					},
					{
						"$ref": "#/components/schemas/SecLWALK"
					},
					{
						"$ref": "#/components/schemas/SecLKISS"
					}
				],
				"discriminator": {
					"propertyName": "type",
					"mapping": {
						"JNY": "#/components/schemas/SecLJNY",
						"WALK": "#/components/schemas/SecLWALK",
						"TRSF": "#/components/schemas/SecLWALK",
						"KISS": "#/components/schemas/SecLKISS"
					}
				}
			},
			"RouteTarifFare": {
				"properties": {
					"price": {
						"type": "integer",
						"format": "int32"
					},
					"moreExpensiveAvailable": {
						"type": "boolean"
					},
					"bookable": {
						"type": "boolean"
					},
					"upsell": {
						"type": "boolean",
						"description": "???"
					},
					"targetContext": {
						"type": "string",
						"description": "???"
					}
				},
				"required": [
					"price",
					"moreExpensiveAvailable",
					"bookable",
					"upsell",
					"targetContext"
				],
				"type": "object",
				"additionalProperties": true
			},
			"RouteTarifFareSet": {
				"properties": {
					"fares": {
						"items": {
							"$ref": "#/components/schemas/RouteTarifFare"
						},
						"type": "array"
					}
				},
				"required": ["fares"],
				"type": "object",
				"additionalProperties": true
			},
			"RouteJourney": {
				"properties": {
					"cancelled": {
						"type": "boolean"
					},
					"changeDuration": {
						"type": "number",
						"format": "double"
					},
					"duration": {
						"type": "number",
						"format": "double"
					},
					"finalDestination": {
						"type": "string"
					},
					"jid": {
						"type": "string"
					},
					"journeyId": {
						"type": "string"
					},
					"product": {
						"$ref": "#/components/schemas/ProdL"
					},
					"raw": {
						"$ref": "#/components/schemas/SecL"
					},
					"segmentDestination": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"segmentStart": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"stops": {
						"items": {
							"$ref": "#/components/schemas/RouteStop"
						},
						"type": "array"
					},
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"auslastung": {
						"$ref": "#/components/schemas/RouteAuslastung"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"tarifSet": {
						"items": {
							"$ref": "#/components/schemas/RouteTarifFareSet"
						},
						"type": "array"
					}
				},
				"required": [
					"finalDestination",
					"segmentDestination",
					"segmentStart",
					"stops",
					"train"
				],
				"type": "object",
				"additionalProperties": true
			},
			"ParsedSearchOnTripResponse": {
				"properties": {
					"cancelled": {
						"type": "boolean"
					},
					"changeDuration": {
						"type": "number",
						"format": "double"
					},
					"duration": {
						"type": "number",
						"format": "double"
					},
					"finalDestination": {
						"type": "string"
					},
					"jid": {
						"type": "string"
					},
					"journeyId": {
						"type": "string"
					},
					"product": {
						"$ref": "#/components/schemas/ProdL"
					},
					"raw": {
						"$ref": "#/components/schemas/SecL"
					},
					"segmentDestination": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"segmentStart": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"stops": {
						"items": {
							"$ref": "#/components/schemas/RouteStop"
						},
						"type": "array"
					},
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"auslastung": {
						"$ref": "#/components/schemas/RouteAuslastung"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"tarifSet": {
						"items": {
							"$ref": "#/components/schemas/RouteTarifFareSet"
						},
						"type": "array"
					},
					"type": {
						"type": "string",
						"enum": ["JNY"],
						"nullable": false
					},
					"arrival": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"departure": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"wings": {
						"items": {
							"$ref": "#/components/schemas/RouteJourney"
						},
						"type": "array"
					},
					"himMessages": {
						"items": {
							"$ref": "#/components/schemas/HimIrisMessage"
						},
						"type": "array"
					},
					"currentStop": {
						"$ref": "#/components/schemas/RouteStop"
					},
					"polyline": {
						"$ref": "#/components/schemas/ParsedPolyline"
					},
					"replacementFor": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array"
					},
					"replacedBy": {
						"items": {
							"$ref": "#/components/schemas/TransportDestinationRef"
						},
						"type": "array"
					}
				},
				"required": [
					"finalDestination",
					"segmentDestination",
					"segmentStart",
					"stops",
					"train",
					"type",
					"arrival",
					"departure"
				],
				"type": "object",
				"additionalProperties": true
			},
			"EvaNumber": {
				"type": "string",
				"example": "8000105",
				"description": "Usually 7 digits, leading zeros can be omitted"
			},
			"LageplanResponse": {
				"properties": {
					"lageplan": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"TransportType": {
				"type": "string",
				"enum": [
					"HIGH_SPEED_TRAIN",
					"INTERCITY_TRAIN",
					"INTER_REGIONAL_TRAIN",
					"REGIONAL_TRAIN",
					"CITY_TRAIN",
					"SUBWAY",
					"TRAM",
					"BUS",
					"FERRY",
					"FLIGHT",
					"CAR",
					"TAXI",
					"SHUTTLE",
					"BIKE",
					"SCOOTER",
					"WALK",
					"UNKNOWN"
				],
				"description": "Type of transport. - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - FLIGHT (Flight [Flugzeug]) - CAR (Car [Auto]) - TAXI (Taxi) - SHUTTLE (Shuttle [Ruftaxi]) - BIKE ((E-)Bike [Fahrrad]) - SCOOTER ((E-)Scooter [Roller]) - WALK (Walk ([Laufen]) - UNKNOWN (Unknown)"
			},
			"Coordinate2D": {
				"description": "2D coordinate within geo reference system.",
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double",
						"description": "Latitude position in reference system."
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"description": "Longitude position in reference system."
					}
				},
				"required": ["latitude", "longitude"],
				"type": "object",
				"additionalProperties": true
			},
			"GroupedStopPlace": {
				"properties": {
					"evaNumber": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"availableTransports": {
						"items": {
							"$ref": "#/components/schemas/TransportType"
						},
						"type": "array"
					},
					"position": {
						"$ref": "#/components/schemas/Coordinate2D"
					},
					"ifopt": {
						"type": "string"
					},
					"ril100": {
						"type": "string"
					},
					"alternativeRil100": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"stationId": {
						"type": "string"
					},
					"uic": {
						"type": "string"
					}
				},
				"required": ["evaNumber", "name", "availableTransports"],
				"type": "object",
				"additionalProperties": true
			},
			"Record_string.RouteAuslastung-or-null_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/RouteAuslastung"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"TrainOccupancyList": {
				"$ref": "#/components/schemas/Record_string.RouteAuslastung-or-null_"
			},
			"StopInfo": {
				"properties": {
					"isPlan": {
						"type": "boolean",
						"description": "Quelle dieser info ist die Planwagenreihung"
					},
					"scheduledPlatform": {
						"type": "string",
						"description": "Scheduled Platform"
					},
					"platform": {
						"type": "string",
						"description": "Best known platform, might be identical to scheduledPlatform"
					},
					"scheduledTime": {
						"type": "string",
						"format": "date-time",
						"description": "scheduled time for this stop"
					},
					"time": {
						"type": "string",
						"format": "date-time",
						"description": "best known time for this stop, might be identical to scheduledTime"
					},
					"delay": {
						"type": "integer",
						"format": "int32"
					},
					"reihung": {
						"type": "boolean"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"cancelled": {
						"type": "boolean"
					},
					"isRealTime": {
						"type": "boolean"
					},
					"noPassengerChange": {
						"type": "boolean"
					},
					"wingIds": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "MediumIds of journeys that are wings of this journey at this stop."
					},
					"hidden": {
						"type": "boolean"
					},
					"transition": {
						"type": "string",
						"description": "Durchbindung? Zug wechselt die Kategorie, theoretisch aber sogar Zugnummer?"
					}
				},
				"required": ["scheduledTime", "time"],
				"type": "object",
				"additionalProperties": true
			},
			"IrisMessages": {
				"properties": {
					"qos": {
						"items": {
							"$ref": "#/components/schemas/IrisMessage"
						},
						"type": "array"
					},
					"delay": {
						"items": {
							"$ref": "#/components/schemas/IrisMessage"
						},
						"type": "array"
					},
					"him": {
						"items": {
							"$ref": "#/components/schemas/HimIrisMessage"
						},
						"type": "array"
					}
				},
				"required": ["qos", "delay", "him"],
				"type": "object",
				"additionalProperties": true
			},
			"SubstituteRef": {
				"properties": {
					"number": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"description": "This is actually category"
					}
				},
				"required": ["number", "name", "type"],
				"type": "object",
				"additionalProperties": true
			},
			"Stop": {
				"properties": {
					"additional": {
						"type": "boolean"
					},
					"cancelled": {
						"type": "boolean"
					},
					"showVia": {
						"type": "boolean"
					},
					"name": {
						"type": "string"
					}
				},
				"required": ["name"],
				"type": "object",
				"additionalProperties": true
			},
			"TrainInfo": {
				"properties": {
					"name": {
						"type": "string"
					},
					"line": {
						"type": "string"
					},
					"number": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"description": "This is actually category"
					},
					"operator": {
						"$ref": "#/components/schemas/OpL"
					},
					"admin": {
						"type": "string"
					},
					"transportType": {
						"type": "string"
					}
				},
				"required": ["name", "transportType", "type", "number"],
				"type": "object",
				"additionalProperties": true
			},
			"Abfahrt": {
				"properties": {
					"journeyId": {
						"type": "string"
					},
					"initialDeparture": {
						"type": "string",
						"format": "date-time"
					},
					"initialStopPlace": {
						"type": "string",
						"description": "evaNumber of first stopPlace in route"
					},
					"arrival": {
						"$ref": "#/components/schemas/StopInfo"
					},
					"currentStopPlace": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"departure": {
						"$ref": "#/components/schemas/StopInfo"
					},
					"destination": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"additional": {
						"type": "boolean",
						"description": "Is this stop unplanned and additional?"
					},
					"cancelled": {
						"type": "boolean",
						"description": "Is this stop cancelled for this journey?"
					},
					"mediumId": {
						"type": "string"
					},
					"messages": {
						"$ref": "#/components/schemas/IrisMessages"
					},
					"platform": {
						"type": "string"
					},
					"productClass": {
						"type": "string",
						"description": "Most likely D | N | S | F"
					},
					"rawId": {
						"type": "string"
					},
					"ref": {
						"$ref": "#/components/schemas/SubstituteRef"
					},
					"route": {
						"items": {
							"$ref": "#/components/schemas/Stop"
						},
						"type": "array"
					},
					"scheduledDestination": {
						"type": "string"
					},
					"scheduledPlatform": {
						"type": "string"
					},
					"substitute": {
						"type": "boolean"
					},
					"substituted": {
						"type": "boolean"
					},
					"train": {
						"$ref": "#/components/schemas/TrainInfo"
					},
					"previousTrain": {
						"$ref": "#/components/schemas/TrainInfo",
						"description": "Sofern Durchbindung passiert ist steht hier der vorherige Transport drin. Is fachlich ultra hacky."
					}
				},
				"required": [
					"initialDeparture",
					"initialStopPlace",
					"currentStopPlace",
					"destination",
					"id",
					"mediumId",
					"messages",
					"platform",
					"productClass",
					"rawId",
					"route",
					"scheduledDestination",
					"scheduledPlatform",
					"train"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Record_string.Abfahrt_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/Abfahrt"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"Wings": {
				"$ref": "#/components/schemas/Record_string.Abfahrt_",
				"description": "Map of \"mediumId\" to Abfahrt."
			},
			"AbfahrtenResult": {
				"properties": {
					"departures": {
						"items": {
							"$ref": "#/components/schemas/Abfahrt"
						},
						"type": "array",
						"description": "Journeys that have not yet departed (or arrived if they end here)"
					},
					"lookbehind": {
						"items": {
							"$ref": "#/components/schemas/Abfahrt"
						},
						"type": "array",
						"description": "Journeys that have already departed (or arrived if they end here)"
					},
					"wings": {
						"$ref": "#/components/schemas/Wings"
					},
					"strike": {
						"type": "number",
						"format": "double",
						"description": "amount of departures/arrivals that are affected by a strike [Streik]"
					},
					"stopPlaces": {
						"items": {
							"type": "string"
						},
						"type": "array",
						"description": "Eva Numbers queried for this resultset"
					}
				},
				"required": ["departures", "lookbehind", "stopPlaces"],
				"type": "object",
				"additionalProperties": true
			},
			"RouteJourneySegmentTrain": {
				"properties": {
					"cancelled": {
						"type": "boolean"
					},
					"changeDuration": {
						"type": "number",
						"format": "double"
					},
					"duration": {
						"type": "number",
						"format": "double"
					},
					"finalDestination": {
						"type": "string"
					},
					"jid": {
						"type": "string"
					},
					"journeyId": {
						"type": "string"
					},
					"product": {
						"$ref": "#/components/schemas/ProdL"
					},
					"raw": {
						"$ref": "#/components/schemas/SecL"
					},
					"segmentDestination": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"segmentStart": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"stops": {
						"items": {
							"$ref": "#/components/schemas/RouteStop"
						},
						"type": "array"
					},
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"auslastung": {
						"$ref": "#/components/schemas/RouteAuslastung"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"tarifSet": {
						"items": {
							"$ref": "#/components/schemas/RouteTarifFareSet"
						},
						"type": "array"
					},
					"type": {
						"type": "string",
						"enum": ["JNY"],
						"nullable": false
					},
					"arrival": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"departure": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"wings": {
						"items": {
							"$ref": "#/components/schemas/RouteJourney"
						},
						"type": "array"
					}
				},
				"required": [
					"finalDestination",
					"segmentDestination",
					"segmentStart",
					"stops",
					"train",
					"type",
					"arrival",
					"departure"
				],
				"type": "object",
				"additionalProperties": true
			},
			"WalkStopInfo": {
				"properties": {
					"time": {
						"type": "string",
						"format": "date-time"
					},
					"delay": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["time"],
				"type": "object",
				"additionalProperties": true
			},
			"RouteJourneySegmentWalk": {
				"properties": {
					"type": {
						"type": "string",
						"enum": ["WALK"],
						"nullable": false
					},
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"arrival": {
						"$ref": "#/components/schemas/WalkStopInfo"
					},
					"departure": {
						"$ref": "#/components/schemas/WalkStopInfo"
					},
					"duration": {
						"type": "integer",
						"format": "int32"
					},
					"segmentStart": {
						"$ref": "#/components/schemas/HafasStation"
					},
					"segmentDestination": {
						"$ref": "#/components/schemas/HafasStation"
					}
				},
				"required": [
					"type",
					"train",
					"arrival",
					"departure",
					"duration",
					"segmentStart",
					"segmentDestination"
				],
				"type": "object",
				"additionalProperties": true
			},
			"RouteJourneySegment": {
				"oneOf": [
					{
						"$ref": "#/components/schemas/RouteJourneySegmentTrain"
					},
					{
						"$ref": "#/components/schemas/RouteJourneySegmentWalk"
					}
				],
				"discriminator": {
					"propertyName": "type",
					"mapping": {
						"JNY": "#/components/schemas/RouteJourneySegmentTrain",
						"WALK": "#/components/schemas/RouteJourneySegmentWalk"
					}
				}
			},
			"SingleRoute": {
				"properties": {
					"arrival": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"departure": {
						"$ref": "#/components/schemas/CommonStopInfo"
					},
					"isRideable": {
						"type": "boolean"
					},
					"checksum": {
						"type": "string"
					},
					"cid": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"duration": {
						"type": "integer",
						"format": "int32"
					},
					"changes": {
						"type": "integer",
						"format": "int32"
					},
					"segments": {
						"items": {
							"$ref": "#/components/schemas/RouteJourneySegment"
						},
						"type": "array"
					},
					"segmentTypes": {
						"items": {
							"type": "string"
						},
						"type": "array"
					},
					"tarifSet": {
						"items": {
							"$ref": "#/components/schemas/RouteTarifFareSet"
						},
						"type": "array"
					}
				},
				"required": [
					"arrival",
					"departure",
					"isRideable",
					"checksum",
					"cid",
					"date",
					"duration",
					"changes",
					"segments",
					"segmentTypes"
				],
				"type": "object",
				"additionalProperties": true
			},
			"RoutingResult": {
				"properties": {
					"routes": {
						"items": {
							"$ref": "#/components/schemas/SingleRoute"
						},
						"type": "array"
					},
					"context": {
						"properties": {
							"later": {
								"type": "string"
							},
							"earlier": {
								"type": "string"
							}
						},
						"required": ["later", "earlier"],
						"type": "object"
					}
				},
				"required": ["routes", "context"],
				"type": "object",
				"additionalProperties": true
			},
			"StopPlaceLocation": {
				"properties": {
					"type": {
						"type": "string",
						"enum": ["stopPlace"],
						"nullable": false
					},
					"evaNumber": {
						"$ref": "#/components/schemas/EvaNumber"
					}
				},
				"required": ["type", "evaNumber"],
				"type": "object",
				"additionalProperties": true
			},
			"CoordinateLocation": {
				"properties": {
					"latitude": {
						"type": "number",
						"format": "double",
						"description": "Latitude position in reference system."
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"description": "Longitude position in reference system."
					},
					"type": {
						"type": "string",
						"enum": ["coordinate"],
						"nullable": false
					}
				},
				"required": ["latitude", "longitude", "type"],
				"type": "object",
				"additionalProperties": true
			},
			"RoutingLocationInput": {
				"oneOf": [
					{
						"$ref": "#/components/schemas/StopPlaceLocation"
					},
					{
						"$ref": "#/components/schemas/CoordinateLocation"
					}
				],
				"discriminator": {
					"propertyName": "type",
					"mapping": {
						"stopPlace": "#/components/schemas/StopPlaceLocation",
						"coordinate": "#/components/schemas/CoordinateLocation"
					}
				}
			},
			"TripSearchViaV4": {
				"properties": {
					"evaNumber": {
						"type": "string"
					},
					"minChangeTime": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["evaNumber"],
				"type": "object",
				"additionalProperties": true
			},
			"JnyCl": {
				"enum": [1, 2],
				"type": "number"
			},
			"TravelerType": {
				"enum": ["E", "K", "B"],
				"type": "string"
			},
			"LoyalityCard": {
				"enum": [
					"BC25First",
					"BC25Second",
					"BC50First",
					"BC50Second",
					"SHCard",
					"ATVorteilscard",
					"CHGeneral",
					"CHHalfWithRailplus",
					"CHHalfWithoutRailplus",
					"NLWithRailplus",
					"NLWithoutRailplus",
					"BC100First",
					"BC100Second"
				],
				"type": "string"
			},
			"TripSearchTraveler": {
				"properties": {
					"type": {
						"$ref": "#/components/schemas/TravelerType"
					},
					"loyalityCard": {
						"$ref": "#/components/schemas/LoyalityCard",
						"description": "Testing Comment"
					}
				},
				"required": ["type"],
				"type": "object",
				"additionalProperties": true
			},
			"TripSearchTarifRequest": {
				"properties": {
					"class": {
						"$ref": "#/components/schemas/JnyCl"
					},
					"traveler": {
						"items": {
							"$ref": "#/components/schemas/TripSearchTraveler"
						},
						"type": "array"
					}
				},
				"required": ["class", "traveler"],
				"type": "object",
				"additionalProperties": true
			},
			"TripSearchOptionsV4": {
				"properties": {
					"economic": {
						"type": "boolean",
						"description": "true = not only fastest route"
					},
					"getIV": {
						"type": "boolean",
						"description": "Unknown flag"
					},
					"getPasslist": {
						"type": "boolean",
						"description": "Get Stop inbetween"
					},
					"getPolyline": {
						"type": "boolean",
						"description": "Polylines - unknown format"
					},
					"numF": {
						"type": "number",
						"format": "double"
					},
					"ctxScr": {
						"type": "string"
					},
					"ushrp": {
						"type": "boolean",
						"description": "Is a station nearby enough for routing?"
					},
					"time": {
						"type": "string",
						"format": "date-time"
					},
					"transferTime": {
						"type": "number",
						"format": "double"
					},
					"maxChanges": {
						"type": "number",
						"format": "double"
					},
					"searchForDeparture": {
						"type": "boolean"
					},
					"onlyRegional": {
						"type": "boolean"
					},
					"onlyNetzcard": {
						"type": "boolean"
					},
					"tarif": {
						"$ref": "#/components/schemas/TripSearchTarifRequest"
					},
					"start": {
						"$ref": "#/components/schemas/RoutingLocationInput"
					},
					"destination": {
						"$ref": "#/components/schemas/RoutingLocationInput"
					},
					"via": {
						"items": {
							"$ref": "#/components/schemas/TripSearchViaV4"
						},
						"type": "array"
					}
				},
				"required": ["start", "destination"],
				"type": "object",
				"additionalProperties": true
			},
			"InputTripSearchOptionsV4": {
				"$ref": "#/components/schemas/TripSearchOptionsV4"
			},
			"AllowedHafasProfile": {
				"enum": [
					"db",
					"oebb",
					"bvg",
					"hvv",
					"rmv",
					"sncb",
					"avv",
					"nahsh",
					"insa",
					"anachb",
					"vao",
					"sbb",
					"dbnetz",
					"pkp",
					"dbregio",
					"smartrbl",
					"vbn"
				],
				"type": "string"
			},
			"TripSearchViaV3": {
				"properties": {
					"evaId": {
						"type": "string"
					},
					"minChangeTime": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["evaId"],
				"type": "object",
				"additionalProperties": true
			},
			"TripSearchOptionsV3": {
				"properties": {
					"economic": {
						"type": "boolean",
						"description": "true = not only fastest route"
					},
					"getIV": {
						"type": "boolean",
						"description": "Unknown flag"
					},
					"getPasslist": {
						"type": "boolean",
						"description": "Get Stop inbetween"
					},
					"getPolyline": {
						"type": "boolean",
						"description": "Polylines - unknown format"
					},
					"numF": {
						"type": "number",
						"format": "double"
					},
					"ctxScr": {
						"type": "string"
					},
					"ushrp": {
						"type": "boolean",
						"description": "Is a station nearby enough for routing?"
					},
					"time": {
						"type": "string",
						"format": "date-time"
					},
					"transferTime": {
						"type": "number",
						"format": "double"
					},
					"maxChanges": {
						"type": "number",
						"format": "double"
					},
					"searchForDeparture": {
						"type": "boolean"
					},
					"onlyRegional": {
						"type": "boolean"
					},
					"onlyNetzcard": {
						"type": "boolean"
					},
					"tarif": {
						"$ref": "#/components/schemas/TripSearchTarifRequest"
					},
					"start": {
						"$ref": "#/components/schemas/EvaNumber"
					},
					"destination": {
						"$ref": "#/components/schemas/EvaNumber"
					},
					"via": {
						"items": {
							"$ref": "#/components/schemas/TripSearchViaV3"
						},
						"type": "array"
					}
				},
				"required": ["start", "destination"],
				"type": "object",
				"additionalProperties": true
			},
			"InputTripSearchOptionsV3": {
				"$ref": "#/components/schemas/TripSearchOptionsV3"
			},
			"Record_EvaNumber.RouteAuslastung_": {
				"properties": {},
				"additionalProperties": {
					"$ref": "#/components/schemas/RouteAuslastung"
				},
				"type": "object",
				"description": "Construct a type with a set of properties K of type T"
			},
			"AdditionalJourneyInformation": {
				"properties": {
					"jid": {
						"type": "string"
					},
					"operatorName": {
						"type": "string"
					},
					"occupancy": {
						"$ref": "#/components/schemas/Record_EvaNumber.RouteAuslastung_"
					},
					"polyline": {
						"$ref": "#/components/schemas/ParsedPolyline"
					}
				},
				"required": ["occupancy"],
				"type": "object",
				"additionalProperties": true
			},
			"ArrivalStationBoardEntry": {
				"properties": {
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"cancelled": {
						"type": "boolean"
					},
					"finalDestination": {
						"type": "string"
					},
					"jid": {
						"type": "string"
					},
					"stops": {
						"items": {
							"$ref": "#/components/schemas/RouteStop"
						},
						"type": "array"
					},
					"currentStation": {
						"$ref": "#/components/schemas/HafasStation"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"arrival": {
						"$ref": "#/components/schemas/CommonStopInfo"
					}
				},
				"required": [
					"train",
					"finalDestination",
					"jid",
					"currentStation",
					"arrival"
				],
				"type": "object",
				"additionalProperties": true
			},
			"DepartureStationBoardEntry": {
				"properties": {
					"train": {
						"$ref": "#/components/schemas/ParsedProduct"
					},
					"cancelled": {
						"type": "boolean"
					},
					"finalDestination": {
						"type": "string"
					},
					"jid": {
						"type": "string"
					},
					"stops": {
						"items": {
							"$ref": "#/components/schemas/RouteStop"
						},
						"type": "array"
					},
					"currentStation": {
						"$ref": "#/components/schemas/HafasStation"
					},
					"messages": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"departure": {
						"$ref": "#/components/schemas/CommonStopInfo"
					}
				},
				"required": [
					"train",
					"finalDestination",
					"jid",
					"currentStation",
					"departure"
				],
				"type": "object",
				"additionalProperties": true
			},
			"StationBoardEntry": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ArrivalStationBoardEntry"
					},
					{
						"$ref": "#/components/schemas/DepartureStationBoardEntry"
					}
				]
			},
			"CInfo": {
				"properties": {
					"code": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"msg": {
						"type": "string"
					}
				},
				"required": ["code", "url", "msg"],
				"type": "object",
				"additionalProperties": true
			},
			"ArrStbStop": {
				"$ref": "#/components/schemas/CommonArrival"
			},
			"ArrivalJny": {
				"properties": {
					"jid": {
						"type": "string"
					},
					"prodX": {
						"type": "number",
						"format": "double"
					},
					"dirTxt": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"isRchbl": {
						"type": "boolean"
					},
					"isCncl": {
						"type": "boolean"
					},
					"isPartCncl": {
						"type": "boolean"
					},
					"subscr": {
						"type": "string"
					},
					"stopL": {
						"items": {
							"$ref": "#/components/schemas/CommonStop"
						},
						"type": "array"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					},
					"date": {
						"type": "string"
					},
					"stbStop": {
						"$ref": "#/components/schemas/ArrStbStop"
					}
				},
				"required": [
					"jid",
					"prodX",
					"dirTxt",
					"status",
					"isRchbl",
					"subscr",
					"date",
					"stbStop"
				],
				"type": "object",
				"additionalProperties": true
			},
			"Crd": {
				"properties": {
					"x": {
						"type": "number",
						"format": "double"
					},
					"y": {
						"type": "number",
						"format": "double"
					},
					"z": {
						"type": "number",
						"format": "double"
					},
					"layerX": {
						"type": "number",
						"format": "double"
					},
					"crdSysX": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["x", "y"],
				"type": "object",
				"additionalProperties": true
			},
			"Required_OptionalLocL_": {
				"properties": {
					"lid": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"icoX": {
						"type": "number",
						"format": "double"
					},
					"extId": {
						"type": "string"
					},
					"state": {
						"type": "string"
					},
					"crd": {
						"$ref": "#/components/schemas/Crd"
					},
					"pCls": {
						"type": "number",
						"format": "double"
					},
					"pRefL": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array",
						"description": "Reference to prodL"
					}
				},
				"required": [
					"lid",
					"type",
					"name",
					"icoX",
					"extId",
					"state",
					"crd",
					"pCls",
					"pRefL"
				],
				"type": "object",
				"description": "Make all properties in T required"
			},
			"LocL": {
				"$ref": "#/components/schemas/Required_OptionalLocL_"
			},
			"PpLocRefL": {
				"properties": {
					"ppIdx": {
						"type": "number",
						"format": "double"
					},
					"locX": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["ppIdx", "locX"],
				"type": "object",
				"additionalProperties": true
			},
			"PolyL": {
				"properties": {
					"delta": {
						"type": "boolean"
					},
					"dim": {
						"type": "number",
						"format": "double"
					},
					"crdEncYX": {
						"type": "string"
					},
					"crdEncS": {
						"type": "string"
					},
					"crdEncF": {
						"type": "string"
					},
					"ppLocRefL": {
						"items": {
							"$ref": "#/components/schemas/PpLocRefL"
						},
						"type": "array"
					}
				},
				"required": [
					"delta",
					"dim",
					"crdEncYX",
					"crdEncS",
					"crdEncF",
					"ppLocRefL"
				],
				"type": "object",
				"additionalProperties": true
			},
			"LayerL": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"index": {
						"type": "number",
						"format": "double"
					},
					"annoCnt": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["id", "name", "index", "annoCnt"],
				"type": "object",
				"additionalProperties": true
			},
			"CrdSysL": {
				"properties": {
					"id": {
						"type": "string"
					},
					"index": {
						"type": "number",
						"format": "double"
					},
					"type": {
						"type": "string"
					}
				},
				"required": ["id", "index", "type"],
				"type": "object",
				"additionalProperties": true
			},
			"IcoL": {
				"properties": {
					"res": {
						"type": "string"
					},
					"txt": {
						"type": "string"
					}
				},
				"required": ["res"],
				"type": "object",
				"additionalProperties": true
			},
			"TcocL": {
				"properties": {
					"c": {
						"type": "string"
					},
					"r": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["c"],
				"type": "object",
				"additionalProperties": true
			},
			"HimMsgEdgeL": {
				"properties": {
					"icoCrd": {
						"properties": {
							"y": {
								"type": "string"
							},
							"x": {
								"type": "string"
							}
						},
						"required": ["y", "x"],
						"type": "object"
					}
				},
				"required": ["icoCrd"],
				"type": "object",
				"additionalProperties": true
			},
			"Common": {
				"properties": {
					"locL": {
						"items": {
							"$ref": "#/components/schemas/LocL"
						},
						"type": "array"
					},
					"prodL": {
						"items": {
							"$ref": "#/components/schemas/ProdL"
						},
						"type": "array"
					},
					"polyL": {
						"items": {
							"$ref": "#/components/schemas/PolyL"
						},
						"type": "array"
					},
					"layerL": {
						"items": {
							"$ref": "#/components/schemas/LayerL"
						},
						"type": "array"
					},
					"crdSysL": {
						"items": {
							"$ref": "#/components/schemas/CrdSysL"
						},
						"type": "array"
					},
					"opL": {
						"items": {
							"$ref": "#/components/schemas/OpL"
						},
						"type": "array"
					},
					"remL": {
						"items": {
							"$ref": "#/components/schemas/RemL"
						},
						"type": "array"
					},
					"icoL": {
						"items": {
							"$ref": "#/components/schemas/IcoL"
						},
						"type": "array"
					},
					"tcocL": {
						"items": {
							"$ref": "#/components/schemas/TcocL"
						},
						"type": "array"
					},
					"himMsgEdgeL": {
						"items": {
							"$ref": "#/components/schemas/HimMsgEdgeL"
						},
						"type": "array"
					}
				},
				"required": [
					"locL",
					"prodL",
					"polyL",
					"layerL",
					"crdSysL",
					"opL",
					"remL",
					"icoL"
				],
				"type": "object",
				"additionalProperties": true
			},
			"ArrivalStationBoardResponse": {
				"properties": {
					"common": {
						"$ref": "#/components/schemas/Common"
					},
					"fpB": {
						"type": "string"
					},
					"fpE": {
						"type": "string"
					},
					"planrtTS": {
						"type": "string"
					},
					"sD": {
						"type": "string"
					},
					"sT": {
						"type": "string"
					},
					"locRefL": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"type": {
						"type": "string",
						"enum": ["ARR"],
						"nullable": false
					},
					"jnyL": {
						"items": {
							"$ref": "#/components/schemas/ArrivalJny"
						},
						"type": "array"
					}
				},
				"required": [
					"common",
					"fpB",
					"fpE",
					"planrtTS",
					"sD",
					"sT",
					"locRefL",
					"type",
					"jnyL"
				],
				"type": "object",
				"additionalProperties": true
			},
			"DepStbStop": {
				"$ref": "#/components/schemas/CommonDeparture"
			},
			"DepartureJny": {
				"properties": {
					"jid": {
						"type": "string"
					},
					"prodX": {
						"type": "number",
						"format": "double"
					},
					"dirTxt": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"isRchbl": {
						"type": "boolean"
					},
					"isCncl": {
						"type": "boolean"
					},
					"isPartCncl": {
						"type": "boolean"
					},
					"subscr": {
						"type": "string"
					},
					"stopL": {
						"items": {
							"$ref": "#/components/schemas/CommonStop"
						},
						"type": "array"
					},
					"msgL": {
						"items": {
							"$ref": "#/components/schemas/MsgL"
						},
						"type": "array"
					},
					"date": {
						"type": "string"
					},
					"stbStop": {
						"$ref": "#/components/schemas/DepStbStop"
					}
				},
				"required": [
					"jid",
					"prodX",
					"dirTxt",
					"status",
					"isRchbl",
					"subscr",
					"date",
					"stbStop"
				],
				"type": "object",
				"additionalProperties": true
			},
			"DepartureStationBoardResponse": {
				"properties": {
					"common": {
						"$ref": "#/components/schemas/Common"
					},
					"fpB": {
						"type": "string"
					},
					"fpE": {
						"type": "string"
					},
					"planrtTS": {
						"type": "string"
					},
					"sD": {
						"type": "string"
					},
					"sT": {
						"type": "string"
					},
					"locRefL": {
						"items": {
							"type": "number",
							"format": "double"
						},
						"type": "array"
					},
					"type": {
						"type": "string",
						"enum": ["DEP"],
						"nullable": false
					},
					"jnyL": {
						"items": {
							"$ref": "#/components/schemas/DepartureJny"
						},
						"type": "array"
					}
				},
				"required": [
					"common",
					"fpB",
					"fpE",
					"planrtTS",
					"sD",
					"sT",
					"locRefL",
					"type",
					"jnyL"
				],
				"type": "object",
				"additionalProperties": true
			},
			"StationBoardResponse": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/ArrivalStationBoardResponse"
					},
					{
						"$ref": "#/components/schemas/DepartureStationBoardResponse"
					}
				]
			},
			"SvcResL_StationBoardResponse_": {
				"properties": {
					"meth": {
						"type": "string"
					},
					"err": {
						"type": "string"
					},
					"res": {
						"$ref": "#/components/schemas/StationBoardResponse"
					}
				},
				"required": ["meth", "err", "res"],
				"type": "object",
				"additionalProperties": true
			},
			"HafasResponse_StationBoardResponse_": {
				"properties": {
					"ver": {
						"type": "string"
					},
					"lang": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"err": {
						"type": "string"
					},
					"cInfo": {
						"$ref": "#/components/schemas/CInfo"
					},
					"svcResL": {
						"items": {
							"$ref": "#/components/schemas/SvcResL_StationBoardResponse_"
						},
						"type": "array"
					}
				},
				"required": ["ver", "lang", "id", "err", "cInfo", "svcResL"],
				"type": "object",
				"additionalProperties": true
			},
			"LocMatchResponse": {
				"properties": {
					"common": {
						"$ref": "#/components/schemas/Common"
					},
					"match": {
						"properties": {
							"locL": {
								"items": {
									"properties": {
										"wt": {
											"type": "number",
											"format": "double"
										},
										"pRefL": {
											"items": {
												"type": "number",
												"format": "double"
											},
											"type": "array"
										},
										"pCls": {
											"type": "number",
											"format": "double"
										},
										"meta": {
											"type": "boolean"
										},
										"crd": {
											"properties": {
												"z": {
													"type": "number",
													"format": "double"
												},
												"crdSysX": {
													"type": "number",
													"format": "double"
												},
												"layerX": {
													"type": "number",
													"format": "double"
												},
												"y": {
													"type": "number",
													"format": "double"
												},
												"x": {
													"type": "number",
													"format": "double"
												}
											},
											"required": ["crdSysX", "layerX", "y", "x"],
											"type": "object"
										},
										"state": {
											"type": "string"
										},
										"extId": {
											"type": "string"
										},
										"icoX": {
											"type": "number",
											"format": "double"
										},
										"name": {
											"type": "string"
										},
										"type": {
											"type": "string"
										},
										"lid": {
											"type": "string"
										}
									},
									"required": [
										"wt",
										"pRefL",
										"pCls",
										"meta",
										"crd",
										"state",
										"extId",
										"icoX",
										"name",
										"type",
										"lid"
									],
									"type": "object"
								},
								"type": "array"
							},
							"state": {
								"type": "string"
							},
							"field": {
								"type": "string"
							}
						},
						"required": ["locL", "state", "field"],
						"type": "object"
					}
				},
				"required": ["common", "match"],
				"type": "object",
				"additionalProperties": true
			},
			"SvcResL_LocMatchResponse_": {
				"properties": {
					"meth": {
						"type": "string"
					},
					"err": {
						"type": "string"
					},
					"res": {
						"$ref": "#/components/schemas/LocMatchResponse"
					}
				},
				"required": ["meth", "err", "res"],
				"type": "object",
				"additionalProperties": true
			},
			"HafasResponse_LocMatchResponse_": {
				"properties": {
					"ver": {
						"type": "string"
					},
					"lang": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"err": {
						"type": "string"
					},
					"cInfo": {
						"$ref": "#/components/schemas/CInfo"
					},
					"svcResL": {
						"items": {
							"$ref": "#/components/schemas/SvcResL_LocMatchResponse_"
						},
						"type": "array"
					}
				},
				"required": ["ver", "lang", "id", "err", "cInfo", "svcResL"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequencePosition": {
				"properties": {
					"startPercent": {
						"type": "number",
						"format": "double"
					},
					"endPercent": {
						"type": "number",
						"format": "double"
					}
				},
				"required": ["startPercent", "endPercent"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceSector": {
				"properties": {
					"name": {
						"type": "string"
					},
					"position": {
						"$ref": "#/components/schemas/CoachSequencePosition"
					}
				},
				"required": ["name", "position"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceStop": {
				"properties": {
					"stopPlace": {
						"$ref": "#/components/schemas/MinimalStopPlace"
					},
					"sectors": {
						"items": {
							"$ref": "#/components/schemas/CoachSequenceSector"
						},
						"type": "array"
					}
				},
				"required": ["stopPlace", "sectors"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceProduct": {
				"properties": {
					"number": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"line": {
						"type": "string"
					}
				},
				"required": ["number", "type"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceCoachFeatures": {
				"properties": {
					"dining": {
						"type": "boolean"
					},
					"wheelchair": {
						"type": "boolean"
					},
					"bike": {
						"type": "boolean"
					},
					"disabled": {
						"type": "boolean"
					},
					"quiet": {
						"type": "boolean"
					},
					"info": {
						"type": "boolean"
					},
					"family": {
						"type": "boolean"
					},
					"toddler": {
						"type": "boolean"
					},
					"wifi": {
						"type": "boolean"
					},
					"comfort": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceCoachSeats": {
				"properties": {
					"comfort": {
						"type": "string"
					},
					"disabled": {
						"type": "string"
					},
					"family": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceCoach": {
				"properties": {
					"class": {
						"type": "number",
						"enum": [0, 1, 2, 3, 4],
						"description": "0: Unknown; 1: erste; 2: zweite; 3: 1&2; 4: Not for passengers"
					},
					"vehicleCategory": {
						"type": "string"
					},
					"closed": {
						"type": "boolean"
					},
					"uic": {
						"type": "string",
						"description": "only filled for real time information"
					},
					"type": {
						"type": "string"
					},
					"identificationNumber": {
						"type": "string",
						"description": "Wagenordnungsnummer"
					},
					"position": {
						"$ref": "#/components/schemas/CoachSequencePosition"
					},
					"features": {
						"$ref": "#/components/schemas/CoachSequenceCoachFeatures"
					},
					"seats": {
						"$ref": "#/components/schemas/CoachSequenceCoachSeats"
					},
					"occupancy": {
						"$ref": "#/components/schemas/AuslastungsValue"
					}
				},
				"required": ["class", "vehicleCategory", "position", "features"],
				"type": "object",
				"additionalProperties": true
			},
			"AvailableBR": {
				"type": "string",
				"enum": [
					"401",
					"402",
					"403",
					"406",
					"407",
					"408",
					"411",
					"412",
					"415",
					"4010",
					"4110",
					"410.1"
				]
			},
			"AvailableIdentifierOnly": {
				"type": "string",
				"enum": [
					"401.LDV",
					"401.9",
					"411.S1",
					"411.S2",
					"412.7",
					"412.13",
					"403.R",
					"403.S1",
					"403.S2",
					"406.R",
					"IC2.TRE",
					"MET",
					"TGV"
				]
			},
			"AvailableIdentifier": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/AvailableIdentifierOnly"
					},
					{
						"$ref": "#/components/schemas/AvailableBR"
					}
				]
			},
			"CoachSequenceBaureihe": {
				"properties": {
					"name": {
						"type": "string"
					},
					"baureihe": {
						"$ref": "#/components/schemas/AvailableBR"
					},
					"identifier": {
						"$ref": "#/components/schemas/AvailableIdentifier"
					}
				},
				"required": ["name", "identifier"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceGroup": {
				"properties": {
					"coaches": {
						"items": {
							"$ref": "#/components/schemas/CoachSequenceCoach"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"originName": {
						"type": "string"
					},
					"destinationName": {
						"type": "string"
					},
					"trainName": {
						"type": "string"
					},
					"number": {
						"type": "string"
					},
					"baureihe": {
						"$ref": "#/components/schemas/CoachSequenceBaureihe"
					}
				},
				"required": [
					"coaches",
					"name",
					"originName",
					"destinationName",
					"number"
				],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequence": {
				"properties": {
					"groups": {
						"items": {
							"$ref": "#/components/schemas/CoachSequenceGroup"
						},
						"type": "array"
					}
				},
				"required": ["groups"],
				"type": "object",
				"additionalProperties": true
			},
			"CoachSequenceInformation": {
				"properties": {
					"source": {
						"type": "string",
						"enum": [
							"OEBB",
							"DB-noncd",
							"DB-plan",
							"DB-bahnde",
							"SBB",
							"DB-risTransports"
						]
					},
					"stop": {
						"$ref": "#/components/schemas/CoachSequenceStop"
					},
					"product": {
						"$ref": "#/components/schemas/CoachSequenceProduct"
					},
					"sequence": {
						"$ref": "#/components/schemas/CoachSequence"
					},
					"multipleTrainNumbers": {
						"type": "boolean"
					},
					"multipleDestinations": {
						"type": "boolean"
					},
					"isRealtime": {
						"type": "boolean"
					},
					"direction": {
						"type": "boolean",
						"description": "true = in direction of first sector in array\nfalse = in direction of last sector in array\nundefined = we do not know"
					},
					"journeyId": {
						"type": "string"
					}
				},
				"required": ["source", "stop", "product", "sequence", "isRealtime"],
				"type": "object",
				"additionalProperties": true
			},
			"TrainRunStop": {
				"properties": {
					"name": {
						"type": "string"
					},
					"evaNumber": {
						"type": "string"
					},
					"ril100": {
						"type": "string"
					},
					"arrivalTime": {
						"type": "string",
						"format": "date-time"
					},
					"departureTime": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": ["name", "evaNumber"],
				"type": "object",
				"additionalProperties": true
			},
			"Pick_TrainRun.Exclude_keyofTrainRun.primaryVehicleGroupName__": {
				"properties": {
					"product": {
						"$ref": "#/components/schemas/CoachSequenceProduct"
					},
					"origin": {
						"$ref": "#/components/schemas/TrainRunStop"
					},
					"destination": {
						"$ref": "#/components/schemas/TrainRunStop"
					},
					"via": {
						"items": {
							"$ref": "#/components/schemas/TrainRunStop"
						},
						"type": "array"
					},
					"dates": {
						"items": {
							"type": "string",
							"format": "date-time"
						},
						"type": "array"
					}
				},
				"required": ["product", "origin", "destination", "via", "dates"],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"TrainRunWithBR": {
				"properties": {
					"product": {
						"$ref": "#/components/schemas/CoachSequenceProduct"
					},
					"origin": {
						"$ref": "#/components/schemas/TrainRunStop"
					},
					"destination": {
						"$ref": "#/components/schemas/TrainRunStop"
					},
					"via": {
						"items": {
							"$ref": "#/components/schemas/TrainRunStop"
						},
						"type": "array"
					},
					"dates": {
						"items": {
							"type": "string",
							"format": "date-time"
						},
						"type": "array"
					},
					"br": {
						"$ref": "#/components/schemas/CoachSequenceBaureihe"
					}
				},
				"required": ["product", "origin", "destination", "via", "dates"],
				"type": "object",
				"additionalProperties": true
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Bahn.expert",
		"version": "0.1.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "marudor"
		}
	},
	"paths": {
		"/iris/v2/abfahrten/{evaNumber}": {
			"get": {
				"operationId": "Abfahrten v2",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AbfahrtenResult"
								}
							}
						}
					}
				},
				"tags": ["IRIS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "evaNumber",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/EvaNumber"
						}
					},
					{
						"description": "minutes",
						"in": "query",
						"name": "lookahead",
						"required": false,
						"schema": {
							"default": 150,
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"description": "minutes",
						"in": "query",
						"name": "lookbehind",
						"required": false,
						"schema": {
							"default": 0,
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"in": "query",
						"name": "startTime",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/v3/additionalInformation/{trainName}/{journeyId}": {
			"get": {
				"operationId": "Additional Information",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AdditionalJourneyInformation"
								}
							}
						}
					},
					"404": {
						"description": ""
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "trainName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "RIS JourneyId",
						"in": "path",
						"name": "journeyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "evaNumberAlongRoute",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "initialDepartureDate",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					}
				]
			}
		},
		"/coachSequence/v4/wagen/{trainNumber}": {
			"get": {
				"operationId": "CoachSequence v4",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CoachSequenceInformation"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{},
										{
											"type": "string"
										}
									]
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"anyOf": [
										{},
										{
											"type": "string"
										}
									]
								}
							}
						}
					}
				},
				"description": "Returns the coachSequence at a specific stop for a specific train.\nWorks for OEBB stops and DB stops.\n\nReturns plannedSequence if no real time information is available",
				"tags": ["CoachSequence"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "trainNumber",
						"required": true,
						"schema": {
							"format": "int32",
							"type": "integer"
						},
						"examples": {
							"Example 1": {
								"value": "23"
							},
							"Example 2": {
								"value": "42023"
							}
						}
					},
					{
						"description": "Departure at the stop you want the coachSequence for",
						"in": "query",
						"name": "departure",
						"required": true,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"description": "needed for OEBB coachSequence, usually 7 digits",
						"in": "query",
						"name": "evaNumber",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/EvaNumber"
						}
					},
					{
						"description": "needed for OEBB coachSequence",
						"in": "query",
						"name": "initialDeparture",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"description": "needed for new DB coachSequence",
						"in": "query",
						"name": "category",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "needed for SBB coachSequence",
						"in": "query",
						"name": "lastArrivalEva",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/hafas/v3/departures/{evaNumber}": {
			"get": {
				"operationId": "Departures",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/StationBoardEntry"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "evaNumber",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				]
			}
		},
		"/hafas/v3/departures/{evaNumber}/raw": {
			"get": {
				"operationId": "DeparturesRaw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HafasResponse_StationBoardResponse_"
								}
							}
						}
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "evaNumber",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				]
			}
		},
		"/hafas/v2/details/{trainName}": {
			"get": {
				"operationId": "Details v2",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ParsedSearchOnTripResponse"
								}
							}
						}
					},
					"404": {
						"description": ""
					}
				},
				"description": "This combines several HAFAS endpoint as well as IRIS data to get the best possible information for a specific journey.",
				"tags": ["HAFAS"],
				"deprecated": true,
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "trainName",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "ICE 23"
					},
					{
						"in": "query",
						"name": "stop",
						"required": false,
						"schema": {
							"type": "string"
						},
						"deprecated": true
					},
					{
						"description": "EvaNumber of a stop of your train, might not work for profiles other than DB",
						"in": "query",
						"name": "station",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/EvaNumber"
						}
					},
					{
						"description": "This is the initialDepartureDate of your desired journey",
						"in": "query",
						"name": "date",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				]
			}
		},
		"/hafas/v1/detailsRedirect/{tripId}": {
			"get": {
				"operationId": "DetailsRedirect",
				"responses": {
					"302": {
						"description": ""
					},
					"500": {
						"description": ""
					}
				},
				"description": "This redirects to the current Details Page with a provided HAFAS TripId / JourneyId / JID",
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "tripId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/journeys/v1/find/number/{trainNumber}": {
			"get": {
				"operationId": "FindNumber",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ParsedJourneyMatchResponse"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"tags": ["Journeys"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "trainNumber",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "initialDepartureDate",
						"required": false,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "initialEvaNumber",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "filtered",
						"required": false,
						"schema": {
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "limit",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/hafas/v3/stopPlaceSearch/{query}": {
			"get": {
				"operationId": "HafasStopPlaceSearch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/HafasStation"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				]
			}
		},
		"/hafas/v3/irisCompatibleAbfahrten/{evaId}": {
			"get": {
				"operationId": "IrisCompatibleAbfahrten",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AbfahrtenResult"
								}
							}
						}
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "evaId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				]
			}
		},
		"/stopPlace/v1/lageplan/{stopPlaceName}/{evaNumber}": {
			"get": {
				"operationId": "Lageplan",
				"responses": {
					"200": {
						"description": "URL to DB, HVV or NAHSH Lageplan",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LageplanResponse"
								}
							}
						}
					}
				},
				"tags": ["StopPlace"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "stopPlaceName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "evaNumber",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/EvaNumber"
						}
					}
				]
			}
		},
		"/hafas/v3/occupancy/{start}/{destination}/{trainNumber}/{plannedDepartureTime}/{stopEva}": {
			"get": {
				"operationId": "Occupancy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RouteAuslastung"
								}
							}
						}
					},
					"404": {
						"description": ""
					}
				},
				"description": "Provides occupancy for specified stop based on DB Vertrieb HAFAS (DB Navigator).\nBased on a rough estimate, handles first and second class.",
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"description": "Name of the start stop",
						"in": "path",
						"name": "start",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "Frankfurt (Main) Hbf"
					},
					{
						"description": "Name of the destination stop",
						"in": "path",
						"name": "destination",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "Basel SBB"
					},
					{
						"description": "Planned Departure time of the stop you want the occpuancy for",
						"in": "path",
						"name": "plannedDepartureTime",
						"required": true,
						"schema": {
							"format": "date-time",
							"type": "string"
						},
						"example": "2022-03-24T11:50:00.000Z"
					},
					{
						"in": "path",
						"name": "trainNumber",
						"required": true,
						"schema": {
							"type": "string"
						},
						"example": "23"
					},
					{
						"in": "path",
						"name": "stopEva",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/coachSequence/v4/runsPerDate/{date}": {
			"get": {
				"operationId": "Runs per Date v4",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TrainRunWithBR"
									},
									"type": "array"
								}
							}
						}
					},
					"401": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				},
				"description": "Returns all journeys that run on a specific date. Only works for DB Fernverkehr",
				"tags": ["CoachSequence"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "date",
						"required": true,
						"schema": {
							"format": "date-time",
							"type": "string"
						}
					},
					{
						"description": "Used to filter for specific Baureihen",
						"in": "query",
						"name": "baureihen",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AvailableBR"
							}
						}
					},
					{
						"description": "Used to filter for specific identifier (identifier are defined by me, not DB)",
						"in": "query",
						"name": "identifier",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/AvailableIdentifier"
							}
						}
					},
					{
						"description": "Used to filter for runs that stop at specific stopPlaces in the specifed order",
						"in": "query",
						"name": "stopsAt",
						"required": false,
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/components/schemas/EvaNumber"
							}
						},
						"example": "[8000105, 8000191]"
					}
				]
			}
		},
		"/stopPlace/v1/{evaNumberOrRl100}": {
			"get": {
				"operationId": "StopPlaceByEvaOrRl100",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GroupedStopPlace"
								}
							}
						}
					},
					"404": {
						"description": ""
					}
				},
				"tags": ["StopPlace"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "evaNumberOrRl100",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/stopPlace/v1/search/{searchTerm}": {
			"get": {
				"operationId": "StopPlaceSearch",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GroupedStopPlace"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "This might fall back to use HAFAS",
				"tags": ["StopPlace"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "searchTerm",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "max",
						"required": false,
						"schema": {
							"format": "int32",
							"type": "integer"
						}
					},
					{
						"description": "Only returns stopPlaces iris-tts can handle (/abfahrten)",
						"in": "query",
						"name": "filterForIris",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					},
					{
						"in": "query",
						"name": "groupedBySales",
						"required": false,
						"schema": {
							"default": false,
							"type": "boolean"
						}
					}
				]
			}
		},
		"/hafas/v3/stopPlaceSearch/{query}/raw": {
			"get": {
				"operationId": "StopPlaceSearchRaw",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/HafasResponse_LocMatchResponse_"
								}
							}
						}
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "query",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				]
			}
		},
		"/stopPlace/v1/{evaNumber}/trainOccupancy": {
			"get": {
				"operationId": "TrainOccupancy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TrainOccupancyList"
								}
							}
						}
					},
					"404": {
						"description": ""
					}
				},
				"description": "Currently only for VRR. <br>\nSource: https://github.com/derf/eva-to-efa-gw<br>\nThanks derf.",
				"tags": ["StopPlace"],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "evaNumber",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/EvaNumber"
						}
					}
				]
			}
		},
		"/hafas/v3/tripSearch": {
			"post": {
				"operationId": "TripSearch v3",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RoutingResult"
								}
							}
						}
					}
				},
				"description": "Used to find trips [Verbindungssuche]\nA lot of the request options are raw HAFAS and not documented.",
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputTripSearchOptionsV3"
							}
						}
					}
				}
			}
		},
		"/hafas/v4/tripSearch": {
			"post": {
				"operationId": "TripSearch v4",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RoutingResult"
								}
							}
						}
					}
				},
				"tags": ["HAFAS"],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "profile",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/AllowedHafasProfile"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InputTripSearchOptionsV4"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "https://bahn.expert/api"
		}
	],
	"tags": [
		{
			"name": "HAFAS",
			"description": "All Operation use a HAFAS backend. By default it will be the HAFAS backend by DB Vertrieb (DB Navigator). Different backends can be selected by providing the query paramter profile."
		},
		{
			"name": "Journeys"
		},
		{
			"name": "IRIS"
		},
		{
			"name": "CoachSequence"
		},
		{
			"name": "StopPlace"
		}
	]
}
