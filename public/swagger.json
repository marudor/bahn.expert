{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "OpL": {
        "properties": {
          "name": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "name",
          "icoX"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonProductInfo": {
        "properties": {
          "name": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "This is actually category"
          },
          "operator": {
            "$ref": "#/components/schemas/OpL"
          },
          "admin": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedProduct": {
        "$ref": "#/components/schemas/CommonProductInfo"
      },
      "HafasCoordinates": {
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "lat",
          "lng"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HafasStation": {
        "properties": {
          "products": {
            "items": {
              "$ref": "#/components/schemas/ParsedProduct"
            },
            "type": "array"
          },
          "coordinates": {
            "$ref": "#/components/schemas/HafasCoordinates"
          },
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "coordinates",
          "title",
          "id"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "PubChL": {
        "properties": {
          "name": {
            "type": "string"
          },
          "fDate": {
            "type": "string"
          },
          "fTime": {
            "type": "string"
          },
          "tDate": {
            "type": "string"
          },
          "tTime": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "fDate",
          "fTime",
          "tDate",
          "tTime"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedHimMessage": {
        "properties": {
          "hid": {
            "type": "string"
          },
          "act": {
            "type": "boolean"
          },
          "head": {
            "type": "string"
          },
          "lead": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "prio": {
            "type": "number",
            "format": "double"
          },
          "fLocX": {
            "type": "number",
            "format": "double"
          },
          "tLocX": {
            "type": "number",
            "format": "double"
          },
          "prod": {
            "type": "number",
            "format": "double"
          },
          "affProdRefL": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array"
          },
          "IModDate": {
            "type": "string"
          },
          "IModTime": {
            "type": "string"
          },
          "sDate": {
            "type": "string"
          },
          "sTime": {
            "type": "string"
          },
          "eDate": {
            "type": "string"
          },
          "eTime": {
            "type": "string"
          },
          "comp": {
            "type": "string"
          },
          "cat": {
            "type": "number",
            "format": "double"
          },
          "pubChL": {
            "items": {
              "$ref": "#/components/schemas/PubChL"
            },
            "type": "array"
          },
          "edgeRefL": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array"
          },
          "affectedProducts": {
            "items": {
              "$ref": "#/components/schemas/ParsedProduct"
            },
            "type": "array"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "fromStopPlace": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "toStopPlace": {
            "$ref": "#/components/schemas/HafasStation"
          }
        },
        "required": [
          "hid",
          "act",
          "head",
          "lead",
          "text",
          "icoX",
          "prio",
          "fLocX",
          "tLocX",
          "prod",
          "affProdRefL",
          "IModDate",
          "IModTime",
          "sDate",
          "sTime",
          "eDate",
          "eTime",
          "comp",
          "cat",
          "pubChL",
          "edgeRefL",
          "affectedProducts",
          "startTime",
          "endTime"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedHimSearchResponse": {
        "properties": {
          "messages": {
            "items": {
              "$ref": "#/components/schemas/ParsedHimMessage"
            },
            "type": "array"
          }
        },
        "required": [
          "messages"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "AllowedHafasProfile": {
        "enum": [
          "db",
          "oebb",
          "bvg",
          "hvv",
          "rmv",
          "sncb",
          "avv",
          "nahsh",
          "insa",
          "anachb",
          "vao",
          "sbb",
          "dbnetz",
          "pkp",
          "dbregio",
          "smartrbl",
          "vbn"
        ],
        "type": "string"
      },
      "Crd": {
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "layerX": {
            "type": "number",
            "format": "double"
          },
          "crdSysX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "x",
          "y"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OptionalLocL": {
        "properties": {
          "lid": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "extId": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "crd": {
            "$ref": "#/components/schemas/Crd"
          },
          "pCls": {
            "type": "number",
            "format": "double"
          },
          "pRefL": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array",
            "description": "Reference to prodL"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "HimFilterMode": {
        "type": "string",
        "enum": [
          "BIT",
          "EXC",
          "INC",
          "UNDEF"
        ]
      },
      "HimFilterType": {
        "type": "string",
        "enum": [
          "ADMIN",
          "CAT",
          "CH",
          "COMP",
          "DEPT",
          "EID",
          "HIMCAT",
          "HIMID",
          "LINE",
          "OPR",
          "PID",
          "PROD",
          "REG",
          "TRAIN"
        ]
      },
      "HimFilter": {
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/HimFilterMode"
          },
          "type": {
            "$ref": "#/components/schemas/HimFilterType"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "mode",
          "type",
          "value"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HimSearchRequestOptions": {
        "properties": {
          "comp": {
            "type": "string"
          },
          "dailyB": {
            "type": "string"
          },
          "dailyE": {
            "type": "string"
          },
          "dateB": {
            "type": "string"
          },
          "dateE": {
            "type": "string"
          },
          "dept": {
            "type": "string"
          },
          "dirLoc": {
            "$ref": "#/components/schemas/OptionalLocL"
          },
          "himFltrL": {
            "items": {
              "$ref": "#/components/schemas/HimFilter"
            },
            "type": "array"
          },
          "maxNum": {
            "type": "number",
            "format": "double"
          },
          "onlyHimId": {
            "type": "boolean"
          },
          "onlyToday": {
            "type": "boolean"
          },
          "stLoc": {
            "$ref": "#/components/schemas/OptionalLocL"
          },
          "timeB": {
            "type": "string"
          },
          "timeE": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "RemL": {
        "properties": {
          "type": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "txtN": {
            "type": "string"
          },
          "txtS": {
            "type": "string"
          },
          "prio": {
            "type": "number",
            "format": "double"
          },
          "sIdx": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "type",
          "code",
          "icoX",
          "txtN"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "StopInfo": {
        "properties": {
          "scheduledPlatform": {
            "type": "string",
            "description": "Scheduled Platform"
          },
          "platform": {
            "type": "string",
            "description": "Best known platform, might be identical to scheduledPlatform"
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled time for this stop"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "best known time for this stop, might be identical to scheduledTime"
          },
          "delay": {
            "type": "integer",
            "format": "int32"
          },
          "reihung": {
            "type": "boolean"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "cancelled": {
            "type": "boolean"
          },
          "wingIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "MediumIds of journeys that are wings of this journey at this stop."
          },
          "hidden": {
            "type": "boolean"
          }
        },
        "required": [
          "scheduledTime",
          "time"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Pick_GroupedStopPlace.name-or-evaNumber_": {
        "properties": {
          "name": {
            "type": "string"
          },
          "evaNumber": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "evaNumber"
        ],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "MinimalStopPlace": {
        "$ref": "#/components/schemas/Pick_GroupedStopPlace.name-or-evaNumber_"
      },
      "MessagePrio": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4"
        ],
        "description": "1: High; 2: Medium; 3: Low; 4: Done"
      },
      "IrisMessage": {
        "properties": {
          "text": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "superseded": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/MessagePrio"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "text"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "HimIrisMessage": {
        "properties": {
          "text": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "superseded": {
            "type": "boolean"
          },
          "priority": {
            "$ref": "#/components/schemas/MessagePrio"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "head": {
            "type": "string"
          },
          "stopPlace": {
            "$ref": "#/components/schemas/HafasStation"
          }
        },
        "required": [
          "text",
          "head"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Message": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/IrisMessage"
          },
          {
            "$ref": "#/components/schemas/HimIrisMessage"
          }
        ]
      },
      "Messages": {
        "properties": {
          "qos": {
            "items": {
              "$ref": "#/components/schemas/IrisMessage"
            },
            "type": "array"
          },
          "delay": {
            "items": {
              "$ref": "#/components/schemas/IrisMessage"
            },
            "type": "array"
          },
          "him": {
            "items": {
              "$ref": "#/components/schemas/HimIrisMessage"
            },
            "type": "array"
          }
        },
        "required": [
          "qos",
          "delay",
          "him"
        ],
        "type": "object",
        "additionalProperties": {
          "items": {
            "$ref": "#/components/schemas/Message"
          },
          "type": "array"
        }
      },
      "SubstituteRef": {
        "properties": {
          "trainNumber": {
            "type": "string"
          },
          "trainType": {
            "type": "string"
          },
          "train": {
            "type": "string"
          }
        },
        "required": [
          "trainNumber",
          "trainType",
          "train"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Stop": {
        "properties": {
          "additional": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          },
          "showVia": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrainInfo": {
        "properties": {
          "name": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "This is actually category"
          },
          "operator": {
            "$ref": "#/components/schemas/OpL"
          },
          "admin": {
            "type": "string"
          },
          "longDistance": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "type",
          "number"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Abfahrt": {
        "properties": {
          "initialDeparture": {
            "type": "string",
            "format": "date-time"
          },
          "initialStopPlace": {
            "type": "string",
            "description": "evaNumber of first stopPlace in route"
          },
          "arrival": {
            "$ref": "#/components/schemas/StopInfo"
          },
          "auslastung": {
            "type": "boolean"
          },
          "currentStopPlace": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "departure": {
            "$ref": "#/components/schemas/StopInfo"
          },
          "destination": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "additional": {
            "type": "boolean",
            "description": "Is this stop unplanned and additional?"
          },
          "cancelled": {
            "type": "boolean",
            "description": "Is this stop cancelled for this journey?"
          },
          "mediumId": {
            "type": "string"
          },
          "messages": {
            "$ref": "#/components/schemas/Messages"
          },
          "platform": {
            "type": "string"
          },
          "productClass": {
            "type": "string",
            "description": "Most likely D | N | S | F"
          },
          "rawId": {
            "type": "string"
          },
          "ref": {
            "$ref": "#/components/schemas/SubstituteRef"
          },
          "reihung": {
            "type": "boolean",
            "description": "Most likely has coach sequence"
          },
          "route": {
            "items": {
              "$ref": "#/components/schemas/Stop"
            },
            "type": "array"
          },
          "scheduledDestination": {
            "type": "string"
          },
          "scheduledPlatform": {
            "type": "string"
          },
          "substitute": {
            "type": "boolean"
          },
          "train": {
            "$ref": "#/components/schemas/TrainInfo"
          }
        },
        "required": [
          "initialDeparture",
          "initialStopPlace",
          "auslastung",
          "currentStopPlace",
          "destination",
          "id",
          "mediumId",
          "messages",
          "platform",
          "productClass",
          "rawId",
          "reihung",
          "route",
          "scheduledDestination",
          "scheduledPlatform",
          "train"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Wings": {
        "description": "Map of \"mediumId\" to Abfahrt.",
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Abfahrt"
        }
      },
      "AbfahrtenResult": {
        "properties": {
          "departures": {
            "items": {
              "$ref": "#/components/schemas/Abfahrt"
            },
            "type": "array",
            "description": "Journeys that have not yet departed (or arrived if they end here)"
          },
          "lookbehind": {
            "items": {
              "$ref": "#/components/schemas/Abfahrt"
            },
            "type": "array",
            "description": "Journeys that have already departed (or arrived if they end here)"
          },
          "wings": {
            "$ref": "#/components/schemas/Wings"
          },
          "strike": {
            "type": "number",
            "format": "double",
            "description": "amount of departures/arrivals that are affected by a strike [Streik]"
          }
        },
        "required": [
          "departures",
          "lookbehind"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JourneyFilterMode": {
        "type": "string",
        "enum": [
          "BIT",
          "EXC",
          "INC",
          "UNDEF"
        ]
      },
      "JourneyFilterType": {
        "type": "string",
        "enum": [
          "ADM",
          "ATTRF",
          "ATTRJ",
          "ATTRL",
          "BC",
          "CAT",
          "COUCH",
          "CTX_RECON",
          "GROUP",
          "INFOTEXTS",
          "JID",
          "LID",
          "LINE",
          "LINEID",
          "META",
          "NAME",
          "NUM",
          "OP",
          "PID",
          "PROD",
          "ROUTE",
          "SLEEP",
          "STATIONS",
          "UIC"
        ]
      },
      "JourneyFilter": {
        "properties": {
          "mode": {
            "$ref": "#/components/schemas/JourneyFilterMode"
          },
          "type": {
            "$ref": "#/components/schemas/JourneyFilterType"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "mode",
          "type",
          "value"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "GeoRect": {
        "properties": {
          "llCrd": {
            "$ref": "#/components/schemas/Crd"
          },
          "urCrd": {
            "$ref": "#/components/schemas/Crd"
          }
        },
        "required": [
          "llCrd",
          "urCrd"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "GeoRing": {
        "properties": {
          "cCrd": {
            "$ref": "#/components/schemas/Crd"
          },
          "maxDist": {
            "type": "number",
            "format": "double"
          },
          "minDist": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "cCrd",
          "maxDist"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JourneyTreeRequestOptions": {
        "properties": {
          "getChilds": {
            "type": "number",
            "format": "double"
          },
          "getHIM": {
            "type": "boolean"
          },
          "getParent": {
            "type": "boolean"
          },
          "getStatus": {
            "type": "boolean"
          },
          "himFltrL": {
            "items": {
              "$ref": "#/components/schemas/HimFilter"
            },
            "type": "array"
          },
          "jnyFltrL": {
            "items": {
              "$ref": "#/components/schemas/JourneyFilter"
            },
            "type": "array"
          },
          "pid": {
            "type": "string"
          },
          "rect": {
            "$ref": "#/components/schemas/GeoRect"
          },
          "ring": {
            "$ref": "#/components/schemas/GeoRing"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "JourneyGraphRequestOptions": {
        "properties": {
          "date": {
            "type": "string",
            "description": "yyyyMMdd"
          },
          "getPasslist": {
            "type": "boolean"
          },
          "getProductStartEndInfo": {
            "type": "boolean"
          },
          "jnyFltrL": {
            "items": {
              "$ref": "#/components/schemas/JourneyFilter"
            },
            "type": "array"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "HafasDirection": {
        "type": "string",
        "enum": [
          "B",
          "F",
          "FB"
        ]
      },
      "JourneyCourseRequestOptions": {
        "properties": {
          "arrLoc": {
            "$ref": "#/components/schemas/OptionalLocL"
          },
          "date": {
            "type": "string",
            "description": "yyyyMMdd"
          },
          "depLoc": {
            "$ref": "#/components/schemas/OptionalLocL"
          },
          "dir": {
            "$ref": "#/components/schemas/HafasDirection"
          },
          "getEdgeAni": {
            "type": "boolean"
          },
          "getEdgeCourse": {
            "type": "boolean"
          },
          "getIST": {
            "type": "boolean"
          },
          "getMainAni": {
            "type": "boolean"
          },
          "getMainCourse": {
            "type": "boolean"
          },
          "getPassLoc": {
            "type": "boolean"
          },
          "getPolyline": {
            "type": "boolean"
          },
          "jid": {
            "type": "string"
          },
          "jnyFltrL": {
            "items": {
              "$ref": "#/components/schemas/JourneyFilter"
            },
            "type": "array"
          },
          "perSize": {
            "type": "number",
            "format": "double"
          },
          "perStep": {
            "type": "number",
            "format": "double"
          },
          "time": {
            "type": "string",
            "description": "HHmm"
          }
        },
        "required": [
          "date",
          "jid"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonStopInfo": {
        "properties": {
          "scheduledPlatform": {
            "type": "string",
            "description": "Scheduled Platform"
          },
          "platform": {
            "type": "string",
            "description": "Best known platform, might be identical to scheduledPlatform"
          },
          "scheduledTime": {
            "type": "string",
            "format": "date-time",
            "description": "scheduled time for this stop"
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "description": "best known time for this stop, might be identical to scheduledTime"
          },
          "delay": {
            "type": "integer",
            "format": "int32"
          },
          "reihung": {
            "type": "boolean"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "cancelled": {
            "type": "boolean"
          }
        },
        "required": [
          "scheduledTime",
          "time"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RoutingStation": {
        "properties": {
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "id"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "AuslastungsValue": {
        "description": "1: Gering\n2: Hoch\n3: Sehr Hoch\n4: Ausgebucht",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "number"
      },
      "Route$Auslastung": {
        "properties": {
          "first": {
            "$ref": "#/components/schemas/AuslastungsValue"
          },
          "second": {
            "$ref": "#/components/schemas/AuslastungsValue"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "Route$Stop": {
        "properties": {
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "station": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "additional": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          },
          "irisMessages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          }
        },
        "required": [
          "station"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SingleParsedJourneyGeoPos": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "position": {
            "$ref": "#/components/schemas/HafasCoordinates"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          }
        },
        "required": [
          "jid",
          "date",
          "train",
          "position",
          "stops"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedJourneyGeoPosResponse": {
        "items": {
          "$ref": "#/components/schemas/SingleParsedJourneyGeoPos"
        },
        "type": "array"
      },
      "InOutMode": {
        "type": "string",
        "enum": [
          "B",
          "I",
          "N",
          "O"
        ]
      },
      "JourneyTrainPosMode": {
        "type": "string",
        "enum": [
          "CALC",
          "CALC_FOR_REPORT",
          "CALC_ONLY",
          "CALC_REPORT",
          "REPORT_ONLY",
          "REPORT_ONLY_WITH_STOPS"
        ]
      },
      "JourneyGeoPosRequestOptions": {
        "properties": {
          "ageOfReport": {
            "type": "boolean"
          },
          "date": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "getSimpleTrainComposition": {
            "type": "boolean"
          },
          "getUnmatched": {
            "type": "boolean"
          },
          "inOut": {
            "$ref": "#/components/schemas/InOutMode"
          },
          "jnyFltrL": {
            "items": {
              "$ref": "#/components/schemas/JourneyFilter"
            },
            "type": "array"
          },
          "locL": {
            "items": {
              "$ref": "#/components/schemas/OptionalLocL"
            },
            "type": "array"
          },
          "maxJny": {
            "type": "boolean"
          },
          "onlyRT": {
            "type": "boolean"
          },
          "perSize": {
            "type": "number",
            "format": "double"
          },
          "perStep": {
            "type": "number",
            "format": "double"
          },
          "rect": {
            "$ref": "#/components/schemas/GeoRect"
          },
          "ring": {
            "$ref": "#/components/schemas/GeoRing"
          },
          "rtMsgStatus": {
            "type": "boolean"
          },
          "trainPosMode": {
            "$ref": "#/components/schemas/JourneyTrainPosMode"
          },
          "zoom": {
            "type": "number",
            "format": "double"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "JourneyGeoPosOptions": {
        "$ref": "#/components/schemas/JourneyGeoPosRequestOptions"
      },
      "Route$ValidDepartureStop": {
        "properties": {
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "station": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "additional": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          },
          "irisMessages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          }
        },
        "required": [
          "station",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Route$ValidArrivalStop": {
        "properties": {
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "station": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "additional": {
            "type": "boolean"
          },
          "cancelled": {
            "type": "boolean"
          },
          "irisMessages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array"
          }
        },
        "required": [
          "station",
          "arrival"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedJourneyDetails": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "jid": {
            "type": "string"
          },
          "firstStop": {
            "$ref": "#/components/schemas/Route$ValidDepartureStop"
          },
          "lastStop": {
            "$ref": "#/components/schemas/Route$ValidArrivalStop"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          }
        },
        "required": [
          "train",
          "jid",
          "firstStop",
          "lastStop",
          "stops"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ArrivalStationBoardEntry": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "cancelled": {
            "type": "boolean"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "currentStation": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          }
        },
        "required": [
          "train",
          "finalDestination",
          "jid",
          "currentStation",
          "arrival"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "EvaNumber": {
        "type": "string",
        "example": "8000105",
        "description": "Usually 7 digits, leading zeros can be omitted"
      },
      "DepartureStationBoardEntry": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "cancelled": {
            "type": "boolean"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "currentStation": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          }
        },
        "required": [
          "train",
          "finalDestination",
          "jid",
          "currentStation",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedJourneyMatchResponse": {
        "properties": {
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "jid": {
            "type": "string"
          },
          "firstStop": {
            "$ref": "#/components/schemas/Route$Stop"
          },
          "lastStop": {
            "$ref": "#/components/schemas/Route$Stop"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          }
        },
        "required": [
          "train",
          "stops",
          "jid",
          "firstStop",
          "lastStop"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JourneyMatchOptions": {
        "properties": {
          "trainName": {
            "type": "string",
            "description": "Usually \"<Gattung> <Fahrtnummer>\"",
            "example": "ICE 23"
          },
          "initialDepartureDate": {
            "type": "string",
            "format": "date-time",
            "description": "Used to find the correct journey for a specific day.",
            "default": "now"
          },
          "jnyFltrL": {
            "items": {
              "$ref": "#/components/schemas/JourneyFilter"
            },
            "type": "array",
            "description": "These are raw HAFAS Filter and quite advanced."
          },
          "onlyRT": {
            "type": "boolean"
          }
        },
        "required": [
          "trainName"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ProdCtx": {
        "properties": {
          "name": {
            "type": "string"
          },
          "num": {
            "type": "string"
          },
          "matchId": {
            "type": "string"
          },
          "catOut": {
            "type": "string"
          },
          "catOutS": {
            "type": "string"
          },
          "catOutL": {
            "type": "string"
          },
          "catIn": {
            "type": "string"
          },
          "catCode": {
            "type": "string"
          },
          "admin": {
            "type": "string"
          },
          "lineId": {
            "type": "string"
          },
          "line": {
            "type": "string"
          },
          "cls": {
            "type": "number",
            "format": "double"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "name",
          "cls",
          "icoX"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ProdL": {
        "properties": {
          "name": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "cls": {
            "type": "number",
            "format": "double"
          },
          "oprX": {
            "type": "number",
            "format": "double"
          },
          "prodCtx": {
            "$ref": "#/components/schemas/ProdCtx"
          },
          "addName": {
            "type": "string"
          },
          "nameS": {
            "type": "string"
          },
          "matchId": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "icoX",
          "cls"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrnCmpSX": {
        "properties": {
          "tcocX": {
            "items": {
              "type": "number",
              "format": "double"
            },
            "type": "array"
          },
          "tcM": {
            "type": "number",
            "format": "double"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "TxtC": {
        "properties": {
          "r": {
            "type": "number",
            "format": "double"
          },
          "g": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "r",
          "g",
          "b"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "MsgL": {
        "properties": {
          "type": {
            "type": "string"
          },
          "remX": {
            "type": "number",
            "format": "double"
          },
          "txtC": {
            "$ref": "#/components/schemas/TxtC"
          },
          "prio": {
            "type": "number",
            "format": "double"
          },
          "fIdx": {
            "type": "number",
            "format": "double"
          },
          "tIdx": {
            "type": "number",
            "format": "double"
          },
          "tagL": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "type",
          "remX",
          "txtC",
          "prio",
          "fIdx",
          "tIdx",
          "tagL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonDeparture": {
        "properties": {
          "locX": {
            "type": "number",
            "format": "double"
          },
          "idx": {
            "type": "number",
            "format": "double"
          },
          "dCncl": {
            "type": "boolean"
          },
          "dProdX": {
            "type": "number",
            "format": "double"
          },
          "dInS": {
            "type": "boolean"
          },
          "dInR": {
            "type": "boolean"
          },
          "dTimeS": {
            "type": "string"
          },
          "dTimeR": {
            "type": "string"
          },
          "dPlatfS": {
            "type": "string"
          },
          "dPlatfR": {
            "type": "string"
          },
          "dProgType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "dTZOffset": {
            "type": "number",
            "format": "double"
          },
          "dTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          }
        },
        "required": [
          "locX",
          "dInS",
          "dInR",
          "dTimeS"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonArrival": {
        "properties": {
          "locX": {
            "type": "number",
            "format": "double"
          },
          "idx": {
            "type": "number",
            "format": "double"
          },
          "aCncl": {
            "type": "boolean"
          },
          "aProdX": {
            "type": "number",
            "format": "double"
          },
          "aOutR": {
            "type": "boolean"
          },
          "aTimeS": {
            "type": "string"
          },
          "aTimeR": {
            "type": "string"
          },
          "aPlatfS": {
            "type": "string"
          },
          "aPlatfR": {
            "type": "string"
          },
          "aProgType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "aTZOffset": {
            "type": "number",
            "format": "double"
          },
          "aTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          }
        },
        "required": [
          "locX",
          "aOutR",
          "aTimeS"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CommonStop": {
        "properties": {
          "locX": {
            "type": "number",
            "format": "double"
          },
          "idx": {
            "type": "number",
            "format": "double"
          },
          "aCncl": {
            "type": "boolean"
          },
          "aProdX": {
            "type": "number",
            "format": "double"
          },
          "aOutR": {
            "type": "boolean"
          },
          "aTimeS": {
            "type": "string"
          },
          "aTimeR": {
            "type": "string"
          },
          "aPlatfS": {
            "type": "string"
          },
          "aPlatfR": {
            "type": "string"
          },
          "aProgType": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "aTZOffset": {
            "type": "number",
            "format": "double"
          },
          "aTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "dCncl": {
            "type": "boolean"
          },
          "dProdX": {
            "type": "number",
            "format": "double"
          },
          "dInS": {
            "type": "boolean"
          },
          "dInR": {
            "type": "boolean"
          },
          "dTimeS": {
            "type": "string"
          },
          "dTimeR": {
            "type": "string"
          },
          "dPlatfS": {
            "type": "string"
          },
          "dPlatfR": {
            "type": "string"
          },
          "dProgType": {
            "type": "string"
          },
          "dTZOffset": {
            "type": "number",
            "format": "double"
          },
          "dTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "isAdd": {
            "type": "boolean"
          }
        },
        "required": [
          "locX",
          "aOutR",
          "aTimeS",
          "dInS",
          "dInR",
          "dTimeS"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JnyL": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "prodX": {
            "type": "number",
            "format": "double"
          },
          "dirTxt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRchbl": {
            "type": "boolean"
          },
          "isCncl": {
            "type": "boolean"
          },
          "isPartCncl": {
            "type": "boolean"
          },
          "subscr": {
            "type": "string"
          },
          "stopL": {
            "items": {
              "$ref": "#/components/schemas/CommonStop"
            },
            "type": "array"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          }
        },
        "required": [
          "jid",
          "prodX",
          "dirTxt",
          "status",
          "isRchbl",
          "subscr",
          "stopL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Freq": {
        "properties": {
          "minC": {
            "type": "number",
            "format": "double"
          },
          "maxC": {
            "type": "number",
            "format": "double"
          },
          "numC": {
            "type": "number",
            "format": "double"
          },
          "jnyL": {
            "items": {
              "$ref": "#/components/schemas/JnyL"
            },
            "type": "array"
          }
        },
        "required": [
          "minC",
          "maxC",
          "numC",
          "jnyL"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Jny": {
        "properties": {
          "jid": {
            "type": "string"
          },
          "prodX": {
            "type": "number",
            "format": "double"
          },
          "dirTxt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "isRchbl": {
            "type": "boolean"
          },
          "isCncl": {
            "type": "boolean"
          },
          "isPartCncl": {
            "type": "boolean"
          },
          "subscr": {
            "type": "string"
          },
          "stopL": {
            "items": {
              "$ref": "#/components/schemas/CommonStop"
            },
            "type": "array"
          },
          "msgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "chgDurR": {
            "type": "number",
            "format": "double"
          },
          "ctxRecon": {
            "type": "string"
          },
          "dTrnCmpSXmsgL": {
            "items": {
              "$ref": "#/components/schemas/MsgL"
            },
            "type": "array"
          },
          "dTrnCmpSX": {
            "$ref": "#/components/schemas/TrnCmpSX"
          },
          "freq": {
            "$ref": "#/components/schemas/Freq"
          }
        },
        "required": [
          "jid",
          "prodX",
          "dirTxt",
          "status",
          "isRchbl",
          "subscr",
          "ctxRecon",
          "dTrnCmpSXmsgL",
          "freq"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecLJNY": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "JNY"
            ],
            "nullable": false
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "dep": {
            "$ref": "#/components/schemas/CommonDeparture"
          },
          "arr": {
            "$ref": "#/components/schemas/CommonArrival"
          },
          "jny": {
            "$ref": "#/components/schemas/Jny"
          },
          "parJnyL": {
            "items": {
              "$ref": "#/components/schemas/Jny"
            },
            "type": "array"
          },
          "resState": {
            "type": "string",
            "enum": [
              "N",
              "B",
              "S"
            ]
          },
          "resRecommendation": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "icoX",
          "dep",
          "arr",
          "jny",
          "resState",
          "resRecommendation"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Gis": {
        "properties": {
          "dist": {
            "type": "number",
            "format": "double"
          },
          "durS": {
            "type": "string"
          },
          "dirGeo": {
            "type": "number",
            "format": "double"
          },
          "ctx": {
            "type": "string"
          },
          "gisPrvr": {
            "type": "string"
          },
          "getDescr": {
            "type": "boolean"
          },
          "getPoly": {
            "type": "boolean"
          }
        },
        "required": [
          "dist",
          "durS",
          "dirGeo",
          "ctx",
          "gisPrvr",
          "getDescr",
          "getPoly"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecLWALK": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "WALK",
              "TRSF"
            ]
          },
          "icoX": {
            "type": "number",
            "format": "double"
          },
          "dep": {
            "$ref": "#/components/schemas/CommonDeparture"
          },
          "arr": {
            "$ref": "#/components/schemas/CommonArrival"
          },
          "gis": {
            "$ref": "#/components/schemas/Gis"
          }
        },
        "required": [
          "type",
          "icoX",
          "dep",
          "arr",
          "gis"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecLKISS": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "KISS"
            ],
            "nullable": false
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "SecL": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/SecLJNY"
          },
          {
            "$ref": "#/components/schemas/SecLWALK"
          },
          {
            "$ref": "#/components/schemas/SecLKISS"
          }
        ]
      },
      "Route$TarifFare": {
        "properties": {
          "price": {
            "type": "integer",
            "format": "int32"
          },
          "moreExpensiveAvailable": {
            "type": "boolean"
          },
          "bookable": {
            "type": "boolean"
          },
          "upsell": {
            "type": "boolean",
            "description": "???"
          },
          "targetContext": {
            "type": "string",
            "description": "???"
          }
        },
        "required": [
          "price",
          "moreExpensiveAvailable",
          "bookable",
          "upsell",
          "targetContext"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Route$TarifFareSet": {
        "properties": {
          "fares": {
            "items": {
              "$ref": "#/components/schemas/Route$TarifFare"
            },
            "type": "array"
          }
        },
        "required": [
          "fares"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Route$Journey": {
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "changeDuration": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProdL"
          },
          "raw": {
            "$ref": "#/components/schemas/SecL"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/Route$TarifFareSet"
            },
            "type": "array"
          }
        },
        "required": [
          "finalDestination",
          "jid",
          "segmentDestination",
          "segmentStart",
          "stops",
          "train"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ParsedSearchOnTripResponse": {
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "changeDuration": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProdL"
          },
          "raw": {
            "$ref": "#/components/schemas/SecL"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/Route$TarifFareSet"
            },
            "type": "array"
          },
          "type": {
            "type": "string",
            "enum": [
              "JNY"
            ],
            "nullable": false
          },
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "wings": {
            "items": {
              "$ref": "#/components/schemas/Route$Journey"
            },
            "type": "array"
          },
          "currentStop": {
            "$ref": "#/components/schemas/Route$Stop"
          }
        },
        "required": [
          "finalDestination",
          "jid",
          "segmentDestination",
          "segmentStart",
          "stops",
          "train",
          "type",
          "arrival",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Route$JourneySegmentTrain": {
        "properties": {
          "cancelled": {
            "type": "boolean"
          },
          "changeDuration": {
            "type": "number",
            "format": "double"
          },
          "duration": {
            "type": "number",
            "format": "double"
          },
          "finalDestination": {
            "type": "string"
          },
          "jid": {
            "type": "string"
          },
          "product": {
            "$ref": "#/components/schemas/ProdL"
          },
          "raw": {
            "$ref": "#/components/schemas/SecL"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/RoutingStation"
          },
          "stops": {
            "items": {
              "$ref": "#/components/schemas/Route$Stop"
            },
            "type": "array"
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "auslastung": {
            "$ref": "#/components/schemas/Route$Auslastung"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/RemL"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/Route$TarifFareSet"
            },
            "type": "array"
          },
          "type": {
            "type": "string",
            "enum": [
              "JNY"
            ],
            "nullable": false
          },
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "wings": {
            "items": {
              "$ref": "#/components/schemas/Route$Journey"
            },
            "type": "array"
          }
        },
        "required": [
          "finalDestination",
          "jid",
          "segmentDestination",
          "segmentStart",
          "stops",
          "train",
          "type",
          "arrival",
          "departure"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "WalkStopInfo": {
        "properties": {
          "delay": {
            "type": "number",
            "format": "double"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "time"
        ],
        "type": "object"
      },
      "Route$JourneySegmentWalk": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "WALK"
            ],
            "nullable": false
          },
          "train": {
            "$ref": "#/components/schemas/ParsedProduct"
          },
          "arrival": {
            "$ref": "#/components/schemas/WalkStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/WalkStopInfo"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "segmentStart": {
            "$ref": "#/components/schemas/HafasStation"
          },
          "segmentDestination": {
            "$ref": "#/components/schemas/HafasStation"
          }
        },
        "required": [
          "type",
          "train",
          "arrival",
          "departure",
          "duration",
          "segmentStart",
          "segmentDestination"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Route$JourneySegment": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/Route$JourneySegmentTrain"
          },
          {
            "$ref": "#/components/schemas/Route$JourneySegmentWalk"
          }
        ]
      },
      "SingleRoute": {
        "properties": {
          "arrival": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "departure": {
            "$ref": "#/components/schemas/CommonStopInfo"
          },
          "isRideable": {
            "type": "boolean"
          },
          "checksum": {
            "type": "string"
          },
          "cid": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          },
          "changes": {
            "type": "integer",
            "format": "int32"
          },
          "segments": {
            "items": {
              "$ref": "#/components/schemas/Route$JourneySegment"
            },
            "type": "array"
          },
          "segmentTypes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tarifSet": {
            "items": {
              "$ref": "#/components/schemas/Route$TarifFareSet"
            },
            "type": "array"
          }
        },
        "required": [
          "arrival",
          "departure",
          "isRideable",
          "checksum",
          "cid",
          "date",
          "duration",
          "changes",
          "segments",
          "segmentTypes"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "AllowedSotMode": {
        "type": "string",
        "enum": [
          "JI",
          "RC"
        ]
      },
      "SearchOnTripBody": {
        "properties": {
          "sotMode": {
            "$ref": "#/components/schemas/AllowedSotMode"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "sotMode",
          "id"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "RoutingResult": {
        "properties": {
          "routes": {
            "items": {
              "$ref": "#/components/schemas/SingleRoute"
            },
            "type": "array"
          },
          "context": {
            "properties": {
              "later": {
                "type": "string"
              },
              "earlier": {
                "type": "string"
              }
            },
            "required": [
              "later",
              "earlier"
            ],
            "type": "object"
          }
        },
        "required": [
          "routes",
          "context"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TripSearchVia": {
        "properties": {
          "evaId": {
            "type": "string"
          },
          "minChangeTime": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "evaId"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "JnyCl": {
        "enum": [
          1,
          2
        ],
        "type": "number"
      },
      "TravelerType": {
        "enum": [
          "E",
          "K",
          "B"
        ],
        "type": "string"
      },
      "LoyalityCard": {
        "enum": [
          "BC25First",
          "BC25Second",
          "BC50First",
          "BC50Second",
          "SHCard",
          "ATVorteilscard",
          "CHGeneral",
          "CHHalfWithRailplus",
          "CHHalfWithoutRailplus",
          "NLWithRailplus",
          "NLWithoutRailplus",
          "BC100First",
          "BC100Second"
        ],
        "type": "string"
      },
      "TripSearchTraveler": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TravelerType"
          },
          "loyalityCard": {
            "$ref": "#/components/schemas/LoyalityCard",
            "description": "Testing Comment"
          }
        },
        "required": [
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TripSearchTarifRequest": {
        "properties": {
          "class": {
            "$ref": "#/components/schemas/JnyCl"
          },
          "traveler": {
            "items": {
              "$ref": "#/components/schemas/TripSearchTraveler"
            },
            "type": "array"
          }
        },
        "required": [
          "class",
          "traveler"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TripSearchOptionsV3": {
        "properties": {
          "economic": {
            "type": "boolean",
            "description": "true = not only fastest route"
          },
          "getIV": {
            "type": "boolean",
            "description": "Unknown flag"
          },
          "getPasslist": {
            "type": "boolean",
            "description": "Get Stop inbetween"
          },
          "getPolyline": {
            "type": "boolean",
            "description": "Polylines - unknown format"
          },
          "numF": {
            "type": "number",
            "format": "double"
          },
          "ctxScr": {
            "type": "string"
          },
          "ushrp": {
            "type": "boolean",
            "description": "Is a station nearby enough for routing?"
          },
          "start": {
            "$ref": "#/components/schemas/EvaNumber"
          },
          "destination": {
            "$ref": "#/components/schemas/EvaNumber"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "transferTime": {
            "type": "number",
            "format": "double"
          },
          "maxChanges": {
            "type": "number",
            "format": "double"
          },
          "searchForDeparture": {
            "type": "boolean"
          },
          "onlyRegional": {
            "type": "boolean"
          },
          "onlyNetzcard": {
            "type": "boolean"
          },
          "tarif": {
            "$ref": "#/components/schemas/TripSearchTarifRequest"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TripSearchVia"
            },
            "type": "array"
          }
        },
        "required": [
          "start",
          "destination"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Record_EvaNumber.Route$Auslastung_": {
        "properties": {},
        "type": "object",
        "description": "Construct a type with a set of properties K of type T"
      },
      "AdditionalJourneyInformation": {
        "properties": {
          "operatorName": {
            "type": "string"
          },
          "occupancy": {
            "$ref": "#/components/schemas/Record_EvaNumber.Route$Auslastung_"
          }
        },
        "required": [
          "occupancy"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBPlatforms": {
        "properties": {
          "scheduled": {
            "type": "integer",
            "format": "int32"
          },
          "reported": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "scheduled",
          "reported"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBSectorInfo": {
        "properties": {
          "scheduled": {
            "type": "string"
          },
          "reported": {
            "type": "string"
          }
        },
        "required": [
          "scheduled"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBTimeFormat": {
        "properties": {
          "days": {
            "type": "integer",
            "format": "int32"
          },
          "hours": {
            "type": "integer",
            "format": "int32"
          },
          "minutes": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "days",
          "hours",
          "minutes"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBTime": {
        "properties": {
          "scheduled": {
            "$ref": "#/components/schemas/OEBBTimeFormat"
          },
          "reported": {
            "$ref": "#/components/schemas/OEBBTimeFormat"
          }
        },
        "required": [
          "scheduled"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBPortion": {
        "properties": {
          "trainNr": {
            "type": "integer",
            "format": "int32"
          },
          "trainName": {
            "type": "string",
            "description": "`${type} ${number}`"
          }
        },
        "required": [
          "trainNr",
          "trainName"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBTimeTableInfo": {
        "properties": {
          "date": {
            "type": "string"
          },
          "trainNr": {
            "type": "integer",
            "format": "int32"
          },
          "trainName": {
            "type": "string"
          },
          "stationName": {
            "type": "string"
          },
          "platform": {
            "$ref": "#/components/schemas/OEBBPlatforms"
          },
          "sectors": {
            "$ref": "#/components/schemas/OEBBSectorInfo"
          },
          "time": {
            "$ref": "#/components/schemas/OEBBTime"
          },
          "portions": {
            "items": {
              "$ref": "#/components/schemas/OEBBPortion"
            },
            "type": "array"
          }
        },
        "required": [
          "date",
          "trainNr",
          "trainName",
          "stationName",
          "platform",
          "sectors",
          "time",
          "portions"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBIdentifier": {
        "type": "string",
        "description": "example: WBF (Wien Hbf)"
      },
      "OEBBCoachSequenceWagon": {
        "properties": {
          "uicNumber": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "origin": {
            "$ref": "#/components/schemas/OEBBIdentifier"
          },
          "destination": {
            "$ref": "#/components/schemas/OEBBIdentifier"
          },
          "ranking": {
            "type": "number",
            "format": "double"
          },
          "capacityBusinessClass": {
            "type": "number",
            "format": "double"
          },
          "capacityFirstClass": {
            "type": "number",
            "format": "double"
          },
          "capacitySecondClass": {
            "type": "number",
            "format": "double"
          },
          "capacityCouchette": {
            "type": "number",
            "format": "double"
          },
          "capacitySleeper": {
            "type": "number",
            "format": "double"
          },
          "capacityWheelChair": {
            "type": "number",
            "format": "double"
          },
          "capacityBicycle": {
            "type": "number",
            "format": "double"
          },
          "isBicycleAllowed": {
            "type": "boolean"
          },
          "isWheelChairAccessible": {
            "type": "boolean"
          },
          "hasWifi": {
            "type": "boolean"
          },
          "isInfoPoint": {
            "type": "boolean"
          },
          "isPlayZone": {
            "type": "boolean"
          },
          "isChildCinema": {
            "type": "boolean"
          },
          "isDining": {
            "type": "boolean"
          },
          "isQuietZone": {
            "type": "boolean"
          },
          "isLocked": {
            "type": "boolean"
          },
          "destinationName": {
            "type": "string"
          },
          "lengthOverBuffers": {
            "type": "number",
            "format": "double"
          },
          "originTime": {
            "type": "string"
          },
          "destinationTime": {
            "type": "string"
          },
          "seasoning": {
            "properties": {
              "seasoningString": {
                "type": "string"
              },
              "startDate": {
                "type": "string"
              }
            },
            "required": [
              "seasoningString",
              "startDate"
            ],
            "type": "object"
          }
        },
        "required": [
          "origin",
          "destination",
          "ranking",
          "capacityBusinessClass",
          "capacityFirstClass",
          "capacitySecondClass",
          "capacityCouchette",
          "capacitySleeper",
          "capacityWheelChair",
          "capacityBicycle",
          "isBicycleAllowed",
          "isWheelChairAccessible",
          "hasWifi",
          "isInfoPoint",
          "isPlayZone",
          "isChildCinema",
          "isDining",
          "isQuietZone",
          "isLocked",
          "destinationName",
          "lengthOverBuffers",
          "originTime",
          "destinationTime"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBTrainInfo": {
        "properties": {
          "trainNr": {
            "type": "number",
            "format": "double"
          },
          "date": {
            "type": "string",
            "description": "ISO Date"
          },
          "version": {
            "type": "number",
            "format": "double"
          },
          "isReported": {
            "type": "boolean"
          },
          "assemblyStation": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "stations": {
            "items": {
              "$ref": "#/components/schemas/OEBBIdentifier"
            },
            "type": "array"
          },
          "wagons": {
            "items": {
              "$ref": "#/components/schemas/OEBBCoachSequenceWagon"
            },
            "type": "array"
          }
        },
        "required": [
          "trainNr",
          "date",
          "version",
          "isReported",
          "assemblyStation",
          "source",
          "stations",
          "wagons"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBAccessType": {
        "type": "string",
        "enum": [
          "STIEGENAUFGANG",
          "AUFZUG",
          "ROLLTREPPE"
        ]
      },
      "OEBBAccess": {
        "properties": {
          "platform": {
            "type": "string"
          },
          "distance": {
            "type": "number",
            "format": "double"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/OEBBAccessType"
          }
        },
        "required": [
          "platform",
          "distance",
          "name",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBTrainOnPlatform": {
        "properties": {
          "position": {
            "type": "number",
            "format": "double"
          },
          "departureTowardsFirstSector": {
            "type": "boolean"
          }
        },
        "required": [
          "position",
          "departureTowardsFirstSector"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBSector": {
        "properties": {
          "name": {
            "type": "string"
          },
          "length": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "name",
          "length"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBPlatformInfo": {
        "properties": {
          "platform": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "sectors": {
            "items": {
              "$ref": "#/components/schemas/OEBBSector"
            },
            "type": "array"
          }
        },
        "required": [
          "platform",
          "length",
          "sectors"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "OEBBInfo": {
        "properties": {
          "timeTableInfo": {
            "$ref": "#/components/schemas/OEBBTimeTableInfo"
          },
          "train": {
            "$ref": "#/components/schemas/OEBBTrainInfo"
          },
          "accessess": {
            "items": {
              "$ref": "#/components/schemas/OEBBAccess"
            },
            "type": "array"
          },
          "trainOnPlatform": {
            "$ref": "#/components/schemas/OEBBTrainOnPlatform"
          },
          "platform": {
            "$ref": "#/components/schemas/OEBBPlatformInfo"
          }
        },
        "required": [
          "timeTableInfo",
          "accessess"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "ReturnType_typeofinfo_": {
        "$ref": "#/components/schemas/OEBBInfo",
        "description": "Obtain the return type of a function type"
      },
      "CoachSequencePosition": {
        "properties": {
          "startPercent": {
            "type": "number",
            "format": "double"
          },
          "endPercent": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "startPercent",
          "endPercent"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceSector": {
        "properties": {
          "name": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/CoachSequencePosition"
          }
        },
        "required": [
          "name",
          "position"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceStop": {
        "properties": {
          "stopPlace": {
            "$ref": "#/components/schemas/MinimalStopPlace"
          },
          "sectors": {
            "items": {
              "$ref": "#/components/schemas/CoachSequenceSector"
            },
            "type": "array"
          }
        },
        "required": [
          "stopPlace",
          "sectors"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceProduct": {
        "properties": {
          "number": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "line": {
            "type": "string"
          }
        },
        "required": [
          "number",
          "type"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "FahrzeugKategorie": {
        "type": "string",
        "enum": [
          "DOPPELSTOCKSTEUERWAGENERSTEZWEITEKLASSE",
          "DOPPELSTOCKSTEUERWAGENZWEITEKLASSE",
          "DOPPELSTOCKWAGENERSTEKLASSE",
          "DOPPELSTOCKWAGENERSTEZWEITEKLASSE",
          "DOPPELSTOCKWAGENZWEITEKLASSE",
          "HALBSPEISEWAGENERSTEKLASSE",
          "HALBSPEISEWAGENZWEITEKLASSE",
          "LOK",
          "REISEZUGWAGENERSTEKLASSE",
          "REISEZUGWAGENERSTEZWEITEKLASSE",
          "REISEZUGWAGENZWEITEKLASSE",
          "SPEISEWAGEN",
          "STEUERWAGENERSTEKLASSE",
          "STEUERWAGENERSTEZWEITEKLASSE",
          "STEUERWAGENZWEITEKLASSE",
          "TRIEBKOPF",
          ""
        ]
      },
      "CoachSequenceCoachFeatures": {
        "properties": {
          "dining": {
            "type": "boolean"
          },
          "wheelchair": {
            "type": "boolean"
          },
          "bike": {
            "type": "boolean"
          },
          "disabled": {
            "type": "boolean"
          },
          "quiet": {
            "type": "boolean"
          },
          "info": {
            "type": "boolean"
          },
          "family": {
            "type": "boolean"
          },
          "toddler": {
            "type": "boolean"
          },
          "wifi": {
            "type": "boolean"
          },
          "comfort": {
            "type": "boolean"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceCoachSeats": {
        "properties": {
          "comfort": {
            "type": "string"
          },
          "disabled": {
            "type": "string"
          },
          "family": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceCoach": {
        "properties": {
          "class": {
            "type": "number",
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "description": "0: Unknown; 1: erste; 2: zweite; 3: 1&2; 4: Not for passengers"
          },
          "category": {
            "$ref": "#/components/schemas/FahrzeugKategorie"
          },
          "closed": {
            "type": "boolean"
          },
          "uic": {
            "type": "string",
            "description": "only filled for real time information"
          },
          "type": {
            "type": "string"
          },
          "identificationNumber": {
            "type": "string",
            "description": "Wagenordnungsnummer"
          },
          "position": {
            "$ref": "#/components/schemas/CoachSequencePosition"
          },
          "features": {
            "$ref": "#/components/schemas/CoachSequenceCoachFeatures"
          },
          "seats": {
            "$ref": "#/components/schemas/CoachSequenceCoachSeats"
          }
        },
        "required": [
          "class",
          "category",
          "position",
          "features"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "AvailableBR": {
        "type": "string",
        "enum": [
          "401",
          "402",
          "403",
          "406",
          "407",
          "411",
          "412",
          "415",
          "410.1"
        ]
      },
      "AvailableIdentifierOnly": {
        "type": "string",
        "enum": [
          "401.LDV",
          "401.9",
          "411.S1",
          "411.S2",
          "412.7",
          "412.13",
          "403.R",
          "403.S1",
          "403.S2",
          "406.R",
          "IC2.TWIN",
          "IC2.KISS",
          "MET",
          "TGV"
        ]
      },
      "AvailableIdentifier": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/AvailableIdentifierOnly"
          },
          {
            "$ref": "#/components/schemas/AvailableBR"
          }
        ]
      },
      "CoachSequenceBaureihe": {
        "properties": {
          "name": {
            "type": "string"
          },
          "baureihe": {
            "$ref": "#/components/schemas/AvailableBR"
          },
          "identifier": {
            "$ref": "#/components/schemas/AvailableIdentifier"
          }
        },
        "required": [
          "name",
          "identifier"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceGroup": {
        "properties": {
          "coaches": {
            "items": {
              "$ref": "#/components/schemas/CoachSequenceCoach"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "originName": {
            "type": "string"
          },
          "destinationName": {
            "type": "string"
          },
          "trainName": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "baureihe": {
            "$ref": "#/components/schemas/CoachSequenceBaureihe"
          }
        },
        "required": [
          "coaches",
          "name",
          "originName",
          "destinationName",
          "number"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequence": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/CoachSequenceGroup"
            },
            "type": "array"
          }
        },
        "required": [
          "groups"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "CoachSequenceInformation": {
        "properties": {
          "source": {
            "type": "string",
            "enum": [
              "OEBB",
              "NEW",
              "DB"
            ]
          },
          "stop": {
            "$ref": "#/components/schemas/CoachSequenceStop"
          },
          "product": {
            "$ref": "#/components/schemas/CoachSequenceProduct"
          },
          "sequence": {
            "$ref": "#/components/schemas/CoachSequence"
          },
          "multipleTrainNumbers": {
            "type": "boolean"
          },
          "multipleDestinations": {
            "type": "boolean"
          },
          "isRealtime": {
            "type": "boolean"
          },
          "direction": {
            "type": "boolean",
            "description": "true = in direction of first sector in array\nfalse = in direction of last sector in array\nundefined = we do not know"
          }
        },
        "required": [
          "source",
          "stop",
          "product",
          "sequence",
          "isRealtime"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrainRunStop": {
        "properties": {
          "name": {
            "type": "string"
          },
          "evaNumber": {
            "type": "string"
          },
          "arrivalTime": {
            "type": "string",
            "format": "date-time"
          },
          "departureTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "name",
          "evaNumber"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "Pick_TrainRun.Exclude_keyofTrainRun.primaryVehicleGroupName__": {
        "properties": {
          "product": {
            "$ref": "#/components/schemas/CoachSequenceProduct"
          },
          "origin": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "destination": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TrainRunStop"
            },
            "type": "array"
          },
          "dates": {
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "type": "array"
          }
        },
        "required": [
          "product",
          "origin",
          "destination",
          "via",
          "dates"
        ],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "TrainRunWithBR": {
        "properties": {
          "product": {
            "$ref": "#/components/schemas/CoachSequenceProduct"
          },
          "origin": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "destination": {
            "$ref": "#/components/schemas/TrainRunStop"
          },
          "via": {
            "items": {
              "$ref": "#/components/schemas/TrainRunStop"
            },
            "type": "array"
          },
          "dates": {
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "type": "array"
          },
          "br": {
            "$ref": "#/components/schemas/CoachSequenceBaureihe"
          }
        },
        "required": [
          "product",
          "origin",
          "destination",
          "via",
          "dates"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "LageplanResponse": {
        "properties": {
          "lageplan": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": true
      },
      "TransportType": {
        "type": "string",
        "enum": [
          "HIGH_SPEED_TRAIN",
          "INTERCITY_TRAIN",
          "INTER_REGIONAL_TRAIN",
          "REGIONAL_TRAIN",
          "CITY_TRAIN",
          "SUBWAY",
          "TRAM",
          "BUS",
          "FERRY",
          "FLIGHT",
          "CAR",
          "TAXI",
          "SHUTTLE",
          "BIKE",
          "SCOOTER",
          "WALK",
          "UNKNOWN"
        ],
        "description": "Type of transport. - HIGH_SPEED_TRAIN (High speed train [Hochgeschwindigkeitszug] like ICE or TGV etc.) - INTERCITY_TRAIN (Inter city train [Intercityzug]) - INTER_REGIONAL_TRAIN (Inter regional train [Interregiozug]) - REGIONAL_TRAIN (Regional train [Regionalzug]) - CITY_TRAIN (City train [S-Bahn]) - SUBWAY (Subway [U-Bahn]) - TRAM (Tram [Strassenbahn]) - BUS (Bus [Bus]) - FERRY (Ferry [Faehre]) - FLIGHT (Flight [Flugzeug]) - CAR (Car [Auto]) - TAXI (Taxi) - SHUTTLE (Shuttle [Ruftaxi]) - BIKE ((E-)Bike [Fahrrad]) - SCOOTER ((E-)Scooter [Roller]) - WALK (Walk ([Laufen]) - UNKNOWN (Unknown)"
      },
      "Coordinate2D": {
        "description": "2D coordinate within geo reference system.",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double",
            "description": "Latitude position in reference system."
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "description": "Longitude position in reference system."
          }
        },
        "required": [
          "latitude",
          "longitude"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "StopPlaceIdentifier": {
        "properties": {
          "stationId": {
            "type": "string"
          },
          "ifopt": {
            "type": "string",
            "description": "also known as DHID, globalId"
          },
          "ril100": {
            "type": "string"
          },
          "alternativeRil100": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "evaNumber": {
            "type": "string"
          }
        },
        "required": [
          "evaNumber"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "GroupedStopPlace": {
        "properties": {
          "evaNumber": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "availableTransports": {
            "items": {
              "$ref": "#/components/schemas/TransportType"
            },
            "type": "array"
          },
          "position": {
            "$ref": "#/components/schemas/Coordinate2D"
          },
          "identifier": {
            "$ref": "#/components/schemas/StopPlaceIdentifier"
          }
        },
        "required": [
          "evaNumber",
          "name",
          "availableTransports"
        ],
        "type": "object",
        "additionalProperties": true
      },
      "TrainOccupancyList": {
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Route$Auslastung"
            }
          ],
          "nullable": true
        }
      }
    },
    "securitySchemes": {}
  },
  "info": {
    "title": "Bahn.expert",
    "version": "0.1.0",
    "license": {
      "name": "MIT"
    },
    "contact": {
      "name": "marudor"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/iris/v2/abfahrten/{evaNumber}": {
      "get": {
        "operationId": "Abfahrten v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AbfahrtenResult"
                }
              }
            }
          }
        },
        "tags": [
          "IRIS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "description": "minutes",
            "in": "query",
            "name": "lookahead",
            "required": false,
            "schema": {
              "default": 150,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "minutes",
            "in": "query",
            "name": "lookbehind",
            "required": false,
            "schema": {
              "default": 0,
              "format": "int32",
              "type": "integer"
            }
          }
        ]
      }
    },
    "/hafas/v2/arrivalStationBoard": {
      "get": {
        "operationId": "Arrival Station Board v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ArrivalStationBoardEntry"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Used to get all arrivals at a specific stopPlace",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "station",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v2/auslastung/{start}/{destination}/{trainNumber}/{plannedDepartureTime}": {
      "get": {
        "operationId": "Auslastung v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Route$Auslastung"
                }
              }
            }
          }
        },
        "description": "Provides Auslstaung based on DB Vertrieb HAFAS (DB Navigator).\nBased on a rough estimate, handles first and second class.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "description": "Name of the start stop",
            "in": "path",
            "name": "start",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Frankfurt (Main) Hbf"
          },
          {
            "description": "Name of the destination stop",
            "in": "path",
            "name": "destination",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basel SBB"
          },
          {
            "in": "path",
            "name": "trainNumber",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "23"
          },
          {
            "description": "Planned Departure time of the stop you want the occpuancy for",
            "in": "path",
            "name": "plannedDepartureTime",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            },
            "example": "2022-03-24T11:50:00.000Z"
          }
        ]
      }
    },
    "/hafas/v2/departureStationBoard": {
      "get": {
        "operationId": "Departure Station Board v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DepartureStationBoardEntry"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Used to get all departures at a specific stopPlace.\nOptionally filterable to get only Journeys that travel via a specific stopPlace",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "station",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "in": "query",
            "name": "direction",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v2/details/{trainName}": {
      "get": {
        "operationId": "Details v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedSearchOnTripResponse"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "description": "This combines several HAFAS endpoint as well as IRIS data to get the best possible information for a specific journey.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "ICE 23"
          },
          {
            "in": "query",
            "name": "stop",
            "required": false,
            "schema": {
              "type": "string"
            },
            "deprecated": true
          },
          {
            "description": "EvaNumber of a stop of your train, might not work for profiles other than DB",
            "in": "query",
            "name": "station",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "description": "This is the initialDepartureDate of your desired journey",
            "in": "query",
            "name": "date",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v1/detailsRedirect/{tripId}": {
      "get": {
        "operationId": "DetailsRedirect",
        "responses": {
          "302": {
            "description": ""
          },
          "500": {
            "description": ""
          }
        },
        "description": "This redirects to the current Details Page with a provided HAFAS TripId / JourneyId / JID",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "tripId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/v1/geoStation": {
      "get": {
        "operationId": "Geo Station v1",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HafasStation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Can be used to find all stopPlaces within a radius around a specific geo location",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "lat",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "lng",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "maxDist",
            "required": false,
            "schema": {
              "default": 1000,
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/experimental/himMessages": {
      "get": {
        "operationId": "Him Messages",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedHimSearchResponse"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS Experimental"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "himIds",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/hafas/experimental/HimSearch": {
      "post": {
        "operationId": "Him Search",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedHimSearchResponse"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS Experimental"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HimSearchRequestOptions"
              }
            }
          }
        }
      }
    },
    "/hafas/experimental/JourneyCourse": {
      "post": {
        "operationId": "Journey Course",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "HAFAS Experimental"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JourneyCourseRequestOptions"
              }
            }
          }
        }
      }
    },
    "/hafas/v1/journeyGeoPos": {
      "post": {
        "operationId": "Journey Geo Position v1",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedJourneyGeoPosResponse"
                }
              }
            }
          }
        },
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JourneyGeoPosOptions"
              }
            }
          }
        }
      }
    },
    "/hafas/experimental/JourneyGraph": {
      "post": {
        "operationId": "Journey Graph",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "HAFAS Experimental"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JourneyGraphRequestOptions"
              }
            }
          }
        }
      }
    },
    "/hafas/v2/journeyMatch": {
      "post": {
        "operationId": "Journey Match v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ParsedJourneyMatchResponse"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "\nUsed to find a specific journey based on name, date and HAFAS filter.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JourneyMatchOptions"
              }
            }
          }
        }
      }
    },
    "/hafas/experimental/JourneyTree": {
      "post": {
        "operationId": "Journey Tree",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "HAFAS Experimental"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JourneyTreeRequestOptions"
              }
            }
          }
        }
      }
    },
    "/hafas/v2/journeyDetails": {
      "get": {
        "operationId": "JourneyDetails v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedJourneyDetails"
                }
              }
            }
          }
        },
        "description": "provides Details for a specific Journey [Fahrt]",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/lageplan/{stopPlaceName}/{evaNumber}": {
      "get": {
        "operationId": "Lageplan",
        "responses": {
          "200": {
            "description": "URL to DB, HVV or NAHSH Lageplan",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LageplanResponse"
                }
              }
            }
          }
        },
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "stopPlaceName",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          }
        ]
      }
    },
    "/hafas/v1/positionForTrain/{trainName}": {
      "get": {
        "operationId": "Position for Train v1",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParsedJourneyGeoPosResponse"
                }
              }
            }
          }
        },
        "description": "Used to find the position of a specific journey. Based on predictions, not GPS.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "examples": {
              "Example 1": {
                "value": "ICE 23"
              },
              "Example 2": {
                "value": "STR 1988"
              }
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/reihung/v4/runsPerDate/{date}": {
      "get": {
        "operationId": "Runs per Date v4",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TrainRunWithBR"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Returns all journeys that run on a specific date. Only works for DB Fernverkehr",
        "tags": [
          "Reihung"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Used to filter for specific Baureihen",
            "in": "query",
            "name": "baureihen",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AvailableBR"
              }
            }
          },
          {
            "description": "Used to filter for specific identifier (identifier are defined by me, not DB)",
            "in": "query",
            "name": "identifier",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AvailableIdentifier"
              }
            }
          },
          {
            "description": "Used to filter for runs that stop at specific stopPlaces in the specifed order",
            "in": "query",
            "name": "stopsAt",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EvaNumber"
              }
            },
            "example": "[8000105, 8000191]"
          }
        ]
      }
    },
    "/hafas/v2/searchOnTrip": {
      "post": {
        "operationId": "Search on Trip v2",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleRoute"
                }
              }
            }
          }
        },
        "description": "Advanced HAFAS Method, not used by marudor.de and therefore quite undocumented",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchOnTripBody"
              }
            }
          }
        }
      }
    },
    "/stopPlace/v1/{evaNumber}": {
      "get": {
        "operationId": "StopPlaceByEva",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupedStopPlace"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/geoSearch": {
      "get": {
        "operationId": "StopPlaceGeoSearch",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupedStopPlace"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "lat",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "lng",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "description": "meter",
            "in": "query",
            "name": "radius",
            "required": false,
            "schema": {
              "default": 5000,
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Only returns stopPlaces iris-tts can handle (/abfahrten)",
            "in": "query",
            "name": "filterForIris",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "max",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/{evaNumber}/identifier": {
      "get": {
        "operationId": "StopPlaceIdentifier",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StopPlaceIdentifier"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": [
          "StopPlace"
        ],
        "deprecated": true,
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/search/{searchTerm}": {
      "get": {
        "operationId": "StopPlaceSearch",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupedStopPlace"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "This might fall back to use HAFAS",
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "searchTerm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "max",
            "required": false,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "description": "Only returns stopPlaces iris-tts can handle (/abfahrten)",
            "in": "query",
            "name": "filterForIris",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "groupedBySales",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/hafas/v1/stopPlace/{searchTerm}": {
      "get": {
        "operationId": "StopPlaceSearch v1",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/HafasStation"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Only uses this for non DB profiles. If you need DB stopPlace search use Operation tagged with StopPlace.\nUsed to search for stopPlaces based on a name.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "searchTerm",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "S returns only StopPlaces, ALL also returns Point of Interests",
            "in": "query",
            "name": "type",
            "required": false,
            "schema": {
              "default": "S",
              "type": "string",
              "enum": [
                "S",
                "ALL"
              ]
            }
          },
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ]
      }
    },
    "/reihung/v1/trainName/{tz}": {
      "get": {
        "operationId": "Train Name v1",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "tags": [
          "Reihung"
        ],
        "security": [],
        "parameters": [
          {
            "description": "TZ Number (e.g. 0169)",
            "in": "path",
            "name": "tz",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/oebb/experimental/trainInfo/{trainNumber}/{evaNumber}/{departureDate}": {
      "get": {
        "operationId": "TrainInfo experimental",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReturnType_typeofinfo_"
                }
              }
            }
          }
        },
        "tags": [
          "OEBB"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainNumber",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "in": "path",
            "name": "departureDate",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ]
      }
    },
    "/stopPlace/v1/{evaNumber}/trainOccupancy": {
      "get": {
        "operationId": "TrainOccupancy",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainOccupancyList"
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "description": "Currently only for VRR. <br>\nSource: https://github.com/derf/eva-to-efa-gw<br>\nThanks derf.",
        "tags": [
          "StopPlace"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "evaNumber",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          }
        ]
      }
    },
    "/hafas/v3/tripSearch": {
      "post": {
        "operationId": "TripSearch v3",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingResult"
                }
              }
            }
          }
        },
        "description": "Used to find trips [Verbindungssuche]\nA lot of the request options are raw HAFAS and not documented.",
        "tags": [
          "HAFAS"
        ],
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "profile",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/AllowedHafasProfile"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripSearchOptionsV3"
              }
            }
          }
        }
      }
    },
    "/reihung/v4/wagen/{trainNumber}": {
      "get": {
        "operationId": "Wagenreihung v4",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CoachSequenceInformation"
                    },
                    {}
                  ]
                }
              }
            }
          },
          "404": {
            "description": ""
          }
        },
        "description": "Returns the coachSequence at a specific stop for a specific train.\nWorks for OEBB stops and DB stops.\n\nReturns plannedSequence if no real time information is available",
        "tags": [
          "Reihung"
        ],
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "trainNumber",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "examples": {
              "Example 1": {
                "value": "23"
              },
              "Example 2": {
                "value": "42023"
              }
            }
          },
          {
            "description": "Departure at the stop you want the coachSequence for",
            "in": "query",
            "name": "departure",
            "required": true,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "needed for OEBB Reihung, usually 7 digits",
            "in": "query",
            "name": "evaNumber",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/EvaNumber"
            }
          },
          {
            "description": "needed for OEBB Reihung",
            "in": "query",
            "name": "initialDeparture",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "needed for new DB Reihung",
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "servers": [
    {
      "url": "https://bahn.expert/api"
    }
  ],
  "tags": [
    {
      "name": "HAFAS",
      "description": "All Operation use a HAFAS backend. By default it will be the HAFAS backend by DB Vertrieb (DB Navigator). Different backends can be selected by providing the query paramter profile."
    },
    {
      "name": "HAFAS Experimental"
    },
    {
      "name": "IRIS"
    },
    {
      "name": "OEBB"
    },
    {
      "name": "Reihung"
    },
    {
      "name": "StopPlace"
    }
  ]
}