name: next branch

on:
  push:
    branches:
      - next2

env:
  CI: "true"

jobs:
  commitlint:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v5
  node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: 22
      - name: install
        run: |
          corepack enable
          pnpm i --frozen-lockfile
        env:
          CYPRESS_INSTALL_BINARY: 0
      - name: types
        run: |
          pnpm test:ts
      - name: unit test
        run: |
          pnpm test:unit
      - name: lint
        run: |
          pnpm lint
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: docker
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: marudor/bahn.expert/standalone
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          platforms: linux/amd64,linux/arm64
          tags: "next,${{ github.sha }}"
  createDeploy:
    runs-on: ubuntu-latest
    needs:
      - docker
      - node
    steps:
      - name: "Create Deployment"
        uses: avakar/create-deployment@v1.0.2
        with:
          ref: ${{ github.sha }}
          task: deploy
          environment: next
          required_contexts: docker
          payload: '{"value_files": ["./config/_common.yml","./config/next.yml"],"release": "bahn-expert-next","namespace": "marudor","track": "stable"}'
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
