// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * RIS::Boards (Transporteure)
 * # Info  * powered by [Deutsche Bahn AG](https://www.bahn.de) * member of the RIS-API family, the building kit for traveller informations * for details check out [RIS::Boards](https://developers.deutschebahn.com/db-api-marketplace/apis/product/ris-boards-transporteure) in the DB API Marketplace  # Capabilities  ## Journey-Information  Provides a list of transports [Verkehrsmittel] departing / arriving at a particular stop-place [Haltestelle] and optional all other stop-places belonging to the same stop-place group [vertrieblicher Umsteigebereich] within a specific time window, including  * via stops [Unterwegshalte] with corresponding prioritization * transport-type [Produktklasse], category [Fahrtgattung], line [Linie], administration [Verwaltung / Betreiber], origin [Starthalt] and destination [Zielhalt] and direction-texts [Richtungstexte] * departures [Abfahrten] or arrivals [Ankünfte] with schedule [Soll] and forecast [Vorschau] times and platforms [Plattform / Gleis / Bussteig etc.], cancelled stops [Haltausfall], additional stops [Zusatzhalt], cancelled additional stops [zurückgenommene Zusatzhalte], possible restrictions on changing passengers [Fahrgastwechsel] and on demand stops [Bedarfshalt] * disruptions [Störungen], Messages [Freitexte], quality-deviations [Qualitätsabweichungen] and customer-reasons [Kundengründe] * references to other transports representing replacement [Ersatz], relief [Entlastung], portion-working [Vereinigung] including separatation [Trennung in] and continuation [Durchbindung] * information on replacement transports [Schienen-Ersatzverkehr und Bus-Notverkehr] * and much more  # Limitations / Known Issues  * journeys are limited to 22h ahead of start  # Getting Started  * learn how to [get started with openapi](https://developer-docs.deutschebahn.com/doku/apis/openapi.html) * check out our [coding-examples](https://developer-docs.deutschebahn.com/apis)
 *
 * The version of the OpenAPI document: 1.4.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Configuration } from './configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';

export const BASE_PATH =
  'https://apis.deutschebahn.com/db-api-marketplace/apis/ris-boards-transporteure/v1'.replace(
    /\/+$/,
    '',
  );

/**
 *
 * @export
 */
export const COLLECTION_FORMATS = {
  csv: ',',
  ssv: ' ',
  tsv: '\t',
  pipes: '|',
};

/**
 *
 * @export
 * @interface RequestArgs
 */
export interface RequestArgs {
  url: string;
  options: AxiosRequestConfig;
}

/**
 *
 * @export
 * @class BaseAPI
 */
export class BaseAPI {
  protected configuration: Configuration | undefined;

  constructor(
    configuration?: Configuration,
    protected basePath: string = BASE_PATH,
    protected axios: AxiosInstance = globalAxios,
  ) {
    if (configuration) {
      this.configuration = configuration;
      this.basePath = configuration.basePath || this.basePath;
    }
  }
}

/**
 *
 * @export
 * @class RequiredError
 * @extends {Error}
 */
export class RequiredError extends Error {
  constructor(
    public field: string,
    msg?: string,
  ) {
    super(msg);
    this.name = 'RequiredError';
  }
}
